{"version":3,"file":"static/js/752.69180b9b.chunk.js","mappings":"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","sources":["webpack://gymtracker/./src/components/ClosableMessage/ClosableMessage.module.scss?797b","components/ClosableMessage/ClosableMessage.tsx","webpack://gymtracker/./src/components/ConfirmDeleteModal/ConfirmDeleteModal.module.scss?8bf3","components/ConfirmDeleteModal/ConfirmDeleteModal.tsx","webpack://gymtracker/./src/components/CustomInput/CustomInput.module.scss?82c8","components/CustomInput/CustomInput.tsx","components/CustomModal/CustomModal.tsx","webpack://gymtracker/./src/components/DescriptionTitle/DescriptionTitle.module.scss?64ef","components/DescriptionTitle/DescriptionTitle.tsx","webpack://gymtracker/./src/components/Hexagon/Hexagon.module.scss?2ff0","components/Hexagon/Hexagon.tsx","webpack://gymtracker/./src/components/NumericInput/NumericInput.module.scss?4f22","components/NumericInput/NumericInput.tsx","components/PageWrapper/PageWrapper.tsx","webpack://gymtracker/./src/components/ResetButton/ResetButton.module.scss?4be0","components/ResetButton/ResetButton.tsx","webpack://gymtracker/./src/components/SettingButton/SettingButton.module.scss?b1fb","components/SettingButton/SettingButton.tsx","webpack://gymtracker/./src/components/SubTitle/SubTitle.module.scss?d9b0","components/SubTitle/SubTitle.tsx","hooks/useAnimatedInView .tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/CardOptions/CardOptions.module.scss?2f2b","pages/Workout/Exercises/ExerciseCard/CardOptions/CardOptions.tsx","pages/Workout/Exercises/ExerciseCard/DeleteIcon/ModalDelete/ModalDelete.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/DeleteIcon/DeleteIcon.module.scss?6012","pages/Workout/Exercises/ExerciseCard/DeleteIcon/DeleteIcon.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/EditInput/EditInput.module.scss?17ed","pages/Workout/Exercises/ExerciseCard/EditInput/EditInput.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/ExerciseCard.module.scss?e0ae","pages/Workout/Exercises/ExerciseCard/ExerciseCard.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/Exercises.module.scss?28b0","pages/Workout/Exercises/Exercises.tsx","components/EmptyBox/EmptyBox.tsx","utils/scrollToBottom.ts","webpack://gymtracker/./src/pages/Workout/ExerciseTable/ExerciseTable.module.scss?799a","webpack://gymtracker/./src/pages/Workout/ExerciseTable/TableFooter/TableFooter.module.scss?31d1","webpack://gymtracker/./src/pages/Workout/ExerciseTable/TableFooter/TrainingHistory/TrainingHistory.module.scss?acc6","pages/Workout/ExerciseTable/TableFooter/TrainingHistory/TrainingHistory.tsx","pages/Workout/ExerciseTable/TableFooter/TableFooter.tsx","webpack://gymtracker/./src/pages/Workout/ExerciseTable/BestResult/BestResult.module.scss?47bd","pages/Workout/ExerciseTable/BestResult/BestResult.tsx","pages/Workout/ExerciseTable/DeleteWorkout/DeleteWorkout.tsx","webpack://gymtracker/./src/pages/Workout/ExerciseTable/DataTable/DataTable.module.scss?11df","pages/Workout/ExerciseTable/DataTable/DataTable.tsx","pages/Workout/ExerciseTable/ExerciseTable.tsx","webpack://gymtracker/./src/pages/Workout/AddExercise/AddExercise.module.scss?140e","pages/Workout/AddExercise/AddExercise.tsx","pages/Workout/Workout.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"customMessage\":\"ClosableMessage_customMessage__I89Df\",\"closeIcon\":\"ClosableMessage_closeIcon__M7QGN\"};","import { message } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\n\r\nimport { ClosableMessagePropsType } from \"../../types/types\";\r\n\r\nimport styles from \"./ClosableMessage.module.scss\";\r\n\r\nexport const ClosableMessage = ({\r\n  type,\r\n  content,\r\n}: ClosableMessagePropsType) => {\r\n  const key = \"closable-message\";\r\n\r\n  message[type]({\r\n    key,\r\n    content: (\r\n      <>\r\n        {content}\r\n        <CloseOutlined\r\n          onClick={() => message.destroy(key)}\r\n          className={styles.closeIcon}\r\n        />\r\n      </>\r\n    ),\r\n    className: styles.customMessage,\r\n  });\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ConfirmDeleteModal_title__kgkq+\",\"buttons\":\"ConfirmDeleteModal_buttons__T8jan\"};","import React from \"react\";\r\nimport { CloseOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CustomModal } from \"../CustomModal/CustomModal\";\r\nimport { ResetButton } from \"../ResetButton/ResetButton\";\r\nimport { IConfirmDeleteModal } from \"../../types/types\";\r\nimport { CustomButton } from \"../CustomButton/CustomButton\";\r\n\r\nimport styles from \"./ConfirmDeleteModal.module.scss\";\r\n\r\nexport const ConfirmDeleteModal: React.FC<IConfirmDeleteModal> = ({\r\n  text,\r\n  onClick,\r\n  isModalOpen,\r\n  handleCancel,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <CustomModal\r\n      open={isModalOpen}\r\n      onCancel={handleCancel}\r\n      footer={false}\r\n      isModalOpen={isModalOpen}\r\n    >\r\n      <p className={styles.title}>{text}</p>\r\n      <div className={styles.buttons}>\r\n        <CustomButton icon={<CloseOutlined />} onClick={handleCancel}>\r\n          {t(\"close\")}\r\n        </CustomButton>\r\n        <ResetButton\r\n          children={t(\"delete\")}\r\n          onClick={onClick}\r\n          icon={<DeleteOutlined />}\r\n        />\r\n      </div>\r\n    </CustomModal>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"CustomInput_inputWrapper__wz8SN\",\"inputLabel\":\"CustomInput_inputLabel__b-QWx\",\"inputField\":\"CustomInput_inputField__baNtE\"};","import { Form, Input } from \"antd\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { ICustomInputProps, FieldType } from \"../../types/types\";\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\n\r\nimport styles from \"./CustomInput.module.scss\";\r\n\r\nexport const CustomInput = <T extends string | number = string>({\r\n  name,\r\n  text,\r\n  placeholder,\r\n  isRequired = true,\r\n  className,\r\n  onChange,\r\n  value,\r\n}: ICustomInputProps<T>) => {\r\n  const { ref, controls } = useAnimatedInView();\r\n  const { t } = useTranslation();\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let inputValue: T = e.target.value as T;\r\n\r\n    if (typeof value === \"number\" && !isNaN(Number(e.target.value))) {\r\n      inputValue = Number(e.target.value) as T;\r\n    }\r\n\r\n    if (onChange) {\r\n      onChange(inputValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      ref={ref}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n      className={styles.inputWrapper}\r\n    >\r\n      <Form.Item<FieldType>\r\n        label={<span className={styles.inputLabel}>{t(text)}</span>}\r\n        name={name}\r\n        rules={[{ required: isRequired }]}\r\n      >\r\n        <Input\r\n          placeholder={placeholder}\r\n          className={`${styles.inputField} ${className}`}\r\n          allowClear\r\n          onChange={handleChange}\r\n          value={value?.toString()}\r\n          autoComplete=\"off\"\r\n        />\r\n      </Form.Item>\r\n    </motion.div>\r\n  );\r\n};\r\n","import { ConfigProvider, Modal } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { ICustomModalProps } from \"../../types/types\";\r\n\r\nexport const CustomModal: React.FC<ICustomModalProps> = ({\r\n  open,\r\n  onCancel,\r\n  footer = null,\r\n  children,\r\n  className,\r\n}) => {\r\n  useEffect(() => {\r\n    if (open) {\r\n      document.body.style.overflow = \"hidden\";\r\n    } else {\r\n      document.body.style.overflow = \"auto\";\r\n    }\r\n\r\n    return () => {\r\n      document.body.style.overflow = \"auto\";\r\n    };\r\n  }, [open]);\r\n\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        components: {\r\n          Modal: {\r\n            contentBg: \"#141414\",\r\n            colorIcon: \"lightgray\",\r\n            colorIconHover: \"gray\",\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <Modal\r\n        open={open}\r\n        onCancel={onCancel}\r\n        footer={footer}\r\n        className={className}\r\n        centered={true}\r\n      >\r\n        {children}\r\n      </Modal>\r\n    </ConfigProvider>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionTitle\":\"DescriptionTitle_descriptionTitle__E-lRw\",\"start\":\"DescriptionTitle_start__FSu7h\",\"center\":\"DescriptionTitle_center__eJvMJ\",\"end\":\"DescriptionTitle_end__uV+MA\"};","import { motion } from \"framer-motion\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\nimport { IDescriptionTitleAndText } from \"../../types/types\";\r\n\r\nimport styles from \"./DescriptionTitle.module.scss\";\r\n\r\nexport const DescriptionTitle: React.FC<IDescriptionTitleAndText> = ({\r\n  text,\r\n  textAlign = \"start\",\r\n  className,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { ref, controls } = useAnimatedInView();\r\n\r\n  return (\r\n    <motion.h2\r\n      ref={ref}\r\n      className={`${styles.descriptionTitle} ${styles[textAlign]} ${className}`}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n    >\r\n      {t(text)}\r\n    </motion.h2>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Hexagon_wrapper__orCOo\",\"hexagon\":\"Hexagon_hexagon__Lz5zU\",\"imageContainer\":\"Hexagon_imageContainer__CcV75\",\"imageText\":\"Hexagon_imageText__dxduD\"};","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { IHexagonProps } from \"../../types/types\";\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\n\r\nimport styles from \"./Hexagon.module.scss\";\r\n\r\nexport const Hexagon: React.FC<IHexagonProps> = ({\r\n  text,\r\n  className,\r\n  onClick,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { ref, controls } = useAnimatedInView();\r\n\r\n  return (\r\n    <motion.div\r\n      ref={ref}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n      className={styles.wrapper}\r\n    >\r\n      <div className={styles.imageContainer} onClick={onClick}>\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/assets/Icons/Hexagon/Hexagon.svg\"}\r\n          alt=\"Hexagon\"\r\n          className={styles.hexagon}\r\n        />\r\n        <span className={`${styles.imageText} ${className}`}>{t(text)}</span>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"NumericInput_input__1SATw\"};","import React, { forwardRef, ChangeEvent } from \"react\";\r\n\r\nimport { INumericInputProps } from \"../../types/types\";\r\n\r\nimport styles from \"./NumericInput.module.scss\";\r\n\r\nconst NumericInput: React.ForwardRefRenderFunction<\r\n  HTMLInputElement,\r\n  INumericInputProps\r\n> = ({ value, onChange, onBlur, className, placeholder }, ref) => {\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let value = e.target.value;\r\n    value = value.replace(\",\", \".\");\r\n\r\n    if (value.length > 1 && value.startsWith(\"0\") && !value.startsWith(\"0.\")) {\r\n      value = value.substring(1);\r\n    }\r\n\r\n    const match = value.match(/^\\d*\\.?\\d{0,2}/);\r\n    if (match) {\r\n      onChange(match[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      ref={ref}\r\n      value={value}\r\n      onChange={handleChange}\r\n      onBlur={onBlur}\r\n      className={`${styles.input} ${className}`}\r\n      type=\"text\"\r\n      inputMode=\"decimal\"\r\n      pattern=\"[0-9]*[.,]?[0-9]*\"\r\n      placeholder={placeholder}\r\n    />\r\n  );\r\n};\r\n\r\nexport default forwardRef(NumericInput);\r\n","import React from \"react\";\r\n\r\nimport { IPageWrapperProps } from \"../../types/types\";\r\n\r\nconst container: React.CSSProperties = {\r\n  maxWidth: \"1200px\",\r\n  margin: \"0 auto\",\r\n};\r\n\r\nexport const PageWrapper: React.FC<IPageWrapperProps> = ({ children }) => {\r\n  return <div style={container}>{children}</div>;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"reset\":\"ResetButton_reset__efwrw\"};","import React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nimport { IResetButtonType } from \"../../types/types\";\r\n\r\nimport styles from \"./ResetButton.module.scss\";\r\n\r\nexport const ResetButton: React.FC<IResetButtonType> = ({\r\n  onClick,\r\n  children,\r\n  icon,\r\n}) => {\r\n  return (\r\n    <Button className={styles.reset} onClick={onClick} icon={icon}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"SettingButton_btn__TNlVz\"};","import { Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nimport { SettingButtonPropsType } from \"../../types/types\";\r\n\r\nimport styles from \"./SettingButton.module.scss\";\r\n\r\nexport const SettingButton: React.FC<SettingButtonPropsType> = ({\r\n  onClick,\r\n  icon,\r\n  children,\r\n  className,\r\n}) => {\r\n  return (\r\n    <Button\r\n      onClick={onClick}\r\n      icon={icon}\r\n      className={`${styles.btn} ${className}`}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"subTitle\":\"SubTitle_subTitle__6A8PN\"};","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\nimport { ISubTitleType } from \"../../types/types\";\r\n\r\nimport styles from \"./SubTitle.module.scss\";\r\n\r\nexport const SubTitle: React.FC<ISubTitleType> = ({ children, className }) => {\r\n  const { ref, controls } = useAnimatedInView();\r\n\r\n  return (\r\n    <motion.p\r\n      ref={ref}\r\n      className={`${styles.subTitle} ${className}`}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n    >\r\n      {children}\r\n    </motion.p>\r\n  );\r\n};\r\n","import { useAnimation, Variants } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useAnimatedInView = (\r\n  threshold: number = 0.1,\r\n  animationVariants?: Variants\r\n) => {\r\n  const controls = useAnimation();\r\n  const [ref, inView] = useInView({ threshold, triggerOnce: true });\r\n\r\n  useEffect(() => {\r\n    if (inView) {\r\n      controls.start(\"visible\");\r\n    }\r\n  }, [controls, inView]);\r\n\r\n  return { ref, controls, animationVariants };\r\n};\r\n\r\nexport const animation = {\r\n  hidden: { opacity: 0 },\r\n  visible: { opacity: 1, transition: { duration: 1 } },\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"CardOptions_options__F-aCP\",\"star\":\"CardOptions_star__tS7rd\",\"active\":\"CardOptions_active__E3ut+\",\"editExercise\":\"CardOptions_editExercise__JcxiY\"};","import React, { useState } from \"react\";\r\nimport { CheckOutlined, EditOutlined, StarFilled } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { CardOptionsPropsType } from \"../../../../../types/types\";\r\nimport { SettingButton } from \"../../../../../components/SettingButton/SettingButton\";\r\nimport { ClosableMessage } from \"../../../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./CardOptions.module.scss\";\r\n\r\nexport const CardOptions: React.FC<CardOptionsPropsType> = React.memo(\r\n  ({\r\n    item,\r\n    category,\r\n    setData,\r\n    setCurrentEditingId,\r\n    setNewName,\r\n    editMode,\r\n    setEditMode,\r\n  }) => {\r\n    const { t } = useTranslation();\r\n    const [isActive, setIsActive] = useState<boolean>(false);\r\n\r\n    const toggleFavorite = async (\r\n      exerciseId: string,\r\n      currentStatus: boolean\r\n    ) => {\r\n      try {\r\n        const user = getAuth().currentUser;\r\n        if (user) {\r\n          const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n          const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n          if (exercisesDoc.exists()) {\r\n            const exercisesData = exercisesDoc.data();\r\n            const favoriteExercisesCount = exercisesData.exercises.filter(\r\n              (exercise: { isFavorite: boolean }) => exercise.isFavorite\r\n            ).length;\r\n\r\n            if (!currentStatus && favoriteExercisesCount >= 3) {\r\n              ClosableMessage({\r\n                type: \"warning\",\r\n                content: t(\"maxFavoritesReached\"),\r\n              });\r\n              return;\r\n            }\r\n\r\n            let updatedExercises = exercisesData.exercises.map(\r\n              (exercise: { id: string }) => {\r\n                if (exercise.id === exerciseId) {\r\n                  return { ...exercise, isFavorite: !currentStatus };\r\n                }\r\n                return exercise;\r\n              }\r\n            );\r\n\r\n            await updateDoc(exercisesDocRef, {\r\n              exercises: updatedExercises,\r\n            });\r\n\r\n            const translatedCategory = t(category);\r\n            const filteredData = updatedExercises.filter(\r\n              (exercise: { category: string }) =>\r\n                t(exercise.category) === translatedCategory\r\n            );\r\n            setData(filteredData);\r\n\r\n            if (!currentStatus) {\r\n              ClosableMessage({\r\n                type: \"success\",\r\n                content: t(\"addedToFavorite\"),\r\n              });\r\n            } else {\r\n              ClosableMessage({\r\n                type: \"success\",\r\n                content: t(\"removedFromFavorite\"),\r\n              });\r\n            }\r\n\r\n            setIsActive(!isActive);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        ClosableMessage({ type: \"error\", content: t(\"errorUpdatingFavorite\") });\r\n      }\r\n    };\r\n\r\n    const handleEditClick = (exerciseId: string, currentName: string) => {\r\n      setCurrentEditingId(exerciseId);\r\n      setNewName(currentName);\r\n      setEditMode(true);\r\n    };\r\n\r\n    return (\r\n      <div className={styles.options}>\r\n        <SettingButton\r\n          icon={<StarFilled />}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            toggleFavorite(item.id, item.isFavorite);\r\n          }}\r\n          className={`${styles.star} ${item.isFavorite ? styles.active : \"\"}`}\r\n        >\r\n          <span>{t(\"favorite\")}</span>\r\n        </SettingButton>\r\n        {editMode ? (\r\n          <div>\r\n            <SettingButton icon={<CheckOutlined />}>\r\n              <span>{t(\"save\")}</span>\r\n            </SettingButton>\r\n          </div>\r\n        ) : (\r\n          <SettingButton\r\n            icon={<EditOutlined />}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleEditClick(item.id, item.name);\r\n            }}\r\n            className={styles.editExercise}\r\n          >\r\n            <span>{t(\"editName\")}</span>\r\n          </SettingButton>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  deleteDoc,\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { ModalDeletePropsType, IExercise } from \"../../../../../../types/types\";\r\nimport { scrollToTop } from \"../../../../../../utils/scrollToTop\";\r\n\r\nimport { ClosableMessage } from \"../../../../../../components/ClosableMessage/ClosableMessage\";\r\nimport { ConfirmDeleteModal } from \"../../../../../../components/ConfirmDeleteModal/ConfirmDeleteModal\";\r\n\r\nexport const ModalDelete: React.FC<ModalDeletePropsType> = React.memo(\r\n  ({\r\n    setLoading,\r\n    setIsModalOpen,\r\n    category,\r\n    setData,\r\n    isModalOpen,\r\n    handleCancel,\r\n    item,\r\n    setConfirm,\r\n    setSelectedExercise,\r\n  }) => {\r\n    const { t } = useTranslation();\r\n    const user = getAuth().currentUser;\r\n\r\n    const handleDeleteCard = async (exerciseId: string) => {\r\n      setLoading(true);\r\n      try {\r\n        if (user) {\r\n          const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n          const setsCollectionRef = doc(getFirestore(), \"sets\", exerciseId);\r\n          const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n          await deleteDoc(setsCollectionRef);\r\n          if (exercisesDoc.exists()) {\r\n            const exercisesData = exercisesDoc.data();\r\n            let updatedExercises: IExercise[] = [];\r\n\r\n            if (exercisesData && exercisesData.exercises) {\r\n              updatedExercises = exercisesData.exercises.filter(\r\n                (exercise: IExercise) => exercise.id !== exerciseId\r\n              );\r\n\r\n              await updateDoc(exercisesDocRef, {\r\n                exercises: updatedExercises,\r\n              });\r\n              const filteredData = updatedExercises.filter(\r\n                (exercise: IExercise) => t(exercise.category) === t(category)\r\n              );\r\n              setData(filteredData);\r\n            }\r\n          }\r\n          setConfirm(false);\r\n          setIsModalOpen(false);\r\n          setLoading(false);\r\n          setSelectedExercise(null);\r\n          scrollToTop();\r\n          ClosableMessage({ type: \"success\", content: t(\"exerciseDeleted\") });\r\n        }\r\n      } catch (error) {\r\n        ClosableMessage({ type: \"error\", content: t(\"errorDeletingExercise\") });\r\n      }\r\n    };\r\n\r\n    return (\r\n      <ConfirmDeleteModal\r\n        text={t(\"confirmDeletingExercise\")}\r\n        onClick={(e: { stopPropagation: () => void }) => {\r\n          e.stopPropagation();\r\n          handleDeleteCard(item.id);\r\n        }}\r\n        isModalOpen={isModalOpen}\r\n        handleCancel={handleCancel}\r\n      />\r\n    );\r\n  }\r\n);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"deleteIconContainer\":\"DeleteIcon_deleteIconContainer__IWqYi\",\"numberWrapper\":\"DeleteIcon_numberWrapper__YRY9G\",\"deleteIcon\":\"DeleteIcon_deleteIcon__ntbKM\"};","import { CloseOutlined } from \"@ant-design/icons\";\r\nimport { Tooltip } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { DeleteIconPropsType } from \"../../../../../types/types\";\r\n\r\nimport { ModalDelete } from \"./ModalDelete/ModalDelete\";\r\nimport styles from \"./DeleteIcon.module.scss\";\r\n\r\nexport const DeleteIcon: React.FC<DeleteIconPropsType> = React.memo(\r\n  ({\r\n    setLoading,\r\n    setIsModalOpen,\r\n    category,\r\n    setData,\r\n    isModalOpen,\r\n    handleCancel,\r\n    item,\r\n    index,\r\n    setSelectedExercise,\r\n  }) => {\r\n    const { t } = useTranslation();\r\n    const [confirm, setConfirm] = useState<boolean>(false);\r\n\r\n    const handleConfirm = () => {\r\n      setConfirm(true);\r\n      setIsModalOpen(true);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div className={styles.deleteIconContainer}>\r\n          <div className={styles.numberWrapper}>{index + 1}</div>\r\n          <Tooltip title={t(\"deleteExercise\")}>\r\n            <CloseOutlined\r\n              className={styles.deleteIcon}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                handleConfirm();\r\n              }}\r\n            />\r\n          </Tooltip>\r\n        </div>\r\n        {confirm && (\r\n          <ModalDelete\r\n            setLoading={setLoading}\r\n            category={category}\r\n            setData={setData}\r\n            isModalOpen={isModalOpen}\r\n            setIsModalOpen={setIsModalOpen}\r\n            handleCancel={handleCancel}\r\n            item={item}\r\n            setConfirm={setConfirm}\r\n            setSelectedExercise={setSelectedExercise}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"editInput\":\"EditInput_editInput__CnmRa\"};","import React, { useEffect, useRef } from \"react\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { EditInputPropsType, IExercise } from \"../../../../../types/types\";\r\nimport { ClosableMessage } from \"../../../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./EditInput.module.scss\";\r\n\r\nexport const EditInput: React.FC<EditInputPropsType> = React.memo(\r\n  ({\r\n    newName,\r\n    editMode,\r\n    currentEditingId,\r\n    setCurrentEditingId,\r\n    category,\r\n    setData,\r\n    setEditMode,\r\n    setNewName,\r\n  }) => {\r\n    const user = getAuth().currentUser;\r\n    const { t } = useTranslation();\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n    useEffect(() => {\r\n      if (editMode && inputRef.current) {\r\n        inputRef.current.focus();\r\n      }\r\n    }, [editMode]);\r\n\r\n    const changeExerciseName = async (exerciseId: string, newName: string) => {\r\n      try {\r\n        if (user) {\r\n          const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n          const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n          if (exercisesDoc.exists()) {\r\n            const exercisesData = exercisesDoc.data();\r\n\r\n            const currentExercise = exercisesData.exercises.find(\r\n              (exercise: { id: string }) => exercise.id === exerciseId\r\n            );\r\n\r\n            if (currentExercise && currentExercise.name === newName) {\r\n              ClosableMessage({\r\n                type: \"warning\",\r\n                content: t(\"nameNotChanged\"),\r\n              });\r\n              return;\r\n            }\r\n\r\n            if (newName.trim().length < 3) {\r\n              ClosableMessage({\r\n                type: \"error\",\r\n                content: t(\"nameMin3Symbols\"),\r\n              });\r\n              return;\r\n            }\r\n\r\n            const nameExists = exercisesData.exercises.some(\r\n              (exercise: { id: string; name: string }) =>\r\n                exercise.id !== exerciseId && exercise.name === newName\r\n            );\r\n\r\n            if (nameExists) {\r\n              ClosableMessage({\r\n                type: \"error\",\r\n                content: t(\"nameAlreadyExists\"),\r\n              });\r\n              return;\r\n            }\r\n\r\n            let updatedExercises = exercisesData.exercises.map(\r\n              (exercise: { id: string; name: string }) => {\r\n                if (exercise.id === exerciseId) {\r\n                  return { ...exercise, name: newName };\r\n                }\r\n                return exercise;\r\n              }\r\n            );\r\n\r\n            await updateDoc(exercisesDocRef, {\r\n              exercises: updatedExercises,\r\n            });\r\n\r\n            reloadData(updatedExercises);\r\n\r\n            ClosableMessage({\r\n              type: \"success\",\r\n              content: t(\"nameUpdated\"),\r\n            });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        ClosableMessage({ type: \"error\", content: t(\"nameChangeFailed\") });\r\n      }\r\n    };\r\n\r\n    const reloadData = async (updatedExercises: any) => {\r\n      const exercisesDocRef = doc(getFirestore(), \"exercises\", user!.uid);\r\n      const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n      if (exercisesDoc.exists()) {\r\n        const exercisesData = exercisesDoc.data();\r\n\r\n        const filteredData = exercisesData.exercises\r\n          .filter(\r\n            (exercise: { category: string }) =>\r\n              t(exercise.category) === t(category)\r\n          )\r\n          .map((exercise: IExercise) => ({\r\n            id: exercise.id,\r\n            name: t(exercise.name),\r\n            category: exercise.category,\r\n            bestResult: exercise.bestResult,\r\n            isFavorite: exercise.isFavorite,\r\n          }));\r\n\r\n        setData(filteredData);\r\n      }\r\n    };\r\n\r\n    const handleEditKeyDown = (event: React.KeyboardEvent) => {\r\n      if (event.key === \"Enter\" && currentEditingId) {\r\n        changeExerciseName(currentEditingId, newName);\r\n        setEditMode(false);\r\n        setCurrentEditingId(null);\r\n      }\r\n    };\r\n\r\n    const handleBlur = () => {\r\n      if (currentEditingId) {\r\n        changeExerciseName(currentEditingId, newName);\r\n        setEditMode(false);\r\n        setCurrentEditingId(null);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <input\r\n        value={newName}\r\n        className={styles.editInput}\r\n        onChange={(e) => setNewName(e.target.value)}\r\n        onKeyDown={handleEditKeyDown}\r\n        onBlur={handleBlur}\r\n        ref={inputRef}\r\n      />\r\n    );\r\n  }\r\n);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cardItem\":\"ExerciseCard_cardItem__2AKct\",\"active\":\"ExerciseCard_active__7n1-4\",\"exerciseContainer\":\"ExerciseCard_exerciseContainer__nXbmq\",\"exerciseName\":\"ExerciseCard_exerciseName__MCYS-\"};","import React, { useState } from \"react\";\r\n\r\nimport { IExercise, ExerciseCardPropsType } from \"../../../../types/types\";\r\n\r\nimport { CardOptions } from \"./CardOptions/CardOptions\";\r\nimport { DeleteIcon } from \"./DeleteIcon/DeleteIcon\";\r\nimport { EditInput } from \"./EditInput/EditInput\";\r\nimport styles from \"./ExerciseCard.module.scss\";\r\n\r\nexport const ExerciseCard: React.FC<ExerciseCardPropsType> = React.memo(\r\n  ({\r\n    item,\r\n    onSelectExercise,\r\n    category,\r\n    setData,\r\n    setLoading,\r\n    activeCardId,\r\n    setActiveCardId,\r\n    index,\r\n    exercisesRef,\r\n    setSelectedExercise,\r\n  }) => {\r\n    const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n    const [newName, setNewName] = useState<string>(\"\");\r\n    const [currentEditingId, setCurrentEditingId] = useState<string | null>(\r\n      null\r\n    );\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const handleCancel = (e: { stopPropagation: () => void }) => {\r\n      e.stopPropagation();\r\n      setIsModalOpen(false);\r\n    };\r\n\r\n    const handleCardClick = (item: IExercise) => {\r\n      setActiveCardId(item.id);\r\n      onSelectExercise(item);\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className={`${styles.cardItem} ${\r\n          activeCardId === item.id ? styles.active : \"\"\r\n        }`}\r\n        onClick={() => handleCardClick(item)}\r\n        ref={exercisesRef}\r\n      >\r\n        <DeleteIcon\r\n          setLoading={setLoading}\r\n          setIsModalOpen={setIsModalOpen}\r\n          category={category}\r\n          setData={setData}\r\n          isModalOpen={isModalOpen}\r\n          handleCancel={handleCancel}\r\n          item={item}\r\n          index={index}\r\n          setSelectedExercise={setSelectedExercise}\r\n        />\r\n        {currentEditingId === item.id && editMode ? (\r\n          <EditInput\r\n            newName={newName}\r\n            editMode={editMode}\r\n            currentEditingId={currentEditingId}\r\n            setCurrentEditingId={setCurrentEditingId}\r\n            category={category}\r\n            setData={setData}\r\n            setEditMode={setEditMode}\r\n            setNewName={setNewName}\r\n          />\r\n        ) : (\r\n          <div className={styles.exerciseContainer}>\r\n            <span className={styles.exerciseName}>{item.name}</span>\r\n          </div>\r\n        )}\r\n        <CardOptions\r\n          item={item}\r\n          category={category}\r\n          setData={setData}\r\n          setCurrentEditingId={setCurrentEditingId}\r\n          setNewName={setNewName}\r\n          editMode={editMode}\r\n          setEditMode={setEditMode}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Exercises_title__ThgWQ\",\"description\":\"Exercises_description__cykz7\",\"cards\":\"Exercises_cards__+xw7k\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Divider, Empty } from \"antd\";\r\n\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport { IExercise, IExercisesProps } from \"../../../types/types\";\r\nimport { Loader } from \"../../../components/Loader/Loader\";\r\nimport { ClosableMessage } from \"../../../components/ClosableMessage/ClosableMessage\";\r\nimport {\r\n  animation,\r\n  useAnimatedInView,\r\n} from \"../../../hooks/useAnimatedInView \";\r\n\r\nimport { ExerciseCard } from \"./ExerciseCard/ExerciseCard\";\r\nimport styles from \"./Exercises.module.scss\";\r\n\r\nexport const Exercises: React.FC<IExercisesProps> = React.memo(\r\n  ({\r\n    category,\r\n    updateTrigger,\r\n    onSelectExercise,\r\n    exercisesRef,\r\n    activeCardId,\r\n    setActiveCardId,\r\n    setSelectedExercise,\r\n    data,\r\n    setData,\r\n  }) => {\r\n    const user = getAuth().currentUser;\r\n    const { ref, controls } = useAnimatedInView();\r\n    const { t } = useTranslation();\r\n    const [loading, setLoading] = useState<boolean>(true);\r\n\r\n    useEffect(() => {\r\n      const fetchExercises = async () => {\r\n        setLoading(true);\r\n        try {\r\n          if (user) {\r\n            const exercisesDoc = await getDoc(\r\n              doc(getFirestore(), \"exercises\", user.uid)\r\n            );\r\n\r\n            if (exercisesDoc.exists()) {\r\n              const filteredData = exercisesDoc\r\n                .data()\r\n                .exercises.filter((exercise: IExercise) => {\r\n                  const exerciseCategoryTranslated = t(exercise.category);\r\n                  return exerciseCategoryTranslated === t(category);\r\n                });\r\n              setData(filteredData);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          ClosableMessage({\r\n            type: \"error\",\r\n            content: t(\"errorFetchingExercises\"),\r\n          });\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      fetchExercises();\r\n    }, [category, t, updateTrigger, user, setData]);\r\n\r\n    return (\r\n      <>\r\n        <SubTitle children={t(\"exercises\")} className={styles.title} />\r\n        <motion.div\r\n          ref={ref}\r\n          initial=\"hidden\"\r\n          animate={controls}\r\n          variants={animation}\r\n          className={styles.description}\r\n        >\r\n          {t(\"chooseExercise\")}\r\n        </motion.div>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <div className={styles.cards}>\r\n            {data.length ? (\r\n              data.map((item: IExercise, index) => (\r\n                <ExerciseCard\r\n                  key={item.id}\r\n                  item={item}\r\n                  onSelectExercise={onSelectExercise}\r\n                  category={category}\r\n                  setData={setData}\r\n                  setLoading={setLoading}\r\n                  activeCardId={activeCardId}\r\n                  setActiveCardId={setActiveCardId}\r\n                  index={index}\r\n                  exercisesRef={exercisesRef}\r\n                  setSelectedExercise={setSelectedExercise}\r\n                />\r\n              ))\r\n            ) : (\r\n              <Empty\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                description={\r\n                  <span style={{ color: \"#ffffff\" }}>\r\n                    {t(\"noFavoriteExercises\")}\r\n                  </span>\r\n                }\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n        <Divider style={{ backgroundColor: \"gray\" }} />\r\n      </>\r\n    );\r\n  }\r\n);\r\n","import { Empty } from \"antd\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const EmptyBox: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Empty\r\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n      description={<span style={{ color: \"#ffffff\" }}>{t(\"noData\")}</span>}\r\n    />\r\n  );\r\n};\r\n","export const scrollToBottom = () =>\r\n  setTimeout(() => {\r\n    window.scrollTo({\r\n      left: 0,\r\n      top: document.body.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, 150);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"ExerciseTable_subtitle__dWB0y\",\"dateWorkout\":\"ExerciseTable_dateWorkout__OEn0m\",\"emptyBox\":\"ExerciseTable_emptyBox__Q58Yp\"};","// extracted by mini-css-extract-plugin\nexport default {\"tableFooter\":\"TableFooter_tableFooter__Vdj4o\",\"saveBtn\":\"TableFooter_saveBtn__CLumP\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TrainingHistory_container__1IuQh\",\"numberWrapper\":\"TrainingHistory_numberWrapper__z8p-2\",\"collapse\":\"TrainingHistory_collapse__X+YQG\",\"historyWorkout\":\"TrainingHistory_historyWorkout__wDKRi\",\"trainingHistory\":\"TrainingHistory_trainingHistory__Dv31W\"};","import React from \"react\";\r\nimport { Collapse } from \"antd\";\r\nimport { RightOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { TrainingHistoryPropsType } from \"../../../../../types/types\";\r\nimport { scrollToBottom } from \"../../../../../utils/scrollToBottom\";\r\n\r\nimport styles from \"./TrainingHistory.module.scss\";\r\n\r\nexport const TrainingHistory: React.FC<TrainingHistoryPropsType> = React.memo(\r\n  ({ showHistory, workouts, workoutDates }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const formatDate = (dateString: string) => {\r\n      return new Date(dateString).toLocaleDateString();\r\n    };\r\n\r\n    const sortedData = workoutDates\r\n      .map((date, index) => ({ date, workout: workouts[index] }))\r\n      .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\r\n\r\n    const genExtra = () => (\r\n      <img\r\n        src={\r\n          process.env.PUBLIC_URL + \"/assets/Icons/AdditionalIcons/history.png\"\r\n        }\r\n        alt=\"History\"\r\n      />\r\n    );\r\n\r\n    const items = sortedData.map((item, index) => ({\r\n      key: index.toString(),\r\n      label: (\r\n        <p onClick={scrollToBottom}>\r\n          <span className={styles.numberWrapper}>{index + 1}</span>\r\n          {t(\"workoutFor\")} <span> {formatDate(item.date)} </span>\r\n        </p>\r\n      ),\r\n      children: (\r\n        <div className={styles.historyWorkout}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>{t(\"set\")}</th>\r\n                <th>{t(\"weight\")}</th>\r\n                <th>{t(\"reps\")}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {item.workout.map((w, i) => (\r\n                <tr key={i}>\r\n                  <td>{w.set}.</td>\r\n                  <td>{w.weight}</td>\r\n                  <td>{w.reps}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ),\r\n      extra: genExtra(),\r\n    }));\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        {showHistory && workouts.length > 0 && (\r\n          <>\r\n            <Collapse\r\n              bordered={false}\r\n              expandIcon={({ isActive }) => (\r\n                <RightOutlined rotate={isActive ? 90 : 0} />\r\n              )}\r\n              items={items}\r\n              className={styles.collapse}\r\n            />\r\n            <div className={styles.trainingHistory}>\r\n              {t(\"limitTrainingHistory\")}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  RightOutlined,\r\n  CloseOutlined,\r\n  LeftOutlined,\r\n  PlusOutlined,\r\n  CheckOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  writeBatch,\r\n} from \"firebase/firestore\";\r\n\r\nimport { CustomButton } from \"../../../../components/CustomButton/CustomButton\";\r\nimport {\r\n  ExerciseTableType,\r\n  TableFooterPropsType,\r\n} from \"../../../../types/types\";\r\nimport { SettingButton } from \"../../../../components/SettingButton/SettingButton\";\r\n\r\nimport styles from \"./TableFooter.module.scss\";\r\nimport { TrainingHistory } from \"./TrainingHistory/TrainingHistory\";\r\n\r\nexport const TableFooter: React.FC<TableFooterPropsType> = React.memo(\r\n  ({\r\n    selectedExercise,\r\n    data,\r\n    setData,\r\n    setEditWeight,\r\n    saveExerciseData,\r\n    onWorkoutDateChange,\r\n    setCurrentWorkout,\r\n    addRowBtn,\r\n    setAddRowBtn,\r\n    saveBtn,\r\n    setSaveBtn,\r\n    setDeleteBtn,\r\n    showHistory,\r\n    setShowHistory,\r\n  }) => {\r\n    const { t } = useTranslation();\r\n    const [workouts, setWorkouts] = useState<ExerciseTableType[][]>([]);\r\n    const [workoutDates, setWorkoutDates] = useState<string[]>([]);\r\n    const [currentWorkoutIndex, setCurrentWorkoutIndex] = useState<number>(-1);\r\n    const [hideButtons, setHideButtons] = useState(false);\r\n\r\n    useEffect(() => {\r\n      const loadWorkouts = async () => {\r\n        setHideButtons(true);\r\n        setCurrentWorkoutIndex(-1);\r\n        setAddRowBtn(false);\r\n        setSaveBtn(false);\r\n        setDeleteBtn(false);\r\n        setCurrentWorkout(false);\r\n        setData([]);\r\n\r\n        if (selectedExercise) {\r\n          const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n          try {\r\n            const docSnapshot = await getDoc(\r\n              doc(setsCollectionRef, selectedExercise.id)\r\n            );\r\n            if (docSnapshot.exists()) {\r\n              const workoutsData = docSnapshot.data()?.workouts || [];\r\n\r\n              if (Array.isArray(workoutsData) && workoutsData.length > 0) {\r\n                setWorkouts(\r\n                  workoutsData.map((workout) => workout.approaches || [])\r\n                );\r\n                setWorkoutDates(workoutsData.map((workout) => workout.date));\r\n                const lastIndex = workoutsData.length - 1;\r\n                setCurrentWorkoutIndex(lastIndex);\r\n                setHideButtons(false);\r\n                onWorkoutDateChange(workoutsData[lastIndex].date);\r\n              } else {\r\n                setData([]);\r\n                setWorkoutDates([]);\r\n                setCurrentWorkoutIndex(-1);\r\n                setHideButtons(true);\r\n              }\r\n            }\r\n          } catch (error) {\r\n            console.error(error);\r\n          }\r\n        }\r\n      };\r\n\r\n      loadWorkouts();\r\n    }, [\r\n      selectedExercise,\r\n      onWorkoutDateChange,\r\n      setAddRowBtn,\r\n      setCurrentWorkout,\r\n      setData,\r\n      setDeleteBtn,\r\n      setSaveBtn,\r\n    ]);\r\n\r\n    const addRow = () => {\r\n      if (!selectedExercise) return;\r\n      const newData = [...data];\r\n      const nextSet =\r\n        newData.length > 0 ? newData[newData.length - 1].set + 1 : 1;\r\n\r\n      const newRow: ExerciseTableType = {\r\n        key: nextSet.toString(),\r\n        weight: \"\",\r\n        set: nextSet,\r\n        reps: \"\",\r\n        icon: <CloseOutlined />,\r\n      };\r\n\r\n      newData.push(newRow);\r\n      setData(newData);\r\n      setEditWeight(newRow.key);\r\n    };\r\n\r\n    const removeOldestWorkout = async () => {\r\n      if (!selectedExercise) return;\r\n\r\n      const setDocRef = doc(\r\n        collection(getFirestore(), \"sets\"),\r\n        selectedExercise.id\r\n      );\r\n\r\n      try {\r\n        const docSnapshot = await getDoc(setDocRef);\r\n\r\n        if (docSnapshot.exists()) {\r\n          const workouts = docSnapshot.data()?.workouts || [];\r\n\r\n          if (workouts.length >= 5) {\r\n            const updatedWorkouts = workouts.slice(1);\r\n\r\n            const batch = writeBatch(getFirestore());\r\n            batch.update(setDocRef, { workouts: updatedWorkouts });\r\n            await batch.commit();\r\n            setData(updatedWorkouts);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    const startNewTraining = async () => {\r\n      await removeOldestWorkout();\r\n\r\n      setData([]);\r\n      setAddRowBtn(true);\r\n      setSaveBtn(true);\r\n      setHideButtons(true);\r\n      setCurrentWorkout(true);\r\n      setDeleteBtn(false);\r\n      setShowHistory(true);\r\n    };\r\n\r\n    const showPreviousWorkout = () => {\r\n      if (currentWorkoutIndex > 0) {\r\n        const newIndex = currentWorkoutIndex - 1;\r\n        setCurrentWorkoutIndex(newIndex);\r\n        setData(workouts[newIndex] || []);\r\n        onWorkoutDateChange(workoutDates[newIndex]);\r\n      }\r\n    };\r\n\r\n    const showNextWorkout = () => {\r\n      if (currentWorkoutIndex < workouts.length - 1) {\r\n        const newIndex = currentWorkoutIndex + 1;\r\n        setCurrentWorkoutIndex(newIndex);\r\n        setData(workouts[newIndex] || []);\r\n        onWorkoutDateChange(workoutDates[newIndex]);\r\n      }\r\n    };\r\n\r\n    const isLastWorkout = currentWorkoutIndex === workouts.length - 1;\r\n\r\n    return (\r\n      <>\r\n        {addRowBtn && (\r\n          <SettingButton onClick={addRow} icon={<PlusOutlined />}>\r\n            {t(\"addRow\")}\r\n          </SettingButton>\r\n        )}\r\n        {saveBtn && (\r\n          <div className={styles.saveBtn}>\r\n            <CustomButton onClick={saveExerciseData} icon={<CheckOutlined />}>\r\n              {t(\"saveTraining\")}\r\n            </CustomButton>\r\n          </div>\r\n        )}\r\n        <div className={styles.tableFooter}>\r\n          {!hideButtons && currentWorkoutIndex > 0 ? (\r\n            <CustomButton onClick={showPreviousWorkout} icon={<LeftOutlined />}>\r\n              {t(\"previous\")}\r\n            </CustomButton>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {!hideButtons && !isLastWorkout && (\r\n            <CustomButton onClick={showNextWorkout} icon={<RightOutlined />}>\r\n              {t(\"next\")}\r\n            </CustomButton>\r\n          )}\r\n          {(isLastWorkout || hideButtons) && !saveBtn && (\r\n            <CustomButton onClick={startNewTraining}>\r\n              {t(\"newEntry\")}\r\n              <RightOutlined />\r\n            </CustomButton>\r\n          )}\r\n        </div>\r\n        <TrainingHistory\r\n          showHistory={showHistory}\r\n          workouts={workouts}\r\n          workoutDates={workoutDates}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"collapse\":\"BestResult_collapse__pQyb-\",\"title\":\"BestResult_title__jsqEH\",\"wrapper\":\"BestResult_wrapper__1-LYV\",\"hexagonTitle\":\"BestResult_hexagonTitle__x6aFK\",\"hexagonContainer\":\"BestResult_hexagonContainer__9mpLp\",\"container\":\"BestResult_container__dYweL\",\"saveRecord\":\"BestResult_saveRecord__oirpc\",\"editWrapper\":\"BestResult_editWrapper__yvlTS\"};","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CheckOutlined } from \"@ant-design/icons\";\r\nimport { Collapse } from \"antd\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { SettingButton } from \"../../../../components/SettingButton/SettingButton\";\r\nimport NumericInput from \"../../../../components/NumericInput/NumericInput\";\r\nimport { IBestResultProps, IExercise } from \"../../../../types/types\";\r\nimport { ClosableMessage } from \"../../../../components/ClosableMessage/ClosableMessage\";\r\nimport { Hexagon } from \"../../../../components/Hexagon/Hexagon\";\r\n\r\nimport styles from \"./BestResult.module.scss\";\r\n\r\nexport const BestResult: React.FC<IBestResultProps> = React.memo(\r\n  ({ bestResult, selectedExercise, setBestResult }) => {\r\n    const { t } = useTranslation();\r\n    const user = getAuth().currentUser;\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const [weight, setWeight] = useState<string>(bestResult?.weight || \"0\");\r\n    const [reps, setReps] = useState<string>(bestResult?.reps || \"0\");\r\n    const [isSaving, setIsSaving] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n      setWeight(bestResult?.weight || \"0\");\r\n      setReps(bestResult?.reps || \"0\");\r\n    }, [bestResult]);\r\n\r\n    const saveBestResult = async (updatedBestResult: {\r\n      weight: string;\r\n      reps: string;\r\n    }) => {\r\n      if (user && selectedExercise && !isSaving) {\r\n        setIsSaving(true);\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n        try {\r\n          const exercisesDoc = await getDoc(exercisesDocRef);\r\n          if (exercisesDoc.exists()) {\r\n            const exercisesData = exercisesDoc.data();\r\n            const exerciseToUpdate = exercisesData.exercises.find(\r\n              (exercise: IExercise) => exercise.id === selectedExercise.id\r\n            );\r\n\r\n            if (\r\n              exerciseToUpdate.bestResult.weight === updatedBestResult.weight &&\r\n              exerciseToUpdate.bestResult.reps === updatedBestResult.reps\r\n            ) {\r\n              ClosableMessage({\r\n                type: \"info\",\r\n                content: t(\"noChangesDetected\"),\r\n              });\r\n              setIsSaving(false);\r\n              return;\r\n            }\r\n\r\n            if (Number(updatedBestResult.reps) === 0) {\r\n              setReps(exerciseToUpdate.bestResult.reps);\r\n              ClosableMessage({\r\n                type: \"error\",\r\n                content: t(\"repsNot0\"),\r\n              });\r\n              setIsSaving(false);\r\n              return;\r\n            }\r\n\r\n            const updatedExercises = exercisesData.exercises.map(\r\n              (exercise: IExercise) => {\r\n                if (exercise.id === selectedExercise.id) {\r\n                  return {\r\n                    ...exercise,\r\n                    bestResult: updatedBestResult,\r\n                  };\r\n                }\r\n                return exercise;\r\n              }\r\n            );\r\n\r\n            await updateDoc(exercisesDocRef, { exercises: updatedExercises });\r\n            setBestResult(updatedBestResult);\r\n            ClosableMessage({\r\n              type: \"success\",\r\n              content: t(\"recordUpdated\"),\r\n            });\r\n          } else {\r\n            ClosableMessage({\r\n              type: \"error\",\r\n              content: t(\"noExercisesFound\"),\r\n            });\r\n          }\r\n        } catch (error) {\r\n          ClosableMessage({\r\n            type: \"error\",\r\n            content: t(\"errorSavingBestResult\"),\r\n          });\r\n        } finally {\r\n          setIsSaving(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleSave = async () => {\r\n      if (Number(reps) > 100) {\r\n        ClosableMessage({\r\n          type: \"error\",\r\n          content: t(\"maxReps100\"),\r\n        });\r\n        return;\r\n      } else if (Number(weight) > 1000) {\r\n        ClosableMessage({\r\n          type: \"error\",\r\n          content: t(\"maxWeight1000\"),\r\n        });\r\n        return;\r\n      }\r\n\r\n      await saveBestResult({ weight, reps });\r\n      setEditMode(false);\r\n    };\r\n\r\n    const handleEditMode = () => setEditMode(true);\r\n\r\n    const genExtra = () => (\r\n      <img\r\n        src={\r\n          process.env.PUBLIC_URL + \"/assets/Icons/AdditionalIcons/trophy.png\"\r\n        }\r\n        alt=\"Trophy\"\r\n      />\r\n    );\r\n\r\n    const items = [\r\n      {\r\n        key: \"1\",\r\n        label: <div className={styles.title}>{t(\"bestExerciseResult\")}</div>,\r\n        children: (\r\n          <>\r\n            {editMode ? (\r\n              <>\r\n                <div className={styles.editWrapper}>\r\n                  <div className={styles.container}>\r\n                    <span>{t(\"userWeight\")}</span>\r\n                    <NumericInput value={weight} onChange={setWeight} />\r\n                    <span>{t(\"kg\")}</span>\r\n                  </div>\r\n                  <div className={styles.container}>\r\n                    <span>{t(\"reps\")}</span>\r\n                    <NumericInput\r\n                      value={reps}\r\n                      onChange={setReps}\r\n                      onBlur={handleSave}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <SettingButton\r\n                  icon={<CheckOutlined />}\r\n                  onClick={handleSave}\r\n                  className={styles.saveRecord}\r\n                >\r\n                  <span>{t(\"saveRecord\")}</span>\r\n                </SettingButton>\r\n              </>\r\n            ) : (\r\n              <div className={styles.wrapper}>\r\n                <div>\r\n                  <div className={styles.hexagonTitle}>{t(\"weight\")}</div>\r\n                  <div className={styles.hexagonContainer}>\r\n                    <Hexagon text={weight} onClick={handleEditMode} />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className={styles.hexagonTitle}>{t(\"reps\")}</div>\r\n                  <div className={styles.hexagonContainer}>\r\n                    <Hexagon text={reps} onClick={handleEditMode} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </>\r\n        ),\r\n        extra: genExtra(),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className={styles.collapse}>\r\n        <Collapse items={items} bordered={false} />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  collection,\r\n  getFirestore,\r\n  getDoc,\r\n  updateDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { ResetButton } from \"../../../../components/ResetButton/ResetButton\";\r\nimport { IDeleteWorkoutProps } from \"../../../../types/types\";\r\nimport { scrollToTop } from \"../../../../utils/scrollToTop\";\r\nimport { ClosableMessage } from \"../../../../components/ClosableMessage/ClosableMessage\";\r\nimport { ConfirmDeleteModal } from \"../../../../components/ConfirmDeleteModal/ConfirmDeleteModal\";\r\n\r\nexport const DeleteWorkout: React.FC<IDeleteWorkoutProps> = React.memo(\r\n  ({\r\n    workoutDate,\r\n    selectedExercise,\r\n    setData,\r\n    setWorkoutDate,\r\n    setSelectedExercise,\r\n    setActiveCardId,\r\n  }) => {\r\n    const { t } = useTranslation();\r\n    const user = getAuth().currentUser;\r\n    const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n\r\n    const deleteWorkoutByDate = async () => {\r\n      if (!workoutDate || !selectedExercise || !user) return;\r\n\r\n      const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n      const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n\r\n      try {\r\n        const docSnapshot = await getDoc(setDocRef);\r\n        if (docSnapshot.exists()) {\r\n          const documentData = docSnapshot.data();\r\n          const workouts = documentData.workouts || [];\r\n          const filteredWorkouts = workouts.filter(\r\n            (workout: { date: string | number | Date }) =>\r\n              new Date(workout.date).toLocaleDateString() !== workoutDate\r\n          );\r\n          await updateDoc(setDocRef, { workouts: filteredWorkouts });\r\n\r\n          setData([]);\r\n          setWorkoutDate(null);\r\n          setSelectedExercise(null);\r\n          setActiveCardId(null);\r\n          scrollToTop();\r\n          setIsModalOpen(false);\r\n          ClosableMessage({ type: \"success\", content: t(\"workoutDeleted\") });\r\n        }\r\n      } catch (error) {\r\n        ClosableMessage({ type: \"error\", content: t(\"errorDeletingWorkout\") });\r\n      }\r\n    };\r\n\r\n    const confirmDelete = () => {\r\n      if (!workoutDate || !selectedExercise) {\r\n        ClosableMessage({ type: \"error\", content: t(\"noDataToDelete\") });\r\n        return;\r\n      }\r\n      setIsModalOpen(true);\r\n    };\r\n\r\n    const deleteWorkout = (e: { stopPropagation: () => void }) => {\r\n      e.stopPropagation();\r\n      deleteWorkoutByDate();\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div style={{ margin: \"50px\" }}>\r\n          <ResetButton icon={<DeleteOutlined />} onClick={confirmDelete}>\r\n            {t(\"deleteWorkout\")}\r\n          </ResetButton>\r\n        </div>\r\n        <ConfirmDeleteModal\r\n          isModalOpen={isModalOpen}\r\n          text={t(\"confirmDeletingWorkout\")}\r\n          onClick={deleteWorkout}\r\n          handleCancel={() => setIsModalOpen(false)}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"DataTable_table__RQYJh\",\"editableDiv\":\"DataTable_editableDiv__loDoY\",\"inputContainer\":\"DataTable_inputContainer__grzqU\"};","import { ConfigProvider, Table } from \"antd\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { EmptyBox } from \"../../../../components/EmptyBox/EmptyBox\";\r\nimport { ClosableMessage } from \"../../../../components/ClosableMessage/ClosableMessage\";\r\nimport NumericInput from \"../../../../components/NumericInput/NumericInput\";\r\nimport { DataTablePropsType, ExerciseTableType } from \"../../../../types/types\";\r\n\r\nimport styles from \"./DataTable.module.scss\";\r\n\r\nexport const DataTable: React.FC<DataTablePropsType> = React.memo(\r\n  ({\r\n    data,\r\n    setData,\r\n    currentWorkout,\r\n    editWeight,\r\n    weightInputRef,\r\n    setEditWeight,\r\n    editReps,\r\n    repsInputRef,\r\n    setEditReps,\r\n  }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const updateWeight = (key: string, value: string) => {\r\n      if (Number(value) > 1000) {\r\n        ClosableMessage({ type: \"error\", content: t(\"maxWeight1000\") });\r\n        return;\r\n      }\r\n      const newData = data.map((row) => {\r\n        if (row.key === key) {\r\n          return { ...row, weight: value };\r\n        }\r\n        return row;\r\n      });\r\n      setData(newData);\r\n    };\r\n\r\n    const updateReps = (key: string, value: string) => {\r\n      if (Number(value) > 100) {\r\n        ClosableMessage({ type: \"error\", content: t(\"maxReps100\") });\r\n        return;\r\n      }\r\n      const newData = data.map((row) => {\r\n        if (row.key === key) {\r\n          return { ...row, reps: value };\r\n        }\r\n        return row;\r\n      });\r\n      setData(newData);\r\n    };\r\n    const columns = [\r\n      {\r\n        title: `${t(\"set\")}`,\r\n        dataIndex: \"set\",\r\n        width: \"20%\",\r\n        render: (set: string) => <span>{set}.</span>,\r\n      },\r\n      {\r\n        title: `${t(\"weight\")}`,\r\n        dataIndex: \"weight\",\r\n        width: \"30%\",\r\n        render: (text: string, record: ExerciseTableType) =>\r\n          currentWorkout ? (\r\n            editWeight === record.key ? (\r\n              <div className={styles.inputContainer}>\r\n                <NumericInput\r\n                  ref={weightInputRef}\r\n                  value={record.weight}\r\n                  onChange={(value) => updateWeight(record.key, value)}\r\n                  onBlur={() => setEditWeight(null)}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div\r\n                onClick={() => setEditWeight(record.key)}\r\n                className={styles.editableDiv}\r\n              >\r\n                {record.weight || t(\"clickToEdit\")}\r\n              </div>\r\n            )\r\n          ) : (\r\n            <div className={styles.editableDiv}>{record.weight}</div>\r\n          ),\r\n      },\r\n      {\r\n        title: `${t(\"reps\")}`,\r\n        dataIndex: \"reps\",\r\n        width: \"25%\",\r\n        render: (text: string, record: ExerciseTableType) =>\r\n          currentWorkout ? (\r\n            editReps === record.key ? (\r\n              <div className={styles.inputContainer}>\r\n                <NumericInput\r\n                  ref={repsInputRef}\r\n                  value={record.reps}\r\n                  onChange={(value) => updateReps(record.key, value)}\r\n                  onBlur={() => setEditReps(null)}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div\r\n                onClick={() => setEditReps(record.key)}\r\n                className={styles.editableDiv}\r\n              >\r\n                {record.reps || t(\"clickToEdit\")}\r\n              </div>\r\n            )\r\n          ) : (\r\n            <div className={styles.editableDiv}>{record.reps}</div>\r\n          ),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <ConfigProvider\r\n        theme={{\r\n          components: {\r\n            Table: {\r\n              headerBg: \"#1A1A1A\",\r\n              headerColor: \"#ffffff\",\r\n              colorBgContainer: \"#282828\",\r\n              borderColor: \"#535353\",\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <Table\r\n          rowKey={(record) => record.key}\r\n          columns={columns}\r\n          dataSource={data}\r\n          pagination={false}\r\n          className={styles.table}\r\n          locale={{ emptyText: <EmptyBox /> }}\r\n        />\r\n      </ConfigProvider>\r\n    );\r\n  }\r\n);\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  writeBatch,\r\n} from \"firebase/firestore\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport {\r\n  IApproach,\r\n  IExercise,\r\n  ExerciseTablePropsType,\r\n  ExerciseTableType,\r\n} from \"../../../types/types\";\r\nimport { EmptyBox } from \"../../../components/EmptyBox/EmptyBox\";\r\nimport { scrollToBottom } from \"../../../utils/scrollToBottom\";\r\nimport { ClosableMessage } from \"../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./ExerciseTable.module.scss\";\r\nimport { TableFooter } from \"./TableFooter/TableFooter\";\r\nimport { BestResult } from \"./BestResult/BestResult\";\r\nimport { DeleteWorkout } from \"./DeleteWorkout/DeleteWorkout\";\r\nimport { DataTable } from \"./DataTable/DataTable\";\r\n\r\nexport const ExerciseTable: React.FC<ExerciseTablePropsType> = React.memo(\r\n  ({ selectedExercise, setSelectedExercise, setActiveCardId }) => {\r\n    const user = getAuth().currentUser;\r\n    const { t } = useTranslation();\r\n    const [data, setData] = useState<ExerciseTableType[]>([]);\r\n    const [bestResult, setBestResult] = useState<{\r\n      weight: string;\r\n      reps: string;\r\n    } | null>(null);\r\n    const [editWeight, setEditWeight] = useState<string | null>(null);\r\n    const [editReps, setEditReps] = useState<string | null>(null);\r\n    const [workoutDate, setWorkoutDate] = useState<string | null>(null);\r\n    const [currentWorkout, setCurrentWorkout] = useState(false);\r\n    const [addRowBtn, setAddRowBtn] = useState(false);\r\n    const [saveBtn, setSaveBtn] = useState(false);\r\n    const [deleteBtn, setDeleteBtn] = useState(true);\r\n    const [showHistory, setShowHistory] = useState(false);\r\n\r\n    const weightInputRef = useRef<HTMLInputElement | null>(null);\r\n    const repsInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n    useEffect(() => {\r\n      if (editReps && repsInputRef.current) {\r\n        repsInputRef.current.focus();\r\n      }\r\n      if (editWeight && weightInputRef.current) {\r\n        weightInputRef.current.focus();\r\n      }\r\n    }, [editReps, editWeight]);\r\n\r\n    const loadExerciseData = useCallback(async () => {\r\n      if (user && selectedExercise) {\r\n        const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n        const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n\r\n        try {\r\n          const [docSnapshot, exercisesDoc] = await Promise.all([\r\n            getDoc(setDocRef),\r\n            getDoc(exercisesDocRef),\r\n          ]);\r\n          setShowHistory(false);\r\n          if (docSnapshot.exists()) {\r\n            const workouts = docSnapshot.data()?.workouts || [];\r\n\r\n            if (workouts.length > 0) {\r\n              const latestWorkout = workouts[workouts.length - 1];\r\n              const workoutDate = new Date(\r\n                latestWorkout.date\r\n              ).toLocaleDateString();\r\n\r\n              setWorkoutDate(workoutDate);\r\n              const approaches = latestWorkout.approaches || [];\r\n              const loadedData: ExerciseTableType[] = approaches.map(\r\n                (approach: IApproach) => ({\r\n                  key: approach.id,\r\n                  set: approach.set,\r\n                  weight: approach.weight,\r\n                  reps: approach.reps,\r\n                })\r\n              );\r\n\r\n              setData(loadedData);\r\n              scrollToBottom();\r\n              setDeleteBtn(true);\r\n            } else {\r\n              setData([]);\r\n              setWorkoutDate(null);\r\n              setDeleteBtn(false);\r\n            }\r\n\r\n            if (exercisesDoc.exists()) {\r\n              const exercisesData = exercisesDoc.data();\r\n              const exercise = exercisesData.exercises.find(\r\n                (ex: { id: string }) => ex.id === selectedExercise.id\r\n              );\r\n              if (exercise) {\r\n                setBestResult(exercise.bestResult);\r\n              } else {\r\n                setBestResult(null);\r\n              }\r\n            }\r\n          } else {\r\n            setData([]);\r\n            setWorkoutDate(null);\r\n            setBestResult(null);\r\n            scrollToBottom();\r\n            setDeleteBtn(false);\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n    }, [selectedExercise, user]);\r\n\r\n    useEffect(() => {\r\n      if (selectedExercise) {\r\n        loadExerciseData();\r\n      } else {\r\n        setData([]);\r\n        setBestResult(null);\r\n      }\r\n    }, [selectedExercise, loadExerciseData]);\r\n\r\n    const saveExerciseData = async () => {\r\n      if (user && selectedExercise) {\r\n        const validData = data.filter((row) => Number(row.reps) > 0);\r\n\r\n        if (validData.length === 0) {\r\n          ClosableMessage({ type: \"error\", content: t(\"noDataToSave\") });\r\n          return;\r\n        }\r\n        const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n\r\n        try {\r\n          const batch = writeBatch(getFirestore());\r\n          const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n          const setDoc = await getDoc(setDocRef);\r\n          const setData = setDoc.exists() ? setDoc.data() : { workouts: [] };\r\n\r\n          const newWorkout = {\r\n            id: uuidv4(),\r\n            date: new Date().toISOString(),\r\n            approaches: validData.map((row, index) => ({\r\n              id: uuidv4(),\r\n              set: index + 1,\r\n              reps: row.reps,\r\n              weight: row.weight,\r\n            })),\r\n          };\r\n\r\n          setData.workouts.push(newWorkout);\r\n          batch.set(setDocRef, setData);\r\n\r\n          const exercisesDoc = await getDoc(exercisesDocRef);\r\n          if (exercisesDoc.exists()) {\r\n            const exercisesData = exercisesDoc.data();\r\n            const updatedExercises = exercisesData.exercises.map(\r\n              (exercise: IExercise) => {\r\n                if (exercise.id === selectedExercise.id) {\r\n                  return {\r\n                    ...exercise,\r\n                  };\r\n                }\r\n                return exercise;\r\n              }\r\n            );\r\n            batch.update(exercisesDocRef, { exercises: updatedExercises });\r\n          }\r\n          await batch.commit();\r\n\r\n          setCurrentWorkout(false);\r\n          setAddRowBtn(false);\r\n          setSaveBtn(false);\r\n          setShowHistory(false);\r\n          ClosableMessage({ type: \"success\", content: t(\"exerciseDataSaved\") });\r\n        } catch (error) {\r\n          ClosableMessage({\r\n            type: \"error\",\r\n            content: t(\"errorSavingExerciseData\"),\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleWorkoutDateChange = useCallback(\r\n      (date: string) => {\r\n        const workoutDate = new Date(date);\r\n        const formattedDate = workoutDate.toLocaleDateString();\r\n        if (!isNaN(workoutDate.getTime())) {\r\n          setWorkoutDate(formattedDate);\r\n          setCurrentWorkout(false);\r\n        }\r\n      },\r\n      [setWorkoutDate, setCurrentWorkout]\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <SubTitle\r\n          children={selectedExercise?.name || t(\"noExerciseSelected\")}\r\n          className={styles.subtitle}\r\n        />\r\n        {selectedExercise ? (\r\n          <>\r\n            <BestResult\r\n              bestResult={bestResult}\r\n              selectedExercise={selectedExercise}\r\n              setBestResult={setBestResult}\r\n            />\r\n            {currentWorkout ? (\r\n              <div className={styles.dateWorkout}>\r\n                {t(\"workoutDate\")}:\r\n                <span>{new Date().toLocaleDateString()}</span>\r\n              </div>\r\n            ) : (\r\n              <div className={styles.dateWorkout}>\r\n                {t(\"workoutDate\")}:\r\n                <span>{workoutDate ? workoutDate : \". . .\"}</span>\r\n              </div>\r\n            )}\r\n            <DataTable\r\n              data={data}\r\n              setData={setData}\r\n              currentWorkout={currentWorkout}\r\n              editWeight={editWeight}\r\n              weightInputRef={weightInputRef}\r\n              setEditWeight={setEditWeight}\r\n              editReps={editReps}\r\n              repsInputRef={repsInputRef}\r\n              setEditReps={setEditReps}\r\n            />\r\n            <TableFooter\r\n              selectedExercise={selectedExercise}\r\n              data={data}\r\n              setData={setData}\r\n              setEditWeight={setEditWeight}\r\n              saveExerciseData={saveExerciseData}\r\n              onWorkoutDateChange={handleWorkoutDateChange}\r\n              setCurrentWorkout={setCurrentWorkout}\r\n              addRowBtn={addRowBtn}\r\n              setAddRowBtn={setAddRowBtn}\r\n              saveBtn={saveBtn}\r\n              setSaveBtn={setSaveBtn}\r\n              setDeleteBtn={setDeleteBtn}\r\n              showHistory={showHistory}\r\n              setShowHistory={setShowHistory}\r\n            />\r\n            {deleteBtn && (\r\n              <DeleteWorkout\r\n                workoutDate={workoutDate}\r\n                selectedExercise={selectedExercise}\r\n                setData={setData}\r\n                setWorkoutDate={setWorkoutDate}\r\n                setSelectedExercise={setSelectedExercise}\r\n                setActiveCardId={setActiveCardId}\r\n              />\r\n            )}\r\n          </>\r\n        ) : (\r\n          <div className={styles.emptyBox}>\r\n            <EmptyBox />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"addExercise\":\"AddExercise_addExercise__7FNxa\"};","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { CustomButton } from \"../../../components/CustomButton/CustomButton\";\r\nimport { CustomInput } from \"../../../components/CustomInput/CustomInput\";\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport { IAddExercise } from \"../../../types/types\";\r\nimport { ClosableMessage } from \"../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./AddExercise.module.scss\";\r\n\r\nexport const AddExercise: React.FC<IAddExercise> = React.memo(\r\n  ({ onAddExercise, category, setData }) => {\r\n    const user = getAuth().currentUser;\r\n    const { t } = useTranslation();\r\n    const [exerciseName, setExerciseName] = useState(\"\");\r\n\r\n    const handleAddExercise = async () => {\r\n      if (!exerciseName) {\r\n        ClosableMessage({ type: \"error\", content: t(\"typeExercise\") });\r\n        return;\r\n      }\r\n      try {\r\n        if (user) {\r\n          const userId = user.uid;\r\n          const exercise = {\r\n            id: uuidv4(),\r\n            name: exerciseName,\r\n            category: category,\r\n            bestResult: {\r\n              weight: \"0\",\r\n              reps: \"0\",\r\n            },\r\n            isFavorite: false,\r\n          };\r\n          const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n          const docSnapshot = await getDoc(exercisesDocRef);\r\n\r\n          if (docSnapshot.exists()) {\r\n            const existingExercises = docSnapshot.data().exercises || [];\r\n\r\n            const exercisesInCategory = existingExercises.filter(\r\n              (existingExercise: { category: string }) =>\r\n                existingExercise.category === category\r\n            );\r\n\r\n            if (exerciseName.length <= 2) {\r\n              ClosableMessage({\r\n                type: \"error\",\r\n                content: t(\"nameMin3Symbols\"),\r\n              });\r\n              return;\r\n            }\r\n\r\n            if (exercisesInCategory.length >= 10) {\r\n              ClosableMessage({\r\n                type: \"error\",\r\n                content: t(\"maxExercisesReached\"),\r\n              });\r\n              return;\r\n            }\r\n\r\n            const exerciseExists = existingExercises.some(\r\n              (existingExercise: { name: string }) =>\r\n                existingExercise.name.toLowerCase() ===\r\n                exerciseName.toLowerCase()\r\n            );\r\n\r\n            if (exerciseExists) {\r\n              ClosableMessage({\r\n                type: \"error\",\r\n                content: t(\"nameAlreadyExists\"),\r\n              });\r\n              setExerciseName(\"\");\r\n              return;\r\n            }\r\n\r\n            await updateDoc(exercisesDocRef, {\r\n              exercises: [...existingExercises, exercise],\r\n            });\r\n\r\n            const filteredData = [...existingExercises, exercise].filter(\r\n              (exercise: { category: string }) =>\r\n                t(exercise.category) === t(category)\r\n            );\r\n            setData(filteredData);\r\n          } else {\r\n            await updateDoc(exercisesDocRef, {\r\n              exercises: [exercise],\r\n            });\r\n            setData([exercise]);\r\n          }\r\n\r\n          setExerciseName(\"\");\r\n          onAddExercise();\r\n          ClosableMessage({ type: \"success\", content: t(\"exerciseAdded\") });\r\n        }\r\n      } catch (error) {\r\n        ClosableMessage({ type: \"error\", content: t(\"errorAddingExercise\") });\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <SubTitle>{t(\"addAnExercise\")}</SubTitle>\r\n        <div className={styles.addExercise}>\r\n          <CustomInput\r\n            value={exerciseName}\r\n            onChange={(value: string) => setExerciseName(value)}\r\n            text={t(\"exerciseName\")}\r\n            placeholder={t(\"typeExercise\")}\r\n          />\r\n          <CustomButton icon={<PlusOutlined />} onClick={handleAddExercise}>\r\n            {t(\"addExerciseBtn\")}\r\n          </CustomButton>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n);\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { DescriptionTitle } from \"../../components/DescriptionTitle/DescriptionTitle\";\r\nimport { PageWrapper } from \"../../components/PageWrapper/PageWrapper\";\r\nimport { IExercise, ILocationState } from \"../../types/types\";\r\nimport { scrollToTop } from \"../../utils/scrollToTop\";\r\n\r\nimport { Exercises } from \"./Exercises/Exercises\";\r\nimport { ExerciseTable } from \"./ExerciseTable/ExerciseTable\";\r\nimport { AddExercise } from \"./AddExercise/AddExercise\";\r\n\r\nconst Workout: React.FC = React.memo(() => {\r\n  const location = useLocation();\r\n  const state = location.state as ILocationState;\r\n  const [data, setData] = useState<IExercise[]>([]);\r\n  const [updateTrigger, setUpdateTrigger] = useState(0);\r\n  const [selectedExercise, setSelectedExercise] = useState<IExercise | null>(\r\n    null\r\n  );\r\n  const [activeCardId, setActiveCardId] = useState<string | null>(null);\r\n  const exercisesRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    scrollToTop();\r\n  }, []);\r\n\r\n  const handleUpdateExercises = () => {\r\n    setUpdateTrigger((prev) => prev + 1);\r\n\r\n    if (exercisesRef.current) {\r\n      exercisesRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  const handleSelectExercise = (exercise: IExercise) => {\r\n    const exerciseData = data.find((item) => item.id === exercise.id);\r\n\r\n    if (exerciseData) {\r\n      setSelectedExercise(exercise);\r\n    } else {\r\n      setSelectedExercise(null);\r\n      setData([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <DescriptionTitle text={state.title} textAlign=\"center\" />\r\n      <AddExercise\r\n        category={state?.title}\r\n        onAddExercise={handleUpdateExercises}\r\n        setData={setData}\r\n      />\r\n      <Exercises\r\n        category={state?.title}\r\n        updateTrigger={updateTrigger}\r\n        onSelectExercise={handleSelectExercise}\r\n        exercisesRef={exercisesRef}\r\n        activeCardId={activeCardId}\r\n        setActiveCardId={setActiveCardId}\r\n        setSelectedExercise={setSelectedExercise}\r\n        data={data}\r\n        setData={setData}\r\n      />\r\n      <ExerciseTable\r\n        selectedExercise={selectedExercise}\r\n        setSelectedExercise={setSelectedExercise}\r\n        setActiveCardId={setActiveCardId}\r\n      />\r\n    </PageWrapper>\r\n  );\r\n});\r\n\r\nexport default Workout;\r\n"],"names":["ClosableMessage","_ref","type","content","key","message","_jsxs","_Fragment","children","_jsx","CloseOutlined","onClick","destroy","className","styles","ConfirmDeleteModal","text","isModalOpen","handleCancel","t","useTranslation","CustomModal","open","onCancel","footer","CustomButton","icon","ResetButton","DeleteOutlined","CustomInput","name","placeholder","isRequired","onChange","value","ref","controls","useAnimatedInView","motion","div","initial","animate","variants","animation","Form","Item","label","rules","required","Input","allowClear","e","inputValue","target","isNaN","Number","toString","autoComplete","useEffect","document","body","style","overflow","ConfigProvider","theme","components","Modal","contentBg","colorIcon","colorIconHover","centered","DescriptionTitle","textAlign","h2","descriptionTitle","Hexagon","src","process","alt","NumericInput","onBlur","replace","length","startsWith","substring","match","inputMode","pattern","forwardRef","container","maxWidth","margin","PageWrapper","Button","SettingButton","SubTitle","p","threshold","arguments","undefined","animationVariants","useAnimation","inView","useInView","triggerOnce","start","hidden","opacity","visible","transition","duration","CardOptions","React","item","category","setData","setCurrentEditingId","setNewName","editMode","setEditMode","isActive","setIsActive","useState","StarFilled","stopPropagation","async","exerciseId","currentStatus","user","getAuth","currentUser","exercisesDocRef","doc","getFirestore","uid","exercisesDoc","getDoc","exists","exercisesData","data","favoriteExercisesCount","exercises","filter","exercise","isFavorite","updatedExercises","map","id","updateDoc","translatedCategory","filteredData","error","toggleFavorite","CheckOutlined","EditOutlined","handleEditClick","currentName","ModalDelete","setLoading","setIsModalOpen","setConfirm","setSelectedExercise","setsCollectionRef","deleteDoc","scrollToTop","handleDeleteCard","DeleteIcon","index","confirm","Tooltip","title","EditInput","newName","currentEditingId","inputRef","useRef","current","focus","changeExerciseName","currentExercise","find","trim","some","reloadData","bestResult","onKeyDown","event","handleBlur","ExerciseCard","onSelectExercise","activeCardId","setActiveCardId","exercisesRef","handleCardClick","Exercises","updateTrigger","loading","fetchExercises","Loader","Empty","image","PRESENTED_IMAGE_SIMPLE","description","color","Divider","backgroundColor","EmptyBox","scrollToBottom","setTimeout","window","scrollTo","left","top","scrollHeight","behavior","TrainingHistory","showHistory","workouts","workoutDates","sortedData","date","workout","sort","a","b","Date","getTime","items","dateString","toLocaleDateString","w","i","set","weight","reps","extra","Collapse","bordered","expandIcon","_ref2","RightOutlined","rotate","TableFooter","selectedExercise","setEditWeight","saveExerciseData","onWorkoutDateChange","setCurrentWorkout","addRowBtn","setAddRowBtn","saveBtn","setSaveBtn","setDeleteBtn","setShowHistory","setWorkouts","setWorkoutDates","currentWorkoutIndex","setCurrentWorkoutIndex","hideButtons","setHideButtons","collection","docSnapshot","_docSnapshot$data","workoutsData","Array","isArray","approaches","lastIndex","console","loadWorkouts","isLastWorkout","addRow","newData","nextSet","newRow","push","PlusOutlined","showPreviousWorkout","newIndex","LeftOutlined","showNextWorkout","setDocRef","_docSnapshot$data2","updatedWorkouts","slice","batch","writeBatch","update","commit","removeOldestWorkout","BestResult","setBestResult","setWeight","setReps","isSaving","setIsSaving","handleSave","exerciseToUpdate","updatedBestResult","saveBestResult","handleEditMode","DeleteWorkout","workoutDate","setWorkoutDate","confirmDelete","filteredWorkouts","deleteWorkoutByDate","DataTable","currentWorkout","editWeight","weightInputRef","editReps","repsInputRef","setEditReps","columns","dataIndex","width","render","record","updateWeight","row","updateReps","Table","headerBg","headerColor","colorBgContainer","borderColor","rowKey","dataSource","pagination","locale","emptyText","ExerciseTable","deleteBtn","loadExerciseData","useCallback","Promise","all","latestWorkout","loadedData","approach","ex","handleWorkoutDateChange","formattedDate","validData","setDoc","newWorkout","uuidv4","toISOString","AddExercise","onAddExercise","exerciseName","setExerciseName","userId","existingExercises","exercisesInCategory","existingExercise","toLowerCase","state","useLocation","setUpdateTrigger","handleUpdateExercises","prev","scrollIntoView"],"sourceRoot":""}