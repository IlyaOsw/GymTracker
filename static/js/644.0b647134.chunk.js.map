{"version":3,"file":"static/js/644.0b647134.chunk.js","mappings":"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","sources":["webpack://gymtracker/./src/components/CustomInput/CustomInput.module.scss?82c8","components/CustomInput/CustomInput.tsx","components/CustomModal/CustomModal.tsx","webpack://gymtracker/./src/components/DescriptionTitle/DescriptionTitle.module.scss?64ef","components/DescriptionTitle/DescriptionTitle.tsx","components/PageWrapper/PageWrapper.tsx","webpack://gymtracker/./src/components/ResetButton/ResetButton.module.scss?4be0","components/ResetButton/ResetButton.tsx","webpack://gymtracker/./src/components/SubTitle/SubTitle.module.scss?d9b0","components/SubTitle/SubTitle.tsx","hooks/useAnimatedInView .tsx","webpack://gymtracker/./src/pages/Workout/ExerciseTable/ExerciseTable.module.scss?799a","webpack://gymtracker/./src/pages/Workout/ExerciseTable/NumericInput/NumericInput.module.scss?fc7e","pages/Workout/ExerciseTable/NumericInput/NumericInput.tsx","pages/Workout/ExerciseTable/ExerciseTable.tsx","webpack://gymtracker/./src/pages/Workout/AddExercise/AddExercise.module.scss?140e","pages/Workout/AddExercise/AddExercise.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/Exercises.module.scss?28b0","pages/Workout/Exercises/Exercises.tsx","pages/Workout/Workout.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"CustomInput_inputWrapper__wz8SN\",\"inputLabel\":\"CustomInput_inputLabel__b-QWx\",\"inputField\":\"CustomInput_inputField__baNtE\"};","import { Form, Input } from \"antd\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CustomInputProps, FieldType } from \"../../types/types\";\r\n\r\nimport styles from \"./CustomInput.module.scss\";\r\n\r\nexport const CustomInput: React.FC<CustomInputProps> = ({\r\n  name,\r\n  text,\r\n  type,\r\n  placeholder,\r\n  isRequired = true,\r\n  className,\r\n  onChange,\r\n  value,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    if (onChange) {\r\n      onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.inputWrapper}>\r\n      <Form.Item<FieldType>\r\n        label={<span className={styles.inputLabel}>{t(text)}</span>}\r\n        name={name}\r\n        rules={[{ required: isRequired }]}\r\n      >\r\n        <Input\r\n          type={type}\r\n          placeholder={placeholder}\r\n          className={`${styles.inputField} ${className}`}\r\n          allowClear\r\n          onChange={handleChange}\r\n          value={value}\r\n          autoComplete=\"username\"\r\n        />\r\n      </Form.Item>\r\n    </div>\r\n  );\r\n};\r\n","import { ConfigProvider, Modal } from \"antd\";\r\nimport React from \"react\";\r\n\r\nimport { CustomModalProps } from \"../../types/types\";\r\n\r\nexport const CustomModal: React.FC<CustomModalProps> = ({\r\n  open,\r\n  onCancel,\r\n  footer = null,\r\n  children,\r\n}) => {\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        components: {\r\n          Modal: {\r\n            contentBg: \"#141414\",\r\n            colorIcon: \"lightgray\",\r\n            colorIconHover: \"gray\",\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <Modal\r\n        open={open}\r\n        onCancel={onCancel}\r\n        footer={footer}\r\n        style={{ marginTop: \"50px\" }}\r\n      >\r\n        {children}\r\n      </Modal>\r\n    </ConfigProvider>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionTitle\":\"DescriptionTitle_descriptionTitle__E-lRw\",\"start\":\"DescriptionTitle_start__FSu7h\",\"center\":\"DescriptionTitle_center__eJvMJ\",\"end\":\"DescriptionTitle_end__uV+MA\"};","import { motion } from \"framer-motion\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\nimport { CustomButtonProps } from \"../../types/types\";\r\n\r\nimport styles from \"./DescriptionTitle.module.scss\";\r\n\r\nexport const DescriptionTitle: React.FC<CustomButtonProps> = ({\r\n  text,\r\n  textAlign = \"start\",\r\n  className,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { ref, controls } = useAnimatedInView();\r\n\r\n  return (\r\n    <motion.h2\r\n      ref={ref}\r\n      className={`${styles.descriptionTitle} ${styles[textAlign]} ${className}`}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n    >\r\n      {t(text)}\r\n    </motion.h2>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { PageWrapperProps } from \"../../types/types\";\r\n\r\nconst container: React.CSSProperties = {\r\n  maxWidth: \"1200px\",\r\n  margin: \"0 auto\",\r\n};\r\n\r\nexport const PageWrapper: React.FC<PageWrapperProps> = ({ children }) => {\r\n  return <div style={container}>{children}</div>;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"reset\":\"ResetButton_reset__efwrw\"};","import React from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { SyncOutlined } from \"@ant-design/icons\";\r\n\r\nimport { ResetBtnType } from \"../../types/types\";\r\n\r\nimport styles from \"./ResetButton.module.scss\";\r\n\r\nexport const ResetButton: React.FC<ResetBtnType> = ({\r\n  onClick,\r\n  children,\r\n  icon,\r\n}) => {\r\n  return (\r\n    <Button className={styles.reset} onClick={onClick} icon={icon}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"subTitle\":\"SubTitle_subTitle__6A8PN\"};","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\nimport { SubTitleType } from \"../../types/types\";\r\n\r\nimport styles from \"./SubTitle.module.scss\";\r\n\r\nexport const SubTitle: React.FC<SubTitleType> = ({ children, className }) => {\r\n  const { ref, controls } = useAnimatedInView();\r\n  return (\r\n    <motion.p\r\n      ref={ref}\r\n      className={`${styles.subTitle} ${className}`}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n    >\r\n      {children}\r\n    </motion.p>\r\n  );\r\n};\r\n","import { useAnimation, Variants } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useAnimatedInView = (\r\n  threshold: number = 0.1,\r\n  triggerOnce: boolean = false,\r\n  animationVariants?: Variants\r\n) => {\r\n  const controls = useAnimation();\r\n  const [ref, inView] = useInView({ threshold, triggerOnce });\r\n\r\n  useEffect(() => {\r\n    if (inView) {\r\n      controls.start(\"visible\");\r\n    } else {\r\n      controls.start(\"hidden\");\r\n    }\r\n  }, [controls, inView]);\r\n\r\n  return { ref, controls, animationVariants };\r\n};\r\n\r\nexport const animation = {\r\n  hidden: { opacity: 0 },\r\n  visible: { opacity: 1, transition: { duration: 1 } },\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableTitle\":\"ExerciseTable_tableTitle__nWHV1\",\"date\":\"ExerciseTable_date__+kHp7\",\"table\":\"ExerciseTable_table__gqYvK\",\"editableDiv\":\"ExerciseTable_editableDiv__lnIPx\",\"repsAndDelete\":\"ExerciseTable_repsAndDelete__sJi7S\",\"tableFooter\":\"ExerciseTable_tableFooter__8lrF-\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"NumericInput_input__GI+NF\"};","import React, { forwardRef, ChangeEvent } from \"react\";\r\n\r\nimport { NumericInputProps } from \"../../../../types/types\";\r\n\r\nimport styles from \"./NumericInput.module.scss\";\r\n\r\nconst NumericInput: React.ForwardRefRenderFunction<\r\n  HTMLInputElement,\r\n  NumericInputProps\r\n> = ({ value, onChange, onBlur }, ref) => {\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    if (/^\\d*$/.test(value)) {\r\n      onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      ref={ref}\r\n      value={value}\r\n      onChange={handleChange}\r\n      onBlur={onBlur}\r\n      className={styles.input}\r\n      type=\"tel\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default forwardRef(NumericInput);\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { ConfigProvider, Divider, Empty, message, Table, Tooltip } from \"antd\";\r\nimport {\r\n  CheckOutlined,\r\n  CloseOutlined,\r\n  LeftOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  updateDoc,\r\n  writeBatch,\r\n} from \"firebase/firestore\";\r\n\r\nimport { CustomButton } from \"../../../components/CustomButton/CustomButton\";\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport {\r\n  ExerciseTablePropsType,\r\n  ExerciseTableType,\r\n} from \"../../../types/types\";\r\n\r\nimport styles from \"./ExerciseTable.module.scss\";\r\nimport NumericInput from \"./NumericInput/NumericInput\";\r\n\r\nexport const ExerciseTable: React.FC<ExerciseTablePropsType> = ({\r\n  selectedExercise,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [data, setData] = useState<ExerciseTableType[]>([]);\r\n  const [editWeight, setEditWeight] = useState<string | null>(null);\r\n  const [editReps, setEditReps] = useState<string | null>(null);\r\n  const weightInputRef = useRef<HTMLInputElement | null>(null);\r\n  const repsInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (selectedExercise) {\r\n      loadExerciseData();\r\n    } else {\r\n      setData([]);\r\n    }\r\n  }, [selectedExercise]);\r\n\r\n  const loadExerciseData = async () => {\r\n    if (!selectedExercise) {\r\n      return;\r\n    }\r\n    const auth = getAuth();\r\n    const user = auth.currentUser;\r\n\r\n    if (user) {\r\n      const db = getFirestore();\r\n      const setsCollectionRef = collection(db, \"sets\");\r\n      const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n\r\n      try {\r\n        const docSnapshot = await getDoc(setDocRef);\r\n        if (docSnapshot.exists()) {\r\n          const setsData = docSnapshot.data();\r\n          const approaches = setsData.approaches || [];\r\n\r\n          const loadedData = approaches.map((approach: any, index: number) => ({\r\n            key: index.toString(),\r\n            set: index + 1,\r\n            weight: approach.weight.toString(),\r\n            reps: approach.reps.toString(),\r\n            icon: <CloseOutlined />,\r\n          }));\r\n\r\n          setData(loadedData);\r\n\r\n          setTimeout(() => {\r\n            window.scrollTo({\r\n              left: 0,\r\n              top: document.body.scrollHeight,\r\n              behavior: \"smooth\",\r\n            });\r\n          }, 100);\r\n        } else {\r\n          setData([]);\r\n        }\r\n      } catch (error) {\r\n        message.error(t(\"errorLoadingExerciseData\"));\r\n      }\r\n    }\r\n  };\r\n\r\n  const addRow = () => {\r\n    if (!selectedExercise) {\r\n      return;\r\n    }\r\n\r\n    const newData = [...data];\r\n    const nextSet =\r\n      newData.length > 0 ? newData[newData.length - 1].set + 1 : 1;\r\n\r\n    const newRow: ExerciseTableType = {\r\n      key: nextSet.toString(),\r\n      weight: \"\",\r\n      set: nextSet,\r\n      reps: \"\",\r\n      icon: <CloseOutlined />,\r\n    };\r\n\r\n    newData.push(newRow);\r\n    setData(newData);\r\n    setEditWeight(newRow.key);\r\n  };\r\n\r\n  const deleteRow = async (key: string) => {\r\n    if (!selectedExercise) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const db = getFirestore();\r\n      const selectedExerciseId = selectedExercise.id;\r\n\r\n      const setDocRef = doc(db, \"sets\", selectedExerciseId);\r\n      const setDocSnapshot = await getDoc(setDocRef);\r\n\r\n      if (!setDocSnapshot.exists()) {\r\n        throw new Error(`${selectedExerciseId} does not exist`);\r\n      }\r\n\r\n      const { approaches } = setDocSnapshot.data();\r\n      const approachIndex = approaches.findIndex(\r\n        (approach: { key: string }) => approach.key === key\r\n      );\r\n\r\n      approaches.splice(approachIndex, 1);\r\n\r\n      await updateDoc(setDocRef, {\r\n        approaches: approaches,\r\n      });\r\n\r\n      message.success(t(\"exerciseDataDeletedSuccessfully\"));\r\n    } catch (error) {\r\n      message.error(t(\"failedToDeleteExerciseData\"));\r\n    } finally {\r\n      loadExerciseData();\r\n    }\r\n  };\r\n\r\n  const updateWeight = (key: string, value: string) => {\r\n    const newData = data.map((row) => {\r\n      if (row.key === key) {\r\n        return { ...row, weight: value };\r\n      }\r\n      return row;\r\n    });\r\n    setData(newData);\r\n  };\r\n\r\n  const updateReps = (key: string, value: string) => {\r\n    const newData = data.map((row) => {\r\n      if (row.key === key) {\r\n        return { ...row, reps: value };\r\n      }\r\n      return row;\r\n    });\r\n    setData(newData);\r\n  };\r\n\r\n  const saveExerciseData = async () => {\r\n    const auth = getAuth();\r\n    const user = auth.currentUser;\r\n\r\n    if (user) {\r\n      const db = getFirestore();\r\n      const setsCollectionRef = collection(db, \"sets\");\r\n\r\n      try {\r\n        const batch = writeBatch(db);\r\n        const setDocRef = doc(setsCollectionRef, selectedExercise?.id);\r\n        const approaches = data.map((row, index) => ({\r\n          key: index.toString(),\r\n          reps: parseInt(row.reps),\r\n          weight: parseInt(row.weight),\r\n        }));\r\n\r\n        batch.set(setDocRef, { approaches });\r\n\r\n        await batch.commit();\r\n        message.success(t(\"exerciseDataSaved\"));\r\n      } catch (error) {\r\n        message.error(t(\"errorSavingExerciseData\"));\r\n      }\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: `${t(\"set\")}`,\r\n      dataIndex: \"set\",\r\n      width: \"30%\",\r\n    },\r\n    {\r\n      title: `${t(\"weight\")}`,\r\n      dataIndex: \"weight\",\r\n      width: \"30%\",\r\n      render: (text: string, record: ExerciseTableType) =>\r\n        editWeight === record.key ? (\r\n          <NumericInput\r\n            ref={weightInputRef}\r\n            value={record.weight}\r\n            onChange={(value) => updateWeight(record.key, value)}\r\n            onBlur={() => setEditWeight(null)}\r\n          />\r\n        ) : (\r\n          <div\r\n            onClick={() => setEditWeight(record.key)}\r\n            className={styles.editableDiv}\r\n          >\r\n            {record.weight || t(\"clickToEdit\")}\r\n          </div>\r\n        ),\r\n    },\r\n    {\r\n      title: `${t(\"reps\")}`,\r\n      dataIndex: \"reps\",\r\n      width: \"30%\",\r\n      render: (text: string, record: ExerciseTableType) =>\r\n        editReps === record.key ? (\r\n          <NumericInput\r\n            ref={repsInputRef}\r\n            value={record.reps}\r\n            onChange={(value) => updateReps(record.key, value)}\r\n            onBlur={() => setEditReps(null)}\r\n          />\r\n        ) : (\r\n          <div className={styles.repsAndDelete}>\r\n            <div\r\n              onClick={() => setEditReps(record.key)}\r\n              className={styles.editableDiv}\r\n            >\r\n              {record.reps || t(\"clickToEdit\")}\r\n            </div>\r\n            <div className={styles.deledeContainer}>\r\n              <Tooltip title={t(\"deleteRow\")}>\r\n                <CloseOutlined onClick={() => deleteRow(record.key)} />\r\n              </Tooltip>\r\n            </div>\r\n          </div>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Divider style={{ backgroundColor: \"gray\" }} />\r\n      <div className={styles.tableTitle}>\r\n        <SubTitle\r\n          children={\r\n            selectedExercise ? selectedExercise.name : t(\"noExerciseSelected\")\r\n          }\r\n        />\r\n        <div className={styles.date}>\r\n          {t(\"date\")}\r\n          {new Date().toLocaleDateString()}\r\n        </div>\r\n      </div>\r\n      {selectedExercise ? (\r\n        <ConfigProvider\r\n          theme={{\r\n            components: {\r\n              Table: {\r\n                headerBg: \"#1A1A1A\",\r\n                headerColor: \"#ffffff\",\r\n                cellFontSize: 18,\r\n                colorBgContainer: \"#282828\",\r\n                colorText: \"#ffffff\",\r\n                colorPrimary: \"#ffffff\",\r\n                rowHoverBg: \"#464646\",\r\n                borderColor: \"#535353\",\r\n                headerSplitColor: \"#535353\",\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <Table\r\n            columns={columns}\r\n            dataSource={data}\r\n            pagination={false}\r\n            className={styles.table}\r\n            locale={{\r\n              emptyText: (\r\n                <Empty\r\n                  image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                  description={\r\n                    <span style={{ color: \"#ffffff\" }}>{t(\"noData\")}</span>\r\n                  }\r\n                />\r\n              ),\r\n            }}\r\n          />\r\n          <CustomButton onClick={addRow} icon={<PlusOutlined />}>\r\n            {t(\"addRow\")}\r\n          </CustomButton>\r\n          <div className={styles.tableFooter}>\r\n            <CustomButton icon={<LeftOutlined />}>{t(\"previous\")}</CustomButton>\r\n            <CustomButton icon={<CheckOutlined />} onClick={saveExerciseData}>\r\n              {t(\"save\")}\r\n            </CustomButton>\r\n          </div>\r\n        </ConfigProvider>\r\n      ) : (\r\n        <ConfigProvider\r\n          theme={{\r\n            components: {\r\n              Table: {\r\n                headerBg: \"#1A1A1A\",\r\n                headerColor: \"#ffffff\",\r\n                cellFontSize: 18,\r\n                colorBgContainer: \"#282828\",\r\n                borderColor: \"#535353\",\r\n                headerSplitColor: \"#535353\",\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <Table\r\n            columns={columns}\r\n            className={styles.table}\r\n            locale={{\r\n              emptyText: (\r\n                <Empty\r\n                  image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                  description={\r\n                    <span style={{ color: \"#ffffff\" }}>{t(\"noData\")}</span>\r\n                  }\r\n                />\r\n              ),\r\n            }}\r\n          />\r\n        </ConfigProvider>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"addExercise\":\"AddExercise_addExercise__7FNxa\",\"button\":\"AddExercise_button__mkO2c\"};","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport { message } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { CustomButton } from \"../../../components/CustomButton/CustomButton\";\r\nimport { CustomInput } from \"../../../components/CustomInput/CustomInput\";\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport { IAddExercise } from \"../../../types/types\";\r\n\r\nimport styles from \"./AddExercise.module.scss\";\r\n\r\nexport const AddExercise: React.FC<IAddExercise> = ({\r\n  onAddExercise,\r\n  category,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [exerciseName, setExerciseName] = useState(\"\");\r\n\r\n  const handleAddExercise = async () => {\r\n    if (!exerciseName) {\r\n      message.error(t(\"typeExercise\"));\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const db = getFirestore();\r\n      const auth = getAuth();\r\n      const user = auth.currentUser;\r\n\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercise = {\r\n          id: uuidv4(),\r\n          name: exerciseName,\r\n          category: category,\r\n          bestResult: 0,\r\n          isFavorite: false,\r\n        };\r\n\r\n        const exercisesDocRef = doc(db, \"exercises\", userId);\r\n        const docSnapshot = await getDoc(exercisesDocRef);\r\n\r\n        if (docSnapshot.exists()) {\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: [...docSnapshot.data().exercises, exercise],\r\n          });\r\n        } else {\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: [exercise],\r\n          });\r\n        }\r\n        message.success(t(\"exerciseAdded\"));\r\n        setExerciseName(\"\");\r\n        onAddExercise();\r\n      }\r\n    } catch (error) {\r\n      message.error(t(\"errorAddingExercise\"));\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (value: string) => setExerciseName(value);\r\n\r\n  return (\r\n    <>\r\n      <SubTitle>{t(\"addAnExercise\")}</SubTitle>\r\n      <div className={styles.addExercise}>\r\n        <CustomInput\r\n          value={exerciseName}\r\n          onChange={handleInputChange}\r\n          text={t(\"exerciseName\")}\r\n          placeholder={t(\"typeExercise\")}\r\n        />\r\n        <CustomButton\r\n          className={styles.button}\r\n          icon={<PlusOutlined />}\r\n          onClick={handleAddExercise}\r\n        >\r\n          {t(\"addExerciseBtn\")}\r\n        </CustomButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Exercises_title__ThgWQ\",\"cardTitle\":\"Exercises_cardTitle__tmJjS\",\"exercises\":\"Exercises_exercises__BEFnF\",\"deleteIconBlock\":\"Exercises_deleteIconBlock__wVkhJ\",\"favoriteIcon\":\"Exercises_favoriteIcon__BEv1g\",\"deleteIcon\":\"Exercises_deleteIcon__X1Kq5\",\"confirm\":\"Exercises_confirm__DCCIL\",\"delete\":\"Exercises_delete__ikuGj\",\"star\":\"Exercises_star__OY09M\",\"active\":\"Exercises_active__8jdlH\"};","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  ConfigProvider,\r\n  Empty,\r\n  message,\r\n  notification,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CloseOutlined, DeleteOutlined, StarFilled } from \"@ant-design/icons\";\r\nimport {\r\n  deleteDoc,\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport { Exercise, ExercisesProps } from \"../../../types/types\";\r\nimport { Loader } from \"../../../components/Loader/Loader\";\r\nimport { CustomModal } from \"../../../components/CustomModal/CustomModal\";\r\nimport { ResetButton } from \"../../../components/ResetButton/ResetButton\";\r\n\r\nimport styles from \"./Exercises.module.scss\";\r\n\r\nexport const Exercises: React.FC<ExercisesProps> = ({\r\n  category,\r\n  updateTrigger,\r\n  onSelectExercise,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [data, setData] = useState<Exercise[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [confirm, setConfirm] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(\r\n      localStorage.getItem(\"exercisesData\") || \"[]\"\r\n    );\r\n\r\n    if (storedData.length > 0) {\r\n      setData(storedData);\r\n      setLoading(false);\r\n    }\r\n  }, [category]);\r\n\r\n  useEffect(() => {\r\n    const fetchExercises = async () => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const db = getFirestore();\r\n        const auth = getAuth();\r\n        const user = auth.currentUser;\r\n\r\n        if (user) {\r\n          const userId = user.uid;\r\n          const exercisesDocRef = doc(db, \"exercises\", userId);\r\n          const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n          if (exercisesDoc.exists()) {\r\n            const exercisesData = exercisesDoc.data();\r\n            const translatedCategory = t(`categories.${category}`);\r\n            const filteredData = exercisesData.exercises\r\n              .filter(\r\n                (exercise: Exercise) =>\r\n                  t(`categories.${exercise.category}`) === translatedCategory\r\n              )\r\n              .map((exercise: Exercise) => ({\r\n                id: exercise.id,\r\n                name: t(exercise.name),\r\n                category: exercise.category,\r\n                bestResult: `${t(\"lastSet\")}: ${exercise.bestResult}`,\r\n                isFavorite: exercise.isFavorite,\r\n              }));\r\n            localStorage.setItem(\"exercisesData\", JSON.stringify(filteredData));\r\n            setData(filteredData);\r\n          } else {\r\n            setData([]);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        notification.error({ message: t(\"errorFetchingExercises\") });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchExercises();\r\n  }, [category, t, updateTrigger]);\r\n\r\n  const handleCancel = () => setIsModalOpen(false);\r\n\r\n  const handleConfirm = () => {\r\n    setConfirm(true);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const toggleFavorite = async (exerciseId: string, currentStatus: boolean) => {\r\n    try {\r\n      const db = getFirestore();\r\n      const auth = getAuth();\r\n      const user = auth.currentUser;\r\n\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(db, \"exercises\", userId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          let updatedExercises = exercisesData.exercises.map(\r\n            (exercise: { id: string }) => {\r\n              if (exercise.id === exerciseId) {\r\n                return { ...exercise, isFavorite: !currentStatus };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: updatedExercises,\r\n          });\r\n\r\n          const translatedCategory = t(`categories.${category}`);\r\n          const filteredData = updatedExercises.filter(\r\n            (exercise: { category: string }) =>\r\n              t(`categories.${exercise.category}`) === translatedCategory\r\n          );\r\n          setData(filteredData);\r\n        }\r\n\r\n        if (!currentStatus) {\r\n          message.success(t(\"removedFromFavorite\"));\r\n        } else {\r\n          message.success(t(\"addedToFavorite\"));\r\n        }\r\n        setIsActive(!isActive);\r\n      }\r\n    } catch (error) {\r\n      message.error(t(\"errorUpdatingFavorite\"));\r\n    }\r\n  };\r\n\r\n  const handleDeleteCard = async (exerciseId: string) => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const db = getFirestore();\r\n      const auth = getAuth();\r\n      const user = auth.currentUser;\r\n\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(db, \"exercises\", userId);\r\n        const setsCollectionRef = doc(db, \"sets\", exerciseId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n        await deleteDoc(setsCollectionRef);\r\n\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          let updatedExercises: Exercise[] = [];\r\n\r\n          if (exercisesData && exercisesData.exercises) {\r\n            updatedExercises = exercisesData.exercises.filter(\r\n              (exercise: Exercise) => exercise.id !== exerciseId\r\n            );\r\n\r\n            await updateDoc(exercisesDocRef, {\r\n              exercises: updatedExercises,\r\n            });\r\n            message.success(t(\"exerciseDeleted\"));\r\n\r\n            const translatedCategory = t(`categories.${category}`);\r\n            const filteredData = updatedExercises.filter(\r\n              (exercise: Exercise) =>\r\n                t(`categories.${exercise.category}`) === translatedCategory\r\n            );\r\n            setData(filteredData);\r\n          }\r\n        }\r\n      }\r\n      setConfirm(false);\r\n    } catch (error) {\r\n      message.error(t(\"errorDeletingExercise\"));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <SubTitle children={t(\"exercises\")} className={styles.title} />\r\n          <ConfigProvider\r\n            theme={{\r\n              components: {\r\n                Card: {\r\n                  headerFontSize: 20,\r\n                  headerBg: \"#1a1a1a\",\r\n                  colorTextHeading: \"#ffffff\",\r\n                  fontSize: 16,\r\n                  colorBorderSecondary: \"#535353\",\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            <Card\r\n              title={\r\n                <span className={styles.cardTitle}>{t(\"chooseExercise\")}</span>\r\n              }\r\n              className={styles.exercises}\r\n              bordered={false}\r\n            >\r\n              {data.length > 0 ? (\r\n                data.map((item: Exercise) => (\r\n                  <Card.Grid\r\n                    key={item.id}\r\n                    onClick={() => onSelectExercise(item)}\r\n                  >\r\n                    <div className={styles.deleteIconBlock}>\r\n                      <Tooltip title={t(\"deleteExercise\")}>\r\n                        <CloseOutlined\r\n                          className={styles.deleteIcon}\r\n                          onClick={handleConfirm}\r\n                        />\r\n                      </Tooltip>\r\n                      {confirm && (\r\n                        <CustomModal\r\n                          open={isModalOpen}\r\n                          onCancel={handleCancel}\r\n                          footer={false}\r\n                        >\r\n                          <p className={styles.confirm}>\r\n                            {t(\"confirmDeletingExercise\")}\r\n                          </p>\r\n                          <div className={styles.delete}>\r\n                            <ResetButton\r\n                              children={t(\"delete\")}\r\n                              onClick={() => handleDeleteCard(item.id)}\r\n                              icon={<DeleteOutlined />}\r\n                            />\r\n                          </div>\r\n                        </CustomModal>\r\n                      )}\r\n                    </div>\r\n                    {item.name}\r\n                    <div className={styles.favoriteIcon}>\r\n                      <Tooltip title={t(\"addToFavorite\")}>\r\n                        <StarFilled\r\n                          className={`${styles.star} ${\r\n                            item.isFavorite ? styles.active : \"\"\r\n                          }`}\r\n                          onClick={() =>\r\n                            toggleFavorite(item.id, item.isFavorite)\r\n                          }\r\n                        />\r\n                      </Tooltip>\r\n                    </div>\r\n                  </Card.Grid>\r\n                ))\r\n              ) : (\r\n                <Empty\r\n                  image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                  description={\r\n                    <span style={{ color: \"#ffffff\" }}>{t(\"noData\")}</span>\r\n                  }\r\n                />\r\n              )}\r\n            </Card>\r\n          </ConfigProvider>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { DescriptionTitle } from \"../../components/DescriptionTitle/DescriptionTitle\";\r\nimport { PageWrapper } from \"../../components/PageWrapper/PageWrapper\";\r\nimport { Exercise, LocationState } from \"../../types/types\";\r\n\r\nimport { ExerciseTable } from \"./ExerciseTable/ExerciseTable\";\r\nimport { AddExercise } from \"./AddExercise/AddExercise\";\r\nimport { Exercises } from \"./Exercises/Exercises\";\r\n\r\nconst Workout: React.FC = () => {\r\n  const location = useLocation();\r\n  const state = location.state as LocationState;\r\n  const [updateTrigger, setUpdateTrigger] = useState(0);\r\n  const [selectedExercise, setSelectedExercise] = useState<Exercise | null>(\r\n    null\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n  }, []);\r\n\r\n  const handleUpdateExercises = () => setUpdateTrigger((prev) => prev + 1);\r\n\r\n  const handleSelectExercise = (exercise: Exercise) =>\r\n    setSelectedExercise(exercise);\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <DescriptionTitle text={state?.title} textAlign=\"center\" />\r\n      <AddExercise\r\n        category={state?.title}\r\n        onAddExercise={handleUpdateExercises}\r\n      />\r\n      <Exercises\r\n        category={state?.title}\r\n        updateTrigger={updateTrigger}\r\n        onSelectExercise={handleSelectExercise}\r\n      />\r\n      <ExerciseTable selectedExercise={selectedExercise} />\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default Workout;\r\n"],"names":["CustomInput","_ref","name","text","type","placeholder","isRequired","className","onChange","value","t","useTranslation","_jsx","styles","children","Form","Item","label","rules","required","Input","concat","allowClear","e","target","autoComplete","CustomModal","open","onCancel","footer","ConfigProvider","theme","components","Modal","contentBg","colorIcon","colorIconHover","style","marginTop","DescriptionTitle","textAlign","ref","controls","useAnimatedInView","motion","h2","descriptionTitle","initial","animate","variants","animation","container","maxWidth","margin","PageWrapper","ResetButton","onClick","icon","Button","SubTitle","p","threshold","arguments","length","undefined","triggerOnce","animationVariants","useAnimation","inView","useInView","useEffect","start","hidden","opacity","visible","transition","duration","NumericInput","onBlur","test","forwardRef","ExerciseTable","selectedExercise","data","setData","useState","editWeight","setEditWeight","editReps","setEditReps","weightInputRef","useRef","repsInputRef","loadExerciseData","async","getAuth","currentUser","db","getFirestore","setsCollectionRef","collection","setDocRef","doc","id","docSnapshot","getDoc","exists","setsData","loadedData","approaches","map","approach","index","key","toString","set","weight","reps","CloseOutlined","setTimeout","window","scrollTo","left","top","document","body","scrollHeight","behavior","error","message","columns","title","dataIndex","width","render","record","updateWeight","newData","row","editableDiv","updateReps","_jsxs","repsAndDelete","deledeContainer","Tooltip","selectedExerciseId","setDocSnapshot","Error","approachIndex","findIndex","splice","updateDoc","success","deleteRow","_Fragment","Divider","backgroundColor","tableTitle","date","Date","toLocaleDateString","Table","headerBg","headerColor","cellFontSize","colorBgContainer","colorText","colorPrimary","rowHoverBg","borderColor","headerSplitColor","dataSource","pagination","table","locale","emptyText","Empty","image","PRESENTED_IMAGE_SIMPLE","description","color","CustomButton","addRow","nextSet","newRow","push","PlusOutlined","tableFooter","LeftOutlined","CheckOutlined","batch","writeBatch","parseInt","commit","AddExercise","onAddExercise","category","exerciseName","setExerciseName","user","userId","uid","exercise","uuidv4","bestResult","isFavorite","exercisesDocRef","exercises","Exercises","updateTrigger","onSelectExercise","loading","setLoading","isActive","setIsActive","isModalOpen","setIsModalOpen","confirm","setConfirm","storedData","JSON","parse","localStorage","getItem","exercisesDoc","exercisesData","translatedCategory","filteredData","filter","setItem","stringify","notification","fetchExercises","handleCancel","handleConfirm","Loader","Card","headerFontSize","colorTextHeading","fontSize","colorBorderSecondary","bordered","item","Grid","exerciseId","deleteDoc","updatedExercises","handleDeleteCard","DeleteOutlined","StarFilled","currentStatus","toggleFavorite","Workout","state","useLocation","setUpdateTrigger","setSelectedExercise","scroll","handleUpdateExercises","prev"],"sourceRoot":""}