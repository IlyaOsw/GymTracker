{"version":3,"file":"static/js/178.e65bc58f.chunk.js","mappings":"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","sources":["webpack://gymtracker/./src/components/ClosableMessage/ClosableMessage.module.scss?797b","components/ClosableMessage/ClosableMessage.tsx","webpack://gymtracker/./src/components/CustomInput/CustomInput.module.scss?82c8","components/CustomInput/CustomInput.tsx","components/CustomModal/CustomModal.tsx","webpack://gymtracker/./src/components/DescriptionTitle/DescriptionTitle.module.scss?64ef","components/DescriptionTitle/DescriptionTitle.tsx","webpack://gymtracker/./src/components/Hexagon/Hexagon.module.scss?2ff0","components/Hexagon/Hexagon.tsx","webpack://gymtracker/./src/components/NumericInput/NumericInput.module.scss?4f22","components/NumericInput/NumericInput.tsx","components/PageWrapper/PageWrapper.tsx","webpack://gymtracker/./src/components/ResetButton/ResetButton.module.scss?4be0","components/ResetButton/ResetButton.tsx","webpack://gymtracker/./src/components/SettingButton/SettingButton.module.scss?b1fb","components/SettingButton/SettingButton.tsx","webpack://gymtracker/./src/components/SubTitle/SubTitle.module.scss?d9b0","components/SubTitle/SubTitle.tsx","hooks/useAnimatedInView .tsx","components/EmptyBox/EmptyBox.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/Exercises.module.scss?28b0","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/CardOptions/CardOptions.module.scss?2f2b","pages/Workout/Exercises/ExerciseCard/CardOptions/CardOptions.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/DeleteIcon/DeleteIcon.module.scss?6012","pages/Workout/Exercises/ExerciseCard/DeleteIcon/ModalDelete/ModalDelete.tsx","pages/Workout/Exercises/ExerciseCard/DeleteIcon/DeleteIcon.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/EditInput/EditInput.module.scss?17ed","pages/Workout/Exercises/ExerciseCard/EditInput/EditInput.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/ExerciseCard.module.scss?e0ae","pages/Workout/Exercises/ExerciseCard/ExerciseCard.tsx","pages/Workout/Exercises/Exercises.tsx","utils/scrollToBottom.ts","webpack://gymtracker/./src/pages/Workout/ExerciseTable/ExerciseTable.module.scss?799a","webpack://gymtracker/./src/pages/Workout/ExerciseTable/TableFooter/TableFooter.module.scss?31d1","webpack://gymtracker/./src/pages/Workout/ExerciseTable/TableFooter/TrainingHistory/TrainingHistory.module.scss?acc6","pages/Workout/ExerciseTable/TableFooter/TrainingHistory/TrainingHistory.tsx","pages/Workout/ExerciseTable/TableFooter/TableFooter.tsx","webpack://gymtracker/./src/pages/Workout/ExerciseTable/BestResult/BestResult.module.scss?47bd","pages/Workout/ExerciseTable/BestResult/BestResult.tsx","webpack://gymtracker/./src/pages/Workout/ExerciseTable/DeleteWorkout/DeleteWorkout.module.scss?dc25","pages/Workout/ExerciseTable/DeleteWorkout/DeleteWorkout.tsx","pages/Workout/ExerciseTable/ExerciseTable.tsx","webpack://gymtracker/./src/pages/Workout/AddExercise/AddExercise.module.scss?140e","pages/Workout/AddExercise/AddExercise.tsx","pages/Workout/Workout.tsx","utils/scrollToTop.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"customMessage\":\"ClosableMessage_customMessage__I89Df\",\"closeIcon\":\"ClosableMessage_closeIcon__M7QGN\"};","import { message } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\n\r\nimport { ClosableMessagePropsType } from \"../../types/types\";\r\n\r\nimport styles from \"./ClosableMessage.module.scss\";\r\n\r\nexport const ClosableMessage = ({\r\n  type,\r\n  content,\r\n}: ClosableMessagePropsType) => {\r\n  const key = \"closable-message\";\r\n\r\n  const closeMessage = () => message.destroy(key);\r\n\r\n  message[type]({\r\n    key,\r\n    content: (\r\n      <div>\r\n        {content}\r\n        <CloseOutlined onClick={closeMessage} className={styles.closeIcon} />\r\n      </div>\r\n    ),\r\n    className: styles.customMessage,\r\n  });\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"CustomInput_inputWrapper__wz8SN\",\"inputLabel\":\"CustomInput_inputLabel__b-QWx\",\"inputField\":\"CustomInput_inputField__baNtE\"};","import { Form, Input } from \"antd\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CustomInputProps, FieldType } from \"../../types/types\";\r\n\r\nimport styles from \"./CustomInput.module.scss\";\r\n\r\nexport const CustomInput: React.FC<CustomInputProps> = ({\r\n  name,\r\n  text,\r\n  type,\r\n  placeholder,\r\n  isRequired = true,\r\n  className,\r\n  onChange,\r\n  value,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    if (onChange) {\r\n      onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.inputWrapper}>\r\n      <Form.Item<FieldType>\r\n        label={<span className={styles.inputLabel}>{t(text)}</span>}\r\n        name={name}\r\n        rules={[{ required: isRequired }]}\r\n      >\r\n        <Input\r\n          type={type}\r\n          placeholder={placeholder}\r\n          className={`${styles.inputField} ${className}`}\r\n          allowClear\r\n          onChange={handleChange}\r\n          value={value}\r\n          autoComplete=\"off\"\r\n        />\r\n      </Form.Item>\r\n    </div>\r\n  );\r\n};\r\n","import { ConfigProvider, Modal } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { CustomModalProps } from \"../../types/types\";\r\n\r\nexport const CustomModal: React.FC<CustomModalProps> = ({\r\n  open,\r\n  onCancel,\r\n  footer = null,\r\n  children,\r\n  className,\r\n}) => {\r\n  useEffect(() => {\r\n    if (open) {\r\n      document.body.style.overflow = \"hidden\";\r\n    } else {\r\n      document.body.style.overflow = \"auto\";\r\n    }\r\n\r\n    return () => {\r\n      document.body.style.overflow = \"auto\";\r\n    };\r\n  }, [open]);\r\n\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        components: {\r\n          Modal: {\r\n            contentBg: \"#141414\",\r\n            colorIcon: \"lightgray\",\r\n            colorIconHover: \"gray\",\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <Modal\r\n        open={open}\r\n        onCancel={onCancel}\r\n        footer={footer}\r\n        style={{ marginTop: \"40px\" }}\r\n        className={className}\r\n      >\r\n        {children}\r\n      </Modal>\r\n    </ConfigProvider>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionTitle\":\"DescriptionTitle_descriptionTitle__E-lRw\",\"start\":\"DescriptionTitle_start__FSu7h\",\"center\":\"DescriptionTitle_center__eJvMJ\",\"end\":\"DescriptionTitle_end__uV+MA\"};","import { motion } from \"framer-motion\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\nimport { IDescriptionTitleAndText } from \"../../types/types\";\r\n\r\nimport styles from \"./DescriptionTitle.module.scss\";\r\n\r\nexport const DescriptionTitle: React.FC<IDescriptionTitleAndText> = ({\r\n  text,\r\n  textAlign = \"start\",\r\n  className,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { ref, controls } = useAnimatedInView();\r\n\r\n  return (\r\n    <motion.h2\r\n      ref={ref}\r\n      className={`${styles.descriptionTitle} ${styles[textAlign]} ${className}`}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n    >\r\n      {t(text)}\r\n    </motion.h2>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Hexagon_wrapper__orCOo\",\"hexagon\":\"Hexagon_hexagon__Lz5zU\",\"imageContainer\":\"Hexagon_imageContainer__CcV75\",\"imageText\":\"Hexagon_imageText__dxduD\"};","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { HexagonProps } from \"../../types/types\";\r\n\r\nimport styles from \"./Hexagon.module.scss\";\r\n\r\nexport const Hexagon: React.FC<HexagonProps> = ({\r\n  text,\r\n  className,\r\n  onClick,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.imageContainer} onClick={onClick}>\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/assets/Icons/Hexagon/Hexagon.svg\"}\r\n          alt=\"Hexagon\"\r\n          className={styles.hexagon}\r\n        />\r\n        <span className={`${styles.imageText} ${className}`}>{t(text)}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"NumericInput_input__1SATw\"};","import React, { forwardRef, ChangeEvent } from \"react\";\r\n\r\nimport { NumericInputProps } from \"../../types/types\";\r\n\r\nimport styles from \"./NumericInput.module.scss\";\r\n\r\nconst NumericInput: React.ForwardRefRenderFunction<\r\n  HTMLInputElement,\r\n  NumericInputProps\r\n> = ({ value, onChange, onBlur }, ref) => {\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let value = e.target.value;\r\n    value = value.replace(\",\", \".\");\r\n\r\n    if (value.length > 1 && value.startsWith(\"0\") && !value.startsWith(\"0.\")) {\r\n      value = value.substring(1);\r\n    }\r\n\r\n    if (/^\\d*\\.?\\d*$/.test(value)) {\r\n      onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      ref={ref}\r\n      value={value}\r\n      onChange={handleChange}\r\n      onBlur={onBlur}\r\n      className={styles.input}\r\n      type=\"text\"\r\n      inputMode=\"decimal\"\r\n      pattern=\"[0-9]*[.,]?[0-9]*\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default forwardRef(NumericInput);\r\n","import React from \"react\";\r\n\r\nimport { PageWrapperProps } from \"../../types/types\";\r\n\r\nconst container: React.CSSProperties = {\r\n  maxWidth: \"1200px\",\r\n  margin: \"0 auto\",\r\n};\r\n\r\nexport const PageWrapper: React.FC<PageWrapperProps> = ({ children }) => {\r\n  return <div style={container}>{children}</div>;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"reset\":\"ResetButton_reset__efwrw\"};","import React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nimport { ResetBtnType } from \"../../types/types\";\r\n\r\nimport styles from \"./ResetButton.module.scss\";\r\n\r\nexport const ResetButton: React.FC<ResetBtnType> = ({\r\n  onClick,\r\n  children,\r\n  icon,\r\n}) => {\r\n  return (\r\n    <Button className={styles.reset} onClick={onClick} icon={icon}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"SettingButton_btn__TNlVz\"};","import { Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nimport styles from \"./SettingButton.module.scss\";\r\n\r\nexport type SettingButtonPropsType = {\r\n  onClick?: (e: any) => void;\r\n  icon?: React.ReactNode;\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n};\r\n\r\nexport const SettingButton: React.FC<SettingButtonPropsType> = ({\r\n  onClick,\r\n  icon,\r\n  children,\r\n  className,\r\n}) => {\r\n  return (\r\n    <Button\r\n      onClick={onClick}\r\n      icon={icon}\r\n      className={`${styles.btn} ${className}`}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"subTitle\":\"SubTitle_subTitle__6A8PN\"};","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\nimport { SubTitleType } from \"../../types/types\";\r\n\r\nimport styles from \"./SubTitle.module.scss\";\r\n\r\nexport const SubTitle: React.FC<SubTitleType> = ({ children, className }) => {\r\n  const { ref, controls } = useAnimatedInView();\r\n\r\n  return (\r\n    <motion.p\r\n      ref={ref}\r\n      className={`${styles.subTitle} ${className}`}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n    >\r\n      {children}\r\n    </motion.p>\r\n  );\r\n};\r\n","import { useAnimation, Variants } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useAnimatedInView = (\r\n  threshold: number = 0.1,\r\n  triggerOnce: boolean = false,\r\n  animationVariants?: Variants\r\n) => {\r\n  const controls = useAnimation();\r\n  const [ref, inView] = useInView({ threshold, triggerOnce });\r\n\r\n  useEffect(() => {\r\n    if (inView) {\r\n      controls.start(\"visible\");\r\n    } else {\r\n      controls.start(\"hidden\");\r\n    }\r\n  }, [controls, inView]);\r\n\r\n  return { ref, controls, animationVariants };\r\n};\r\n\r\nexport const animation = {\r\n  hidden: { opacity: 0 },\r\n  visible: { opacity: 1, transition: { duration: 1 } },\r\n};\r\n","import { Empty } from \"antd\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const EmptyBox: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Empty\r\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n      description={<span style={{ color: \"#ffffff\" }}>{t(\"noData\")}</span>}\r\n    />\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Exercises_title__ThgWQ\",\"description\":\"Exercises_description__cykz7\",\"cards\":\"Exercises_cards__+xw7k\"};","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"CardOptions_options__F-aCP\",\"star\":\"CardOptions_star__tS7rd\",\"active\":\"CardOptions_active__E3ut+\",\"editExercise\":\"CardOptions_editExercise__JcxiY\",\"editBtn\":\"CardOptions_editBtn__WYKcX\",\"saveRecord\":\"CardOptions_saveRecord__QY7zv\"};","import React, { useState } from \"react\";\r\nimport { CheckOutlined, EditOutlined, StarFilled } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { CardOptionsPropsType } from \"../../../../../types/types\";\r\nimport { SettingButton } from \"../../../../../components/SettingButton/SettingButton\";\r\nimport { ClosableMessage } from \"../../../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./CardOptions.module.scss\";\r\n\r\nexport const CardOptions: React.FC<CardOptionsPropsType> = ({\r\n  item,\r\n  category,\r\n  setData,\r\n  setCurrentEditingId,\r\n  setNewName,\r\n  editMode,\r\n  setEditMode,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [isActive, setIsActive] = useState<boolean>(false);\r\n\r\n  const toggleFavorite = async (exerciseId: string, currentStatus: boolean) => {\r\n    try {\r\n      const user = getAuth().currentUser;\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          const favoriteExercisesCount = exercisesData.exercises.filter(\r\n            (exercise: { isFavorite: boolean }) => exercise.isFavorite\r\n          ).length;\r\n\r\n          if (!currentStatus && favoriteExercisesCount >= 3) {\r\n            ClosableMessage({\r\n              type: \"warning\",\r\n              content: t(\"maxFavoritesReached\"),\r\n            });\r\n            return;\r\n          }\r\n\r\n          let updatedExercises = exercisesData.exercises.map(\r\n            (exercise: { id: string }) => {\r\n              if (exercise.id === exerciseId) {\r\n                return { ...exercise, isFavorite: !currentStatus };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: updatedExercises,\r\n          });\r\n\r\n          const translatedCategory = t(`categories.${category}`);\r\n          const filteredData = updatedExercises.filter(\r\n            (exercise: { category: string }) =>\r\n              t(`categories.${exercise.category}`) === translatedCategory\r\n          );\r\n          setData(filteredData);\r\n        }\r\n\r\n        if (!currentStatus) {\r\n          ClosableMessage({ type: \"success\", content: t(\"addedToFavorite\") });\r\n          return;\r\n        } else {\r\n          ClosableMessage({\r\n            type: \"success\",\r\n            content: t(\"removedFromFavorite\"),\r\n          });\r\n        }\r\n        setIsActive(!isActive);\r\n      }\r\n    } catch (error) {\r\n      ClosableMessage({ type: \"error\", content: t(\"errorUpdatingFavorite\") });\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (exerciseId: string, currentName: string) => {\r\n    setCurrentEditingId(exerciseId);\r\n    setNewName(currentName);\r\n    setEditMode(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.options}>\r\n      <SettingButton\r\n        icon={<StarFilled />}\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          toggleFavorite(item.id, item.isFavorite);\r\n        }}\r\n        className={`${styles.star} ${item.isFavorite ? styles.active : \"\"}`}\r\n      >\r\n        <span>{t(\"favorite\")}</span>\r\n      </SettingButton>\r\n      {editMode ? (\r\n        <div className={styles.editBtn}>\r\n          <SettingButton icon={<CheckOutlined />} className={styles.saveRecord}>\r\n            <span>{t(\"save\")}</span>\r\n          </SettingButton>\r\n        </div>\r\n      ) : (\r\n        <SettingButton\r\n          icon={<EditOutlined />}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleEditClick(item.id, item.name);\r\n          }}\r\n          className={styles.editExercise}\r\n        >\r\n          <span>{t(\"editName\")}</span>\r\n        </SettingButton>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"deleteIconContainer\":\"DeleteIcon_deleteIconContainer__IWqYi\",\"exerciseNumber\":\"DeleteIcon_exerciseNumber__Q9Zs7\",\"deleteIcon\":\"DeleteIcon_deleteIcon__ntbKM\",\"confirm\":\"DeleteIcon_confirm__0yMiT\",\"deleteSave\":\"DeleteIcon_deleteSave__joWfR\"};","import React from \"react\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  deleteDoc,\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { CustomModal } from \"../../../../../../components/CustomModal/CustomModal\";\r\nimport { ResetButton } from \"../../../../../../components/ResetButton/ResetButton\";\r\nimport { ModalDeletePropsType, Exercise } from \"../../../../../../types/types\";\r\nimport { scrollToTop } from \"../../../../../../utils/scrollToTop\";\r\n\r\nimport styles from \"../DeleteIcon.module.scss\";\r\nimport { ClosableMessage } from \"../../../../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nexport const ModalDelete: React.FC<ModalDeletePropsType> = ({\r\n  setLoading,\r\n  setIsModalOpen,\r\n  category,\r\n  setData,\r\n  isModalOpen,\r\n  handleCancel,\r\n  item,\r\n  setConfirm,\r\n  setSelectedExercise,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const handleDeleteCard = async (exerciseId: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const user = getAuth().currentUser;\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n        const setsCollectionRef = doc(getFirestore(), \"sets\", exerciseId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n        await deleteDoc(setsCollectionRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          let updatedExercises: Exercise[] = [];\r\n\r\n          if (exercisesData && exercisesData.exercises) {\r\n            updatedExercises = exercisesData.exercises.filter(\r\n              (exercise: Exercise) => exercise.id !== exerciseId\r\n            );\r\n\r\n            await updateDoc(exercisesDocRef, {\r\n              exercises: updatedExercises,\r\n            });\r\n            const filteredData = updatedExercises.filter(\r\n              (exercise: Exercise) => t(exercise.category) === t(category)\r\n            );\r\n            setData(filteredData);\r\n            localStorage.setItem(\"exercisesData\", JSON.stringify(filteredData));\r\n          }\r\n        }\r\n        setConfirm(false);\r\n        setIsModalOpen(false);\r\n        setLoading(false);\r\n        setSelectedExercise(null);\r\n        scrollToTop();\r\n        ClosableMessage({ type: \"success\", content: t(\"exerciseDeleted\") });\r\n      }\r\n    } catch (error) {\r\n      ClosableMessage({ type: \"error\", content: t(\"errorDeletingExercise\") });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CustomModal\r\n      open={isModalOpen}\r\n      onCancel={(e) => {\r\n        handleCancel(e);\r\n        setIsModalOpen(false);\r\n      }}\r\n      footer={false}\r\n    >\r\n      <p className={styles.confirm}>{t(\"confirmDeletingExercise\")}</p>\r\n      <div className={styles.deleteSave}>\r\n        <ResetButton\r\n          children={t(\"delete\")}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleDeleteCard(item.id);\r\n          }}\r\n          icon={<DeleteOutlined />}\r\n        />\r\n      </div>\r\n    </CustomModal>\r\n  );\r\n};\r\n","import { CloseOutlined } from \"@ant-design/icons\";\r\nimport { Tooltip } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { DeleteIconPropsType } from \"../../../../../types/types\";\r\n\r\nimport { ModalDelete } from \"./ModalDelete/ModalDelete\";\r\nimport styles from \"./DeleteIcon.module.scss\";\r\n\r\nexport const DeleteIcon: React.FC<DeleteIconPropsType> = ({\r\n  setLoading,\r\n  setIsModalOpen,\r\n  category,\r\n  setData,\r\n  isModalOpen,\r\n  handleCancel,\r\n  item,\r\n  index,\r\n  setSelectedExercise,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [confirm, setConfirm] = useState<boolean>(false);\r\n\r\n  const handleConfirm = () => {\r\n    setConfirm(true);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.deleteIconContainer}>\r\n        <div className={styles.exerciseNumber}>{index + 1}.</div>\r\n        <Tooltip title={t(\"deleteExercise\")}>\r\n          <CloseOutlined\r\n            className={styles.deleteIcon}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleConfirm();\r\n            }}\r\n          />\r\n        </Tooltip>\r\n      </div>\r\n      {confirm && (\r\n        <ModalDelete\r\n          setLoading={setLoading}\r\n          category={category}\r\n          setData={setData}\r\n          isModalOpen={isModalOpen}\r\n          setIsModalOpen={setIsModalOpen}\r\n          handleCancel={handleCancel}\r\n          item={item}\r\n          setConfirm={setConfirm}\r\n          setSelectedExercise={setSelectedExercise}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"editInput\":\"EditInput_editInput__CnmRa\"};","import React, { useEffect, useRef } from \"react\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { EditInputPropsType, Exercise } from \"../../../../../types/types\";\r\nimport { ClosableMessage } from \"../../../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./EditInput.module.scss\";\r\n\r\nexport const EditInput: React.FC<EditInputPropsType> = ({\r\n  newName,\r\n  editMode,\r\n  currentEditingId,\r\n  setCurrentEditingId,\r\n  category,\r\n  setData,\r\n  setEditMode,\r\n  setNewName,\r\n}) => {\r\n  const user = getAuth().currentUser;\r\n  const { t } = useTranslation();\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (editMode && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editMode]);\r\n\r\n  const changeExerciseName = async (exerciseId: string, newName: string) => {\r\n    try {\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n\r\n          const currentExercise = exercisesData.exercises.find(\r\n            (exercise: { id: string }) => exercise.id === exerciseId\r\n          );\r\n\r\n          if (currentExercise && currentExercise.name === newName) {\r\n            ClosableMessage({\r\n              type: \"warning\",\r\n              content: t(\"nameNotChanged\"),\r\n            });\r\n            return;\r\n          }\r\n\r\n          if (newName.trim().length < 3) {\r\n            ClosableMessage({\r\n              type: \"error\",\r\n              content: t(\"nameMin3Symbols\"),\r\n            });\r\n            return;\r\n          }\r\n          const nameExists = exercisesData.exercises.some(\r\n            (exercise: { id: string; name: string }) =>\r\n              exercise.id !== exerciseId && exercise.name === newName\r\n          );\r\n\r\n          if (nameExists) {\r\n            ClosableMessage({\r\n              type: \"error\",\r\n              content: t(\"nameAlreadyExists\"),\r\n            });\r\n            return;\r\n          }\r\n\r\n          let updatedExercises = exercisesData.exercises.map(\r\n            (exercise: { id: string; name: string }) => {\r\n              if (exercise.id === exerciseId) {\r\n                return { ...exercise, name: newName };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: updatedExercises,\r\n          });\r\n\r\n          const filteredData = updatedExercises\r\n            .filter(\r\n              (exercise: { category: string }) =>\r\n                t(`categories.${exercise.category}`) ===\r\n                t(`categories.${category}`)\r\n            )\r\n            .map((exercise: Exercise) => ({\r\n              id: exercise.id,\r\n              name: t(exercise.name),\r\n              category: exercise.category,\r\n              bestResult: `${t(\"lastSet\")}: ${exercise.bestResult}`,\r\n              isFavorite: exercise.isFavorite,\r\n            }));\r\n\r\n          localStorage.setItem(\"exercisesData\", JSON.stringify(filteredData));\r\n          setData(filteredData);\r\n\r\n          ClosableMessage({\r\n            type: \"success\",\r\n            content: t(\"nameUpdated\"),\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      ClosableMessage({ type: \"error\", content: t(\"nameChangeFailed\") });\r\n    }\r\n  };\r\n\r\n  const handleEditKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key === \"Enter\" && currentEditingId) {\r\n      changeExerciseName(currentEditingId, newName);\r\n      setEditMode(false);\r\n      setCurrentEditingId(null);\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (currentEditingId) {\r\n      changeExerciseName(currentEditingId, newName);\r\n      setEditMode(false);\r\n      setCurrentEditingId(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      value={newName}\r\n      className={styles.editInput}\r\n      onChange={(e) => setNewName(e.target.value)}\r\n      onKeyDown={handleEditKeyDown}\r\n      onBlur={handleBlur}\r\n      ref={inputRef}\r\n    />\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cardItem\":\"ExerciseCard_cardItem__2AKct\",\"active\":\"ExerciseCard_active__7n1-4\",\"exerciseContainer\":\"ExerciseCard_exerciseContainer__nXbmq\",\"exerciseName\":\"ExerciseCard_exerciseName__MCYS-\"};","import React, { useState } from \"react\";\r\n\r\nimport { Exercise, ExerciseCardPropsType } from \"../../../../types/types\";\r\n\r\nimport { CardOptions } from \"./CardOptions/CardOptions\";\r\nimport { DeleteIcon } from \"./DeleteIcon/DeleteIcon\";\r\nimport { EditInput } from \"./EditInput/EditInput\";\r\nimport styles from \"./ExerciseCard.module.scss\";\r\n\r\nexport const ExerciseCard: React.FC<ExerciseCardPropsType> = ({\r\n  item,\r\n  onSelectExercise,\r\n  category,\r\n  setData,\r\n  setLoading,\r\n  activeCardId,\r\n  setActiveCardId,\r\n  index,\r\n  exercisesRef,\r\n  setSelectedExercise,\r\n}) => {\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [newName, setNewName] = useState<string>(\"\");\r\n  const [currentEditingId, setCurrentEditingId] = useState<string | null>(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const handleCancel = (e: { stopPropagation: () => void }) => {\r\n    e.stopPropagation();\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleCardClick = (item: Exercise) => {\r\n    setActiveCardId(item.id);\r\n    onSelectExercise(item);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.cardItem} ${\r\n        activeCardId === item.id ? styles.active : \"\"\r\n      }`}\r\n      onClick={() => handleCardClick(item)}\r\n      ref={exercisesRef}\r\n    >\r\n      <DeleteIcon\r\n        setLoading={setLoading}\r\n        setIsModalOpen={setIsModalOpen}\r\n        category={category}\r\n        setData={setData}\r\n        isModalOpen={isModalOpen}\r\n        handleCancel={handleCancel}\r\n        item={item}\r\n        index={index}\r\n        setSelectedExercise={setSelectedExercise}\r\n      />\r\n      {currentEditingId === item.id && editMode ? (\r\n        <EditInput\r\n          newName={newName}\r\n          editMode={editMode}\r\n          currentEditingId={currentEditingId}\r\n          setCurrentEditingId={setCurrentEditingId}\r\n          category={category}\r\n          setData={setData}\r\n          setEditMode={setEditMode}\r\n          setNewName={setNewName}\r\n        />\r\n      ) : (\r\n        <div className={styles.exerciseContainer}>\r\n          <span className={styles.exerciseName}>{item.name}</span>\r\n        </div>\r\n      )}\r\n      <CardOptions\r\n        item={item}\r\n        category={category}\r\n        setData={setData}\r\n        setCurrentEditingId={setCurrentEditingId}\r\n        setNewName={setNewName}\r\n        editMode={editMode}\r\n        setEditMode={setEditMode}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport { Exercise, ExercisesProps } from \"../../../types/types\";\r\nimport { Loader } from \"../../../components/Loader/Loader\";\r\nimport { EmptyBox } from \"../../../components/EmptyBox/EmptyBox\";\r\nimport { ClosableMessage } from \"../../../components/ClosableMessage/ClosableMessage\";\r\nimport i18n from \"../../../i18n\";\r\n\r\nimport styles from \"./Exercises.module.scss\";\r\nimport { ExerciseCard } from \"./ExerciseCard/ExerciseCard\";\r\n\r\nexport const Exercises: React.FC<ExercisesProps> = ({\r\n  category,\r\n  updateTrigger,\r\n  onSelectExercise,\r\n  exercisesRef,\r\n  activeCardId,\r\n  setActiveCardId,\r\n  setSelectedExercise,\r\n  data,\r\n  setData,\r\n}) => {\r\n  const user = getAuth().currentUser;\r\n  const { t } = useTranslation();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(\r\n      localStorage.getItem(\"exercisesData\") || \"[]\"\r\n    );\r\n    if (storedData.length > 0) {\r\n      setData(storedData);\r\n      setLoading(false);\r\n    }\r\n  }, [category]);\r\n\r\n  useEffect(() => {\r\n    const fetchExercises = async () => {\r\n      setLoading(true);\r\n      try {\r\n        if (user) {\r\n          const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n          const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n          if (exercisesDoc.exists()) {\r\n            const exercisesData = exercisesDoc.data();\r\n            const categoryTranslated = t(category);\r\n\r\n            const filteredData = exercisesData.exercises.filter(\r\n              (exercise: Exercise) => {\r\n                const exerciseCategoryTranslated = t(exercise.category);\r\n\r\n                return exerciseCategoryTranslated === categoryTranslated;\r\n              }\r\n            );\r\n\r\n            localStorage.setItem(\"exercisesData\", JSON.stringify(filteredData));\r\n            setData(filteredData);\r\n          }\r\n        }\r\n        setLoading(false);\r\n      } catch (error) {\r\n        ClosableMessage({\r\n          type: \"error\",\r\n          content: t(\"errorFetchingExercises\"),\r\n        });\r\n      }\r\n    };\r\n\r\n    fetchExercises();\r\n  }, [category, t, updateTrigger, i18n.language]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <SubTitle children={t(\"exercises\")} className={styles.title} />\r\n          <div className={styles.description}>{t(\"chooseExercise\")}</div>\r\n          <div className={styles.cards}>\r\n            {data.length ? (\r\n              data.map((item: Exercise, index) => (\r\n                <ExerciseCard\r\n                  key={item.id}\r\n                  item={item}\r\n                  onSelectExercise={onSelectExercise}\r\n                  category={category}\r\n                  setData={setData}\r\n                  setLoading={setLoading}\r\n                  activeCardId={activeCardId}\r\n                  setActiveCardId={setActiveCardId}\r\n                  index={index}\r\n                  exercisesRef={exercisesRef}\r\n                  setSelectedExercise={setSelectedExercise}\r\n                />\r\n              ))\r\n            ) : (\r\n              <EmptyBox />\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","export const scrollToBottom = () =>\r\n  setTimeout(() => {\r\n    window.scrollTo({\r\n      left: 0,\r\n      top: document.body.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, 150);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableTitle\":\"ExerciseTable_tableTitle__nWHV1\",\"subtitle\":\"ExerciseTable_subtitle__dWB0y\",\"dateAndDelete\":\"ExerciseTable_dateAndDelete__Rghoq\",\"table\":\"ExerciseTable_table__gqYvK\",\"editableDiv\":\"ExerciseTable_editableDiv__lnIPx\",\"repsAndDelete\":\"ExerciseTable_repsAndDelete__sJi7S\"};","// extracted by mini-css-extract-plugin\nexport default {\"tableFooter\":\"TableFooter_tableFooter__Vdj4o\",\"saveBtn\":\"TableFooter_saveBtn__CLumP\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TrainingHistory_container__1IuQh\",\"collapse\":\"TrainingHistory_collapse__X+YQG\",\"historyWorkout\":\"TrainingHistory_historyWorkout__wDKRi\"};","import React from \"react\";\r\nimport { Collapse } from \"antd\";\r\nimport { RightOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { TrainingHistoryPropsType } from \"../../../../../types/types\";\r\nimport { scrollToBottom } from \"../../../../../utils/scrollToBottom\";\r\n\r\nimport styles from \"./TrainingHistory.module.scss\";\r\n\r\nexport const TrainingHistory: React.FC<TrainingHistoryPropsType> = ({\r\n  showHistory,\r\n  workouts,\r\n  workoutDates,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formatDate = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"ru-RU\");\r\n  };\r\n\r\n  const sortedData = workoutDates\r\n    .map((date, index) => ({ date, workout: workouts[index] }))\r\n    .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\r\n\r\n  const genExtra = () => (\r\n    <img\r\n      src={process.env.PUBLIC_URL + \"/assets/Icons/AdditionalIcons/history.png\"}\r\n    />\r\n  );\r\n\r\n  const items = sortedData.map((item, index) => ({\r\n    key: index.toString(),\r\n    label: (\r\n      <p onClick={scrollToBottom}>\r\n        {t(\"workoutFor\")} <span> {formatDate(item.date)} </span>\r\n      </p>\r\n    ),\r\n    children: (\r\n      <div className={styles.historyWorkout}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>{t(\"set\")}</th>\r\n              <th>{t(\"weight\")}</th>\r\n              <th>{t(\"reps\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {item.workout.map((w, i) => (\r\n              <tr key={i}>\r\n                <td>{w.set}.</td>\r\n                <td>{w.weight}</td>\r\n                <td>{w.reps}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    ),\r\n    extra: genExtra(),\r\n  }));\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {showHistory && workouts.length > 0 && (\r\n        <Collapse\r\n          bordered={false}\r\n          expandIcon={({ isActive }) => (\r\n            <RightOutlined rotate={isActive ? 90 : 0} />\r\n          )}\r\n          items={items}\r\n          className={styles.collapse}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  RightOutlined,\r\n  CloseOutlined,\r\n  LeftOutlined,\r\n  PlusOutlined,\r\n  CheckOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { collection, doc, getDoc, getFirestore } from \"firebase/firestore\";\r\n\r\nimport { CustomButton } from \"../../../../components/CustomButton/CustomButton\";\r\nimport {\r\n  ExerciseTableType,\r\n  TableFooterPropsType,\r\n} from \"../../../../types/types\";\r\nimport { SettingButton } from \"../../../../components/SettingButton/SettingButton\";\r\n\r\nimport styles from \"./TableFooter.module.scss\";\r\nimport { TrainingHistory } from \"./TrainingHistory/TrainingHistory\";\r\n\r\nexport const TableFooter: React.FC<TableFooterPropsType> = ({\r\n  selectedExercise,\r\n  data,\r\n  setData,\r\n  setEditWeight,\r\n  saveExerciseData,\r\n  onWorkoutDateChange,\r\n  setCurrentWorkout,\r\n  addRowBtn,\r\n  setAddRowBtn,\r\n  saveBtn,\r\n  setSaveBtn,\r\n  setDeleteBtn,\r\n  showHistory,\r\n  setShowHistory,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [workouts, setWorkouts] = useState<ExerciseTableType[][]>([]);\r\n  const [workoutDates, setWorkoutDates] = useState<string[]>([]);\r\n  const [currentWorkoutIndex, setCurrentWorkoutIndex] = useState<number>(-1);\r\n  const [hideButtons, setHideButtons] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadWorkouts = async () => {\r\n      setHideButtons(true);\r\n      setCurrentWorkoutIndex(-1);\r\n      setAddRowBtn(false);\r\n      setSaveBtn(false);\r\n      setDeleteBtn(false);\r\n      setCurrentWorkout(false);\r\n      setData([]);\r\n\r\n      if (selectedExercise) {\r\n        const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n        const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n        try {\r\n          const docSnapshot = await getDoc(setDocRef);\r\n          if (docSnapshot.exists()) {\r\n            const workoutsData = docSnapshot.data()?.workouts || [];\r\n\r\n            if (Array.isArray(workoutsData) && workoutsData.length > 0) {\r\n              setWorkouts(\r\n                workoutsData.map((workout) => workout.approaches || [])\r\n              );\r\n              setWorkoutDates(workoutsData.map((workout) => workout.date));\r\n              const lastIndex = workoutsData.length - 1;\r\n              setCurrentWorkoutIndex(lastIndex);\r\n              setHideButtons(false);\r\n              onWorkoutDateChange(workoutsData[lastIndex].date);\r\n            } else {\r\n              setData([]);\r\n              setWorkoutDates([]);\r\n              setCurrentWorkoutIndex(-1);\r\n              setHideButtons(true);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error loading workouts:\", error);\r\n        }\r\n      }\r\n    };\r\n\r\n    loadWorkouts();\r\n  }, [selectedExercise]);\r\n\r\n  const addRow = () => {\r\n    if (!selectedExercise) return;\r\n    const newData = [...data];\r\n    const nextSet =\r\n      newData.length > 0 ? newData[newData.length - 1].set + 1 : 1;\r\n\r\n    const newRow: ExerciseTableType = {\r\n      key: nextSet.toString(),\r\n      weight: \"\",\r\n      set: nextSet,\r\n      reps: \"\",\r\n      icon: <CloseOutlined />,\r\n    };\r\n\r\n    newData.push(newRow);\r\n    setData(newData);\r\n    setEditWeight(newRow.key);\r\n  };\r\n\r\n  const startNewTraining = () => {\r\n    setData([]);\r\n    setAddRowBtn(true);\r\n    setSaveBtn(true);\r\n    setHideButtons(true);\r\n    setCurrentWorkout(true);\r\n    setDeleteBtn(false);\r\n    setShowHistory(true);\r\n  };\r\n\r\n  const showPreviousWorkout = () => {\r\n    if (currentWorkoutIndex > 0) {\r\n      const newIndex = currentWorkoutIndex - 1;\r\n      setCurrentWorkoutIndex(newIndex);\r\n      setData(workouts[newIndex] || []);\r\n      onWorkoutDateChange(workoutDates[newIndex]);\r\n    }\r\n  };\r\n\r\n  const showNextWorkout = () => {\r\n    if (currentWorkoutIndex < workouts.length - 1) {\r\n      const newIndex = currentWorkoutIndex + 1;\r\n      setCurrentWorkoutIndex(newIndex);\r\n      setData(workouts[newIndex] || []);\r\n      onWorkoutDateChange(workoutDates[newIndex]);\r\n    }\r\n  };\r\n\r\n  const isLastWorkout = currentWorkoutIndex === workouts.length - 1;\r\n\r\n  return (\r\n    <>\r\n      {addRowBtn && (\r\n        <SettingButton onClick={addRow} icon={<PlusOutlined />}>\r\n          {t(\"addRow\")}\r\n        </SettingButton>\r\n      )}\r\n      {saveBtn && (\r\n        <div className={styles.saveBtn}>\r\n          <CustomButton onClick={saveExerciseData} icon={<CheckOutlined />}>\r\n            {t(\"saveTraining\")}\r\n          </CustomButton>\r\n        </div>\r\n      )}\r\n      <div className={styles.tableFooter}>\r\n        {!hideButtons && currentWorkoutIndex > 0 ? (\r\n          <CustomButton onClick={showPreviousWorkout} icon={<LeftOutlined />}>\r\n            {t(\"previous\")}\r\n          </CustomButton>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {!hideButtons && !isLastWorkout && (\r\n          <CustomButton onClick={showNextWorkout} icon={<RightOutlined />}>\r\n            {t(\"next\")}\r\n          </CustomButton>\r\n        )}\r\n        {(isLastWorkout || hideButtons) && !saveBtn && (\r\n          <CustomButton onClick={startNewTraining}>\r\n            {t(\"newEntry\")}\r\n            <RightOutlined />\r\n          </CustomButton>\r\n        )}\r\n      </div>\r\n      <TrainingHistory\r\n        showHistory={showHistory}\r\n        setShowHistory={setShowHistory}\r\n        workouts={workouts}\r\n        workoutDates={workoutDates}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"collapse\":\"BestResult_collapse__pQyb-\",\"title\":\"BestResult_title__jsqEH\",\"wrapper\":\"BestResult_wrapper__1-LYV\",\"hexagonTitle\":\"BestResult_hexagonTitle__x6aFK\",\"hexagonContainer\":\"BestResult_hexagonContainer__9mpLp\",\"container\":\"BestResult_container__dYweL\",\"saveRecord\":\"BestResult_saveRecord__oirpc\"};","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CheckOutlined } from \"@ant-design/icons\";\r\nimport { Collapse } from \"antd\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { SettingButton } from \"../../../../components/SettingButton/SettingButton\";\r\nimport NumericInput from \"../../../../components/NumericInput/NumericInput\";\r\nimport { BestResultProps, Exercise } from \"../../../../types/types\";\r\nimport { ClosableMessage } from \"../../../../components/ClosableMessage/ClosableMessage\";\r\nimport { Hexagon } from \"../../../../components/Hexagon/Hexagon\";\r\n\r\nimport styles from \"./BestResult.module.scss\";\r\n\r\nexport const BestResult: React.FC<BestResultProps> = ({\r\n  bestResult,\r\n  selectedExercise,\r\n  setBestResult,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const user = getAuth().currentUser;\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const [weight, setWeight] = useState<string>(bestResult?.weight || \"0\");\r\n  const [reps, setReps] = useState<string>(bestResult?.reps || \"0\");\r\n  const [isSaving, setIsSaving] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    setWeight(bestResult?.weight || \"0\");\r\n    setReps(bestResult?.reps || \"0\");\r\n  }, [bestResult]);\r\n\r\n  const saveBestResult = async (updatedBestResult: {\r\n    weight: string;\r\n    reps: string;\r\n  }) => {\r\n    if (user && selectedExercise && !isSaving) {\r\n      setIsSaving(true);\r\n      const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n      try {\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          const exerciseToUpdate = exercisesData.exercises.find(\r\n            (exercise: Exercise) => exercise.id === selectedExercise.id\r\n          );\r\n\r\n          if (\r\n            exerciseToUpdate.bestResult.weight === updatedBestResult.weight &&\r\n            exerciseToUpdate.bestResult.reps === updatedBestResult.reps\r\n          ) {\r\n            ClosableMessage({\r\n              type: \"info\",\r\n              content: t(\"noChangesDetected\"),\r\n            });\r\n            setIsSaving(false);\r\n            return;\r\n          }\r\n\r\n          if (Number(updatedBestResult.reps) === 0) {\r\n            setReps(exerciseToUpdate.bestResult.reps);\r\n            ClosableMessage({\r\n              type: \"error\",\r\n              content: t(\"repsNot0\"),\r\n            });\r\n            setIsSaving(false);\r\n            return;\r\n          }\r\n\r\n          const updatedExercises = exercisesData.exercises.map(\r\n            (exercise: Exercise) => {\r\n              if (exercise.id === selectedExercise.id) {\r\n                return {\r\n                  ...exercise,\r\n                  bestResult: updatedBestResult,\r\n                };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          await updateDoc(exercisesDocRef, { exercises: updatedExercises });\r\n          setBestResult(updatedBestResult);\r\n          ClosableMessage({\r\n            type: \"success\",\r\n            content: t(\"recordUpdated\"),\r\n          });\r\n        } else {\r\n          ClosableMessage({\r\n            type: \"error\",\r\n            content: t(\"noExercisesFound\"),\r\n          });\r\n        }\r\n      } catch (error) {\r\n        ClosableMessage({\r\n          type: \"error\",\r\n          content: t(\"errorSavingBestResult\"),\r\n        });\r\n      } finally {\r\n        setIsSaving(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!isSaving) {\r\n      await saveBestResult({ weight, reps });\r\n      setEditMode(false);\r\n    }\r\n  };\r\n\r\n  const handleEditMode = () => setEditMode(true);\r\n\r\n  const genExtra = () => (\r\n    <img\r\n      src={process.env.PUBLIC_URL + \"/assets/Icons/AdditionalIcons/trophy.png\"}\r\n    />\r\n  );\r\n\r\n  const items = [\r\n    {\r\n      key: \"1\",\r\n      label: <div className={styles.title}>{t(\"bestExerciseResult\")}</div>,\r\n      children: (\r\n        <>\r\n          {editMode ? (\r\n            <>\r\n              <div className={styles.wrapper}>\r\n                <div className={styles.container}>\r\n                  <NumericInput value={weight} onChange={setWeight} />\r\n                  <span>{t(\"kg\")}</span>\r\n                </div>\r\n                <div className={styles.container}>\r\n                  <NumericInput\r\n                    value={reps}\r\n                    onChange={setReps}\r\n                    onBlur={handleSave}\r\n                  />\r\n                  <span>{t(\"bestResultReps\")}</span>\r\n                </div>\r\n              </div>\r\n              <SettingButton\r\n                icon={<CheckOutlined />}\r\n                onClick={handleSave}\r\n                className={styles.saveRecord}\r\n              >\r\n                <span>{t(\"saveRecord\")}</span>\r\n              </SettingButton>\r\n            </>\r\n          ) : (\r\n            <div className={styles.wrapper}>\r\n              <div>\r\n                <div className={styles.hexagonTitle}>{t(\"weight\")}</div>\r\n                <div className={styles.hexagonContainer}>\r\n                  <Hexagon text={weight} onClick={handleEditMode} />\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div className={styles.hexagonTitle}>{t(\"reps\")}</div>\r\n                <div className={styles.hexagonContainer}>\r\n                  <Hexagon text={reps} onClick={handleEditMode} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      ),\r\n      extra: genExtra(),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.collapse}>\r\n      <Collapse items={items} bordered={false} />\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"deleteWorkout\":\"DeleteWorkout_deleteWorkout__T7qoY\",\"confirm\":\"DeleteWorkout_confirm__yTni8\",\"deleteBtn\":\"DeleteWorkout_deleteBtn__u1SVc\"};","import React, { useState } from \"react\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  collection,\r\n  getFirestore,\r\n  getDoc,\r\n  updateDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { message } from \"antd\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { ResetButton } from \"../../../../components/ResetButton/ResetButton\";\r\nimport { DeleteWorkoutProps } from \"../../../../types/types\";\r\nimport { CustomModal } from \"../../../../components/CustomModal/CustomModal\";\r\nimport { scrollToTop } from \"../../../../utils/scrollToTop\";\r\n\r\nimport styles from \"./DeleteWorkout.module.scss\";\r\n\r\nexport const DeleteWorkout: React.FC<DeleteWorkoutProps> = ({\r\n  workoutDate,\r\n  selectedExercise,\r\n  setData,\r\n  setWorkoutDate,\r\n  setSelectedExercise,\r\n  setActiveCardId,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const user = getAuth().currentUser;\r\n  const [, contextHolder] = message.useMessage();\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n\r\n  const deleteWorkoutByDate = async () => {\r\n    if (!workoutDate || !selectedExercise || !user) return;\r\n\r\n    const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n    const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n\r\n    try {\r\n      const docSnapshot = await getDoc(setDocRef);\r\n      if (docSnapshot.exists()) {\r\n        const documentData = docSnapshot.data();\r\n        const workouts = documentData.workouts || [];\r\n        const filteredWorkouts = workouts.filter(\r\n          (workout: { date: string | number | Date }) =>\r\n            new Date(workout.date).toLocaleString() !== workoutDate\r\n        );\r\n\r\n        await updateDoc(setDocRef, { workouts: filteredWorkouts });\r\n\r\n        setData([]);\r\n        setWorkoutDate(null);\r\n        setSelectedExercise(null);\r\n        setActiveCardId(null);\r\n        scrollToTop();\r\n        setIsModalOpen(false);\r\n\r\n        message.success({\r\n          key: \"limit-success\",\r\n          content: t(\"workoutDeleted\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      message.error({\r\n        key: \"limit-error\",\r\n        content: t(\"errorDeletingWorkout\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    if (!workoutDate || !selectedExercise) {\r\n      message.error({\r\n        key: \"limit-error\",\r\n        content: t(\"noDataToDelete\"),\r\n      });\r\n      return;\r\n    }\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const deleteWorkout = (e: { stopPropagation: () => void }) => {\r\n    e.stopPropagation();\r\n    deleteWorkoutByDate();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <div className={styles.deleteWorkout}>\r\n        <ResetButton icon={<DeleteOutlined />} onClick={confirmDelete}>\r\n          {t(\"deleteWorkout\")}\r\n        </ResetButton>\r\n      </div>\r\n      <CustomModal\r\n        open={isModalOpen}\r\n        onCancel={(e) => {\r\n          setIsModalOpen(false);\r\n        }}\r\n        footer={false}\r\n      >\r\n        <p className={styles.confirm}>{t(\"confirmDeletingWorkout\")}</p>\r\n        <div className={styles.deleteBtn}>\r\n          <ResetButton\r\n            children={t(\"delete\")}\r\n            onClick={deleteWorkout}\r\n            icon={<DeleteOutlined />}\r\n          />\r\n        </div>\r\n      </CustomModal>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { ConfigProvider, Divider, message, Table } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  writeBatch,\r\n} from \"firebase/firestore\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport {\r\n  Approach,\r\n  Exercise,\r\n  ExerciseTablePropsType,\r\n  ExerciseTableType,\r\n} from \"../../../types/types\";\r\nimport { EmptyBox } from \"../../../components/EmptyBox/EmptyBox\";\r\nimport NumericInput from \"../../../components/NumericInput/NumericInput\";\r\nimport { scrollToBottom } from \"../../../utils/scrollToBottom\";\r\nimport { ClosableMessage } from \"../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./ExerciseTable.module.scss\";\r\nimport { TableFooter } from \"./TableFooter/TableFooter\";\r\nimport { BestResult } from \"./BestResult/BestResult\";\r\nimport { DeleteWorkout } from \"./DeleteWorkout/DeleteWorkout\";\r\n\r\nexport const ExerciseTable: React.FC<ExerciseTablePropsType> = ({\r\n  selectedExercise,\r\n  setSelectedExercise,\r\n  setActiveCardId,\r\n}) => {\r\n  const user = getAuth().currentUser;\r\n  const { t } = useTranslation();\r\n  const [data, setData] = useState<ExerciseTableType[]>([]);\r\n  const [bestResult, setBestResult] = useState<{\r\n    weight: string;\r\n    reps: string;\r\n  } | null>(null);\r\n  const [editWeight, setEditWeight] = useState<string | null>(null);\r\n  const [editReps, setEditReps] = useState<string | null>(null);\r\n  const [workoutDate, setWorkoutDate] = useState<string | null>(null);\r\n  const [currentWorkout, setCurrentWorkout] = useState(false);\r\n  const [addRowBtn, setAddRowBtn] = useState(false);\r\n  const [saveBtn, setSaveBtn] = useState(false);\r\n  const [deleteBtn, setDeleteBtn] = useState(true);\r\n  const [showHistory, setShowHistory] = useState(false);\r\n\r\n  const weightInputRef = useRef<HTMLInputElement | null>(null);\r\n  const repsInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (selectedExercise) {\r\n      loadExerciseData();\r\n    } else {\r\n      setData([]);\r\n      setBestResult(null);\r\n    }\r\n  }, [selectedExercise]);\r\n\r\n  useEffect(() => {\r\n    if (editReps && repsInputRef.current) {\r\n      repsInputRef.current.focus();\r\n    }\r\n    if (editWeight && weightInputRef.current) {\r\n      weightInputRef.current.focus();\r\n    }\r\n  }, [editReps, editWeight]);\r\n\r\n  const loadExerciseData = async () => {\r\n    if (user && selectedExercise) {\r\n      const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n      const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n      const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n\r\n      try {\r\n        const [docSnapshot, exercisesDoc] = await Promise.all([\r\n          getDoc(setDocRef),\r\n          getDoc(exercisesDocRef),\r\n        ]);\r\n        setShowHistory(false);\r\n        if (docSnapshot.exists()) {\r\n          const documentData = docSnapshot.data();\r\n          const workouts = documentData?.workouts || [];\r\n\r\n          if (workouts.length > 0) {\r\n            const latestWorkout = workouts[workouts.length - 1];\r\n            const workoutDate = new Date(latestWorkout.date).toLocaleString();\r\n\r\n            setWorkoutDate(workoutDate);\r\n            const approaches = latestWorkout.approaches || [];\r\n            const loadedData: ExerciseTableType[] = approaches.map(\r\n              (approach: Approach) => ({\r\n                key: approach.id,\r\n                set: approach.set,\r\n                weight: approach.weight,\r\n                reps: approach.reps,\r\n                icon: <CloseOutlined />,\r\n              })\r\n            );\r\n\r\n            setData(loadedData);\r\n            scrollToBottom();\r\n            setDeleteBtn(true);\r\n          } else {\r\n            setData([]);\r\n            setWorkoutDate(null);\r\n            setDeleteBtn(false);\r\n          }\r\n\r\n          if (exercisesDoc.exists()) {\r\n            const exercisesData = exercisesDoc.data();\r\n            const exercise = exercisesData.exercises.find(\r\n              (ex: { id: string }) => ex.id === selectedExercise.id\r\n            );\r\n            if (exercise) {\r\n              setBestResult(exercise.bestResult);\r\n            } else {\r\n              setBestResult(null);\r\n            }\r\n          }\r\n        } else {\r\n          setData([]);\r\n          setWorkoutDate(null);\r\n          setBestResult(null);\r\n          scrollToBottom();\r\n          setDeleteBtn(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading exercise data:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveExerciseData = async () => {\r\n    if (user && selectedExercise) {\r\n      const validData = data.filter(\r\n        (row) => Number(row.reps) > 0 && Number(row.weight) > 0\r\n      );\r\n\r\n      if (validData.length === 0) {\r\n        ClosableMessage({\r\n          type: \"error\",\r\n          content: t(\"noDataToSave\"),\r\n        });\r\n        return;\r\n      }\r\n      const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n      const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n\r\n      try {\r\n        const batch = writeBatch(getFirestore());\r\n        const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n        const setDoc = await getDoc(setDocRef);\r\n        const setData = setDoc.exists() ? setDoc.data() : { workouts: [] };\r\n\r\n        const newWorkout = {\r\n          id: uuidv4(),\r\n          date: new Date().toISOString(),\r\n          approaches: validData.map((row, index) => ({\r\n            id: uuidv4(),\r\n            set: index + 1,\r\n            reps: row.reps,\r\n            weight: row.weight,\r\n          })),\r\n        };\r\n\r\n        setData.workouts.push(newWorkout);\r\n        batch.set(setDocRef, setData);\r\n\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          const updatedExercises = exercisesData.exercises.map(\r\n            (exercise: Exercise) => {\r\n              if (exercise.id === selectedExercise.id) {\r\n                return {\r\n                  ...exercise,\r\n                };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          batch.update(exercisesDocRef, { exercises: updatedExercises });\r\n        }\r\n\r\n        await batch.commit();\r\n\r\n        setCurrentWorkout(false);\r\n        setAddRowBtn(false);\r\n        setSaveBtn(false);\r\n\r\n        setShowHistory(false);\r\n\r\n        ClosableMessage({\r\n          type: \"success\",\r\n          content: t(\"exerciseDataSaved\"),\r\n        });\r\n      } catch (error) {\r\n        ClosableMessage({\r\n          type: \"error\",\r\n          content: t(\"errorSavingExerciseData\"),\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateWeight = (key: string, value: string) => {\r\n    const newData = data.map((row) => {\r\n      if (row.key === key) {\r\n        return { ...row, weight: value };\r\n      }\r\n      return row;\r\n    });\r\n    setData(newData);\r\n  };\r\n\r\n  const updateReps = (key: string, value: string) => {\r\n    const newData = data.map((row) => {\r\n      if (row.key === key) {\r\n        return { ...row, reps: value };\r\n      }\r\n      return row;\r\n    });\r\n    setData(newData);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: `${t(\"set\")}`,\r\n      dataIndex: \"set\",\r\n      width: \"20%\",\r\n      render: (set: string) => <span>{set}.</span>,\r\n    },\r\n    {\r\n      title: `${t(\"weight\")}`,\r\n      dataIndex: \"weight\",\r\n      width: \"30%\",\r\n      render: (text: string, record: ExerciseTableType) =>\r\n        currentWorkout ? (\r\n          editWeight === record.key ? (\r\n            <NumericInput\r\n              ref={weightInputRef}\r\n              value={record.weight}\r\n              onChange={(value) => updateWeight(record.key, value)}\r\n              onBlur={() => setEditWeight(null)}\r\n            />\r\n          ) : (\r\n            <div\r\n              onClick={() => setEditWeight(record.key)}\r\n              className={styles.editableDiv}\r\n            >\r\n              {record.weight || t(\"clickToEdit\")}\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className={styles.editableDiv}>{record.weight}</div>\r\n        ),\r\n    },\r\n    {\r\n      title: `${t(\"reps\")}`,\r\n      dataIndex: \"reps\",\r\n      width: \"25%\",\r\n      render: (text: string, record: ExerciseTableType) =>\r\n        currentWorkout ? (\r\n          editReps === record.key ? (\r\n            <NumericInput\r\n              ref={repsInputRef}\r\n              value={record.reps}\r\n              onChange={(value) => updateReps(record.key, value)}\r\n              onBlur={() => setEditReps(null)}\r\n            />\r\n          ) : (\r\n            <div className={styles.repsAndDelete}>\r\n              <div\r\n                onClick={() => setEditReps(record.key)}\r\n                className={styles.editableDiv}\r\n              >\r\n                {record.reps || t(\"clickToEdit\")}\r\n              </div>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className={styles.editableDiv}>{record.reps}</div>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  const handleWorkoutDateChange = (date: string) => {\r\n    const workoutDate = new Date(date);\r\n    const formattedDate = workoutDate.toLocaleString();\r\n    if (!isNaN(workoutDate.getTime())) {\r\n      setWorkoutDate(formattedDate);\r\n      setCurrentWorkout(false);\r\n    } else {\r\n      console.error(\"Invalid date:\", date);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider style={{ backgroundColor: \"gray\" }} />\r\n      <div className={styles.tableTitle}>\r\n        <SubTitle\r\n          children={selectedExercise?.name || t(\"noExerciseSelected\")}\r\n          className={styles.subtitle}\r\n        />\r\n      </div>\r\n      <ConfigProvider\r\n        theme={{\r\n          components: {\r\n            Table: {\r\n              headerBg: \"#1A1A1A\",\r\n              headerColor: \"#ffffff\",\r\n              cellFontSize: 17,\r\n              colorBgContainer: \"#282828\",\r\n              colorText: \"#ffffff\",\r\n              borderColor: \"#535353\",\r\n              cellPaddingBlock: 11,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        {selectedExercise ? (\r\n          <>\r\n            <BestResult\r\n              bestResult={bestResult}\r\n              selectedExercise={selectedExercise}\r\n              setBestResult={setBestResult}\r\n            />\r\n            {currentWorkout ? (\r\n              <div className={styles.dateAndDelete}>\r\n                {t(\"workoutDate\")}: {new Date().toLocaleDateString()}\r\n              </div>\r\n            ) : (\r\n              <div className={styles.dateAndDelete}>\r\n                {t(\"workoutDate\")}: {workoutDate ? workoutDate : \". . .\"}\r\n              </div>\r\n            )}\r\n            <Table\r\n              rowKey={(record) => record.key}\r\n              columns={columns}\r\n              dataSource={data}\r\n              pagination={false}\r\n              className={styles.table}\r\n              locale={{ emptyText: <EmptyBox /> }}\r\n            />\r\n            <TableFooter\r\n              selectedExercise={selectedExercise}\r\n              data={data}\r\n              setData={setData}\r\n              setEditWeight={setEditWeight}\r\n              saveExerciseData={saveExerciseData}\r\n              onWorkoutDateChange={handleWorkoutDateChange}\r\n              setCurrentWorkout={setCurrentWorkout}\r\n              addRowBtn={addRowBtn}\r\n              setAddRowBtn={setAddRowBtn}\r\n              saveBtn={saveBtn}\r\n              setSaveBtn={setSaveBtn}\r\n              setDeleteBtn={setDeleteBtn}\r\n              showHistory={showHistory}\r\n              setShowHistory={setShowHistory}\r\n            />\r\n            {deleteBtn && (\r\n              <DeleteWorkout\r\n                workoutDate={workoutDate}\r\n                selectedExercise={selectedExercise}\r\n                setData={setData}\r\n                setWorkoutDate={setWorkoutDate}\r\n                setSelectedExercise={setSelectedExercise}\r\n                setActiveCardId={setActiveCardId}\r\n              />\r\n            )}\r\n          </>\r\n        ) : (\r\n          <Table\r\n            columns={columns}\r\n            className={styles.table}\r\n            locale={{ emptyText: <EmptyBox /> }}\r\n          />\r\n        )}\r\n      </ConfigProvider>\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"addExercise\":\"AddExercise_addExercise__7FNxa\",\"button\":\"AddExercise_button__mkO2c\"};","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { CustomButton } from \"../../../components/CustomButton/CustomButton\";\r\nimport { CustomInput } from \"../../../components/CustomInput/CustomInput\";\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport { IAddExercise } from \"../../../types/types\";\r\nimport { ClosableMessage } from \"../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./AddExercise.module.scss\";\r\n\r\nexport const AddExercise: React.FC<IAddExercise> = ({\r\n  onAddExercise,\r\n  category,\r\n}) => {\r\n  const user = getAuth().currentUser;\r\n  const { t } = useTranslation();\r\n  const [exerciseName, setExerciseName] = useState(\"\");\r\n\r\n  const handleAddExercise = async () => {\r\n    if (!exerciseName) {\r\n      ClosableMessage({ type: \"error\", content: t(\"typeExercise\") });\r\n      return;\r\n    }\r\n    try {\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercise = {\r\n          id: uuidv4(),\r\n          name: exerciseName,\r\n          category: category,\r\n          bestResult: {\r\n            weight: \"0\",\r\n            reps: \"0\",\r\n          },\r\n          isFavorite: false,\r\n        };\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n        const docSnapshot = await getDoc(exercisesDocRef);\r\n\r\n        if (docSnapshot.exists()) {\r\n          const existingExercises = docSnapshot.data().exercises || [];\r\n\r\n          const exerciseExists = existingExercises.some(\r\n            (existingExercise: { name: string }) =>\r\n              existingExercise.name.toLowerCase() === exerciseName.toLowerCase()\r\n          );\r\n\r\n          if (exerciseExists) {\r\n            ClosableMessage({ type: \"error\", content: t(\"nameAlreadyExists\") });\r\n            setExerciseName(\"\");\r\n            return;\r\n          }\r\n\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: [...existingExercises, exercise],\r\n          });\r\n        } else {\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: [exercise],\r\n          });\r\n        }\r\n\r\n        setExerciseName(\"\");\r\n        onAddExercise();\r\n        ClosableMessage({ type: \"success\", content: t(\"exerciseAdded\") });\r\n      }\r\n    } catch (error) {\r\n      ClosableMessage({ type: \"error\", content: t(\"errorAddingExercise\") });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SubTitle>{t(\"addAnExercise\")}</SubTitle>\r\n      <div className={styles.addExercise}>\r\n        <CustomInput\r\n          value={exerciseName}\r\n          onChange={(value: string) => setExerciseName(value)}\r\n          text={t(\"exerciseName\")}\r\n          placeholder={t(\"typeExercise\")}\r\n        />\r\n        <CustomButton\r\n          className={styles.button}\r\n          icon={<PlusOutlined />}\r\n          onClick={handleAddExercise}\r\n        >\r\n          {t(\"addExerciseBtn\")}\r\n        </CustomButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { DescriptionTitle } from \"../../components/DescriptionTitle/DescriptionTitle\";\r\nimport { PageWrapper } from \"../../components/PageWrapper/PageWrapper\";\r\nimport { Exercise, LocationState } from \"../../types/types\";\r\n\r\nimport { Exercises } from \"./Exercises/Exercises\";\r\nimport { ExerciseTable } from \"./ExerciseTable/ExerciseTable\";\r\nimport { AddExercise } from \"./AddExercise/AddExercise\";\r\n\r\nconst Workout: React.FC = () => {\r\n  const location = useLocation();\r\n  const state = location.state as LocationState;\r\n  const [data, setData] = useState<Exercise[]>([]);\r\n  const [updateTrigger, setUpdateTrigger] = useState(0);\r\n  const [selectedExercise, setSelectedExercise] = useState<Exercise | null>(\r\n    null\r\n  );\r\n  const [activeCardId, setActiveCardId] = useState<string | null>(null);\r\n  const exercisesRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n  }, []);\r\n\r\n  const handleUpdateExercises = () => {\r\n    setUpdateTrigger((prev) => prev + 1);\r\n\r\n    if (exercisesRef.current) {\r\n      exercisesRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  const handleSelectExercise = (exercise: Exercise) => {\r\n    const exerciseData = data.find((item) => item.id === exercise.id);\r\n\r\n    if (exerciseData) {\r\n      setSelectedExercise(exercise);\r\n    } else {\r\n      setSelectedExercise(null);\r\n      setData([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div style={{ minHeight: \"100vh\" }}>\r\n        <DescriptionTitle text={state.title} textAlign=\"center\" />\r\n        <AddExercise\r\n          category={state?.title}\r\n          onAddExercise={handleUpdateExercises}\r\n        />\r\n        <Exercises\r\n          category={state?.title}\r\n          updateTrigger={updateTrigger}\r\n          onSelectExercise={handleSelectExercise}\r\n          exercisesRef={exercisesRef}\r\n          activeCardId={activeCardId}\r\n          setActiveCardId={setActiveCardId}\r\n          setSelectedExercise={setSelectedExercise}\r\n          data={data}\r\n          setData={setData}\r\n        />\r\n        <ExerciseTable\r\n          selectedExercise={selectedExercise}\r\n          setSelectedExercise={setSelectedExercise}\r\n          setActiveCardId={setActiveCardId}\r\n        />\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default Workout;\r\n","export const scrollToTop = () =>\r\n  setTimeout(() => {\r\n    window.scrollTo({\r\n      left: 0,\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, 100);\r\n"],"names":["ClosableMessage","_ref","type","content","key","message","_jsxs","children","_jsx","CloseOutlined","onClick","closeMessage","destroy","className","styles","CustomInput","name","text","placeholder","isRequired","onChange","value","t","useTranslation","Form","Item","label","rules","required","Input","allowClear","e","target","autoComplete","CustomModal","open","onCancel","footer","useEffect","document","body","style","overflow","ConfigProvider","theme","components","Modal","contentBg","colorIcon","colorIconHover","marginTop","DescriptionTitle","textAlign","ref","controls","useAnimatedInView","motion","h2","descriptionTitle","initial","animate","variants","animation","Hexagon","src","process","alt","NumericInput","onBlur","replace","length","startsWith","substring","test","inputMode","pattern","forwardRef","container","maxWidth","margin","PageWrapper","ResetButton","icon","Button","SettingButton","SubTitle","p","threshold","arguments","undefined","triggerOnce","animationVariants","useAnimation","inView","useInView","start","hidden","opacity","visible","transition","duration","EmptyBox","Empty","image","PRESENTED_IMAGE_SIMPLE","description","color","CardOptions","item","category","setData","setCurrentEditingId","setNewName","editMode","setEditMode","isActive","setIsActive","useState","StarFilled","stopPropagation","async","exerciseId","currentStatus","user","getAuth","currentUser","userId","uid","exercisesDocRef","doc","getFirestore","exercisesDoc","getDoc","exists","exercisesData","data","favoriteExercisesCount","exercises","filter","exercise","isFavorite","updatedExercises","map","id","updateDoc","translatedCategory","filteredData","error","toggleFavorite","CheckOutlined","EditOutlined","handleEditClick","currentName","ModalDelete","setLoading","setIsModalOpen","isModalOpen","handleCancel","setConfirm","setSelectedExercise","setsCollectionRef","deleteDoc","localStorage","setItem","JSON","stringify","scrollToTop","handleDeleteCard","DeleteOutlined","DeleteIcon","index","confirm","_Fragment","Tooltip","title","EditInput","newName","currentEditingId","inputRef","useRef","current","focus","changeExerciseName","currentExercise","find","trim","some","bestResult","onKeyDown","event","handleBlur","ExerciseCard","onSelectExercise","activeCardId","setActiveCardId","exercisesRef","handleCardClick","Exercises","updateTrigger","loading","storedData","parse","getItem","categoryTranslated","fetchExercises","i18n","language","Loader","scrollToBottom","setTimeout","window","scrollTo","left","top","scrollHeight","behavior","TrainingHistory","showHistory","workouts","workoutDates","sortedData","date","workout","sort","a","b","Date","getTime","items","toString","dateString","toLocaleDateString","w","i","set","weight","reps","extra","Collapse","bordered","expandIcon","_ref2","RightOutlined","rotate","TableFooter","selectedExercise","setEditWeight","saveExerciseData","onWorkoutDateChange","setCurrentWorkout","addRowBtn","setAddRowBtn","saveBtn","setSaveBtn","setDeleteBtn","setShowHistory","setWorkouts","setWorkoutDates","currentWorkoutIndex","setCurrentWorkoutIndex","hideButtons","setHideButtons","collection","setDocRef","docSnapshot","_docSnapshot$data","workoutsData","Array","isArray","approaches","lastIndex","console","loadWorkouts","isLastWorkout","addRow","newData","nextSet","newRow","push","PlusOutlined","CustomButton","showPreviousWorkout","newIndex","LeftOutlined","showNextWorkout","startNewTraining","BestResult","setBestResult","setWeight","setReps","isSaving","setIsSaving","handleSave","exerciseToUpdate","updatedBestResult","Number","saveBestResult","handleEditMode","DeleteWorkout","workoutDate","setWorkoutDate","contextHolder","useMessage","confirmDelete","filteredWorkouts","toLocaleString","success","deleteWorkoutByDate","ExerciseTable","editWeight","editReps","setEditReps","currentWorkout","deleteBtn","weightInputRef","repsInputRef","loadExerciseData","Promise","all","documentData","latestWorkout","loadedData","approach","ex","columns","dataIndex","width","render","record","updateWeight","row","updateReps","Divider","backgroundColor","Table","headerBg","headerColor","cellFontSize","colorBgContainer","colorText","borderColor","cellPaddingBlock","rowKey","dataSource","pagination","locale","emptyText","validData","batch","writeBatch","setDoc","newWorkout","uuidv4","toISOString","update","commit","formattedDate","isNaN","AddExercise","onAddExercise","exerciseName","setExerciseName","existingExercises","existingExercise","toLowerCase","Workout","state","useLocation","setUpdateTrigger","scroll","minHeight","handleUpdateExercises","prev","scrollIntoView"],"sourceRoot":""}