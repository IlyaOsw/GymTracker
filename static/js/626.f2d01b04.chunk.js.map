{"version":3,"file":"static/js/626.f2d01b04.chunk.js","mappings":"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","sources":["webpack://gymtracker/./src/components/ClosableMessage/ClosableMessage.module.scss?797b","components/ClosableMessage/ClosableMessage.tsx","webpack://gymtracker/./src/components/CustomInput/CustomInput.module.scss?82c8","components/CustomInput/CustomInput.tsx","components/CustomModal/CustomModal.tsx","webpack://gymtracker/./src/components/DescriptionTitle/DescriptionTitle.module.scss?64ef","components/DescriptionTitle/DescriptionTitle.tsx","components/PageWrapper/PageWrapper.tsx","webpack://gymtracker/./src/components/ResetButton/ResetButton.module.scss?4be0","components/ResetButton/ResetButton.tsx","webpack://gymtracker/./src/components/SettingButton/SettingButton.module.scss?b1fb","components/SettingButton/SettingButton.tsx","webpack://gymtracker/./src/components/SubTitle/SubTitle.module.scss?d9b0","components/SubTitle/SubTitle.tsx","hooks/useAnimatedInView .tsx","components/EmptyBox/EmptyBox.tsx","webpack://gymtracker/./src/components/NumericInput/NumericInput.module.scss?4f22","components/NumericInput/NumericInput.tsx","utils/scrollToBottom.ts","webpack://gymtracker/./src/pages/Workout/ExerciseTable/ExerciseTable.module.scss?799a","webpack://gymtracker/./src/pages/Workout/ExerciseTable/TableFooter/TableFooter.module.scss?31d1","pages/Workout/ExerciseTable/TableFooter/TableFooter.tsx","webpack://gymtracker/./src/pages/Workout/ExerciseTable/BestResult/BestResult.module.scss?47bd","pages/Workout/ExerciseTable/BestResult/BestResult.tsx","webpack://gymtracker/./src/pages/Workout/ExerciseTable/DeleteWorkout/DeleteWorkout.module.scss?dc25","pages/Workout/ExerciseTable/DeleteWorkout/DeleteWorkout.tsx","pages/Workout/ExerciseTable/ExerciseTable.tsx","webpack://gymtracker/./src/pages/Workout/AddExercise/AddExercise.module.scss?140e","pages/Workout/AddExercise/AddExercise.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/Exercises.module.scss?28b0","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/CardOptions/CardOptions.module.scss?2f2b","pages/Workout/Exercises/ExerciseCard/CardOptions/CardOptions.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/DeleteIcon/DeleteIcon.module.scss?6012","pages/Workout/Exercises/ExerciseCard/DeleteIcon/ModalDelete/ModalDelete.tsx","pages/Workout/Exercises/ExerciseCard/DeleteIcon/DeleteIcon.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/EditInput/EditInput.module.scss?17ed","pages/Workout/Exercises/ExerciseCard/EditInput/EditInput.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/ExerciseCard.module.scss?e0ae","pages/Workout/Exercises/ExerciseCard/ExerciseCard.tsx","pages/Workout/Exercises/Exercises.tsx","pages/Workout/Workout.tsx","utils/scrollToTop.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"customMessage\":\"ClosableMessage_customMessage__I89Df\",\"closeIcon\":\"ClosableMessage_closeIcon__M7QGN\"};","import { message } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\n\r\nimport { ClosableMessagePropsType } from \"../../types/types\";\r\n\r\nimport styles from \"./ClosableMessage.module.scss\";\r\n\r\nexport const ClosableMessage = ({\r\n  type,\r\n  content,\r\n}: ClosableMessagePropsType) => {\r\n  const key = \"closable-message\";\r\n\r\n  const closeMessage = () => message.destroy(key);\r\n\r\n  message[type]({\r\n    key,\r\n    content: (\r\n      <div>\r\n        {content}\r\n        <CloseOutlined onClick={closeMessage} className={styles.closeIcon} />\r\n      </div>\r\n    ),\r\n    className: styles.customMessage,\r\n  });\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"CustomInput_inputWrapper__wz8SN\",\"inputLabel\":\"CustomInput_inputLabel__b-QWx\",\"inputField\":\"CustomInput_inputField__baNtE\"};","import { Form, Input } from \"antd\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CustomInputProps, FieldType } from \"../../types/types\";\r\n\r\nimport styles from \"./CustomInput.module.scss\";\r\n\r\nexport const CustomInput: React.FC<CustomInputProps> = ({\r\n  name,\r\n  text,\r\n  type,\r\n  placeholder,\r\n  isRequired = true,\r\n  className,\r\n  onChange,\r\n  value,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    if (onChange) {\r\n      onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.inputWrapper}>\r\n      <Form.Item<FieldType>\r\n        label={<span className={styles.inputLabel}>{t(text)}</span>}\r\n        name={name}\r\n        rules={[{ required: isRequired }]}\r\n      >\r\n        <Input\r\n          type={type}\r\n          placeholder={placeholder}\r\n          className={`${styles.inputField} ${className}`}\r\n          allowClear\r\n          onChange={handleChange}\r\n          value={value}\r\n          autoComplete=\"off\"\r\n        />\r\n      </Form.Item>\r\n    </div>\r\n  );\r\n};\r\n","import { ConfigProvider, Modal } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { CustomModalProps } from \"../../types/types\";\r\n\r\nexport const CustomModal: React.FC<CustomModalProps> = ({\r\n  open,\r\n  onCancel,\r\n  footer = null,\r\n  children,\r\n  className,\r\n}) => {\r\n  useEffect(() => {\r\n    if (open) {\r\n      document.body.style.overflow = \"hidden\";\r\n    } else {\r\n      document.body.style.overflow = \"auto\";\r\n    }\r\n\r\n    return () => {\r\n      document.body.style.overflow = \"auto\";\r\n    };\r\n  }, [open]);\r\n\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        components: {\r\n          Modal: {\r\n            contentBg: \"#141414\",\r\n            colorIcon: \"lightgray\",\r\n            colorIconHover: \"gray\",\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <Modal\r\n        open={open}\r\n        onCancel={onCancel}\r\n        footer={footer}\r\n        style={{ marginTop: \"40px\" }}\r\n        className={className}\r\n      >\r\n        {children}\r\n      </Modal>\r\n    </ConfigProvider>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionTitle\":\"DescriptionTitle_descriptionTitle__E-lRw\",\"start\":\"DescriptionTitle_start__FSu7h\",\"center\":\"DescriptionTitle_center__eJvMJ\",\"end\":\"DescriptionTitle_end__uV+MA\"};","import { motion } from \"framer-motion\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\nimport { IDescriptionTitleAndText } from \"../../types/types\";\r\n\r\nimport styles from \"./DescriptionTitle.module.scss\";\r\n\r\nexport const DescriptionTitle: React.FC<IDescriptionTitleAndText> = ({\r\n  text,\r\n  textAlign = \"start\",\r\n  className,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { ref, controls } = useAnimatedInView();\r\n\r\n  return (\r\n    <motion.h2\r\n      ref={ref}\r\n      className={`${styles.descriptionTitle} ${styles[textAlign]} ${className}`}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n    >\r\n      {t(text)}\r\n    </motion.h2>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { PageWrapperProps } from \"../../types/types\";\r\n\r\nconst container: React.CSSProperties = {\r\n  maxWidth: \"1200px\",\r\n  margin: \"0 auto\",\r\n};\r\n\r\nexport const PageWrapper: React.FC<PageWrapperProps> = ({ children }) => {\r\n  return <div style={container}>{children}</div>;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"reset\":\"ResetButton_reset__efwrw\"};","import React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nimport { ResetBtnType } from \"../../types/types\";\r\n\r\nimport styles from \"./ResetButton.module.scss\";\r\n\r\nexport const ResetButton: React.FC<ResetBtnType> = ({\r\n  onClick,\r\n  children,\r\n  icon,\r\n}) => {\r\n  return (\r\n    <Button className={styles.reset} onClick={onClick} icon={icon}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"SettingButton_btn__TNlVz\"};","import { Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nimport styles from \"./SettingButton.module.scss\";\r\n\r\nexport type SettingButtonPropsType = {\r\n  onClick?: (e: any) => void;\r\n  icon?: React.ReactNode;\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n};\r\n\r\nexport const SettingButton: React.FC<SettingButtonPropsType> = ({\r\n  onClick,\r\n  icon,\r\n  children,\r\n  className,\r\n}) => {\r\n  return (\r\n    <Button\r\n      onClick={onClick}\r\n      icon={icon}\r\n      className={`${styles.btn} ${className}`}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"subTitle\":\"SubTitle_subTitle__6A8PN\"};","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\nimport { SubTitleType } from \"../../types/types\";\r\n\r\nimport styles from \"./SubTitle.module.scss\";\r\n\r\nexport const SubTitle: React.FC<SubTitleType> = ({ children, className }) => {\r\n  const { ref, controls } = useAnimatedInView();\r\n\r\n  return (\r\n    <motion.p\r\n      ref={ref}\r\n      className={`${styles.subTitle} ${className}`}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n    >\r\n      {children}\r\n    </motion.p>\r\n  );\r\n};\r\n","import { useAnimation, Variants } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useAnimatedInView = (\r\n  threshold: number = 0.1,\r\n  triggerOnce: boolean = false,\r\n  animationVariants?: Variants\r\n) => {\r\n  const controls = useAnimation();\r\n  const [ref, inView] = useInView({ threshold, triggerOnce });\r\n\r\n  useEffect(() => {\r\n    if (inView) {\r\n      controls.start(\"visible\");\r\n    } else {\r\n      controls.start(\"hidden\");\r\n    }\r\n  }, [controls, inView]);\r\n\r\n  return { ref, controls, animationVariants };\r\n};\r\n\r\nexport const animation = {\r\n  hidden: { opacity: 0 },\r\n  visible: { opacity: 1, transition: { duration: 1 } },\r\n};\r\n","import { Empty } from \"antd\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const EmptyBox: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Empty\r\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n      description={<span style={{ color: \"#ffffff\" }}>{t(\"noData\")}</span>}\r\n    />\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"NumericInput_input__1SATw\"};","import React, { forwardRef, ChangeEvent } from \"react\";\r\n\r\nimport { NumericInputProps } from \"../../types/types\";\r\n\r\nimport styles from \"./NumericInput.module.scss\";\r\n\r\nconst NumericInput: React.ForwardRefRenderFunction<\r\n  HTMLInputElement,\r\n  NumericInputProps\r\n> = ({ value, onChange, onBlur }, ref) => {\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let value = e.target.value;\r\n    value = value.replace(\",\", \".\");\r\n\r\n    if (value.length > 1 && value.startsWith(\"0\") && !value.startsWith(\"0.\")) {\r\n      value = value.substring(1);\r\n    }\r\n\r\n    if (/^\\d*\\.?\\d*$/.test(value)) {\r\n      onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      ref={ref}\r\n      value={value}\r\n      onChange={handleChange}\r\n      onBlur={onBlur}\r\n      className={styles.input}\r\n      type=\"text\"\r\n      inputMode=\"decimal\"\r\n      pattern=\"[0-9]*[.,]?[0-9]*\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default forwardRef(NumericInput);\r\n","export const scrollToBottom = () =>\r\n  setTimeout(() => {\r\n    window.scrollTo({\r\n      left: 0,\r\n      top: document.body.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, 100);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableTitle\":\"ExerciseTable_tableTitle__nWHV1\",\"subtitle\":\"ExerciseTable_subtitle__dWB0y\",\"dateAndDelete\":\"ExerciseTable_dateAndDelete__Rghoq\",\"table\":\"ExerciseTable_table__gqYvK\",\"editableDiv\":\"ExerciseTable_editableDiv__lnIPx\",\"repsAndDelete\":\"ExerciseTable_repsAndDelete__sJi7S\"};","// extracted by mini-css-extract-plugin\nexport default {\"tableFooter\":\"TableFooter_tableFooter__Vdj4o\",\"saveBtn\":\"TableFooter_saveBtn__CLumP\"};","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  RightOutlined,\r\n  CloseOutlined,\r\n  LeftOutlined,\r\n  PlusOutlined,\r\n  CheckOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { collection, doc, getDoc, getFirestore } from \"firebase/firestore\";\r\n\r\nimport { CustomButton } from \"../../../../components/CustomButton/CustomButton\";\r\nimport {\r\n  ExerciseTableType,\r\n  TableFooterPropsType,\r\n} from \"../../../../types/types\";\r\nimport { SettingButton } from \"../../../../components/SettingButton/SettingButton\";\r\n\r\nimport styles from \"./TableFooter.module.scss\";\r\n\r\nexport const TableFooter: React.FC<TableFooterPropsType> = ({\r\n  selectedExercise,\r\n  data,\r\n  setData,\r\n  setEditWeight,\r\n  saveExerciseData,\r\n  onWorkoutDateChange,\r\n  setCurrentWorkout,\r\n  addRowBtn,\r\n  setAddRowBtn,\r\n  saveBtn,\r\n  setSaveBtn,\r\n  setDeleteBtn,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [workouts, setWorkouts] = useState<ExerciseTableType[][]>([]);\r\n  const [workoutDates, setWorkoutDates] = useState<string[]>([]);\r\n  const [currentWorkoutIndex, setCurrentWorkoutIndex] = useState<number>(-1);\r\n  const [hideButtons, setHideButtons] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadWorkouts = async () => {\r\n      setHideButtons(true);\r\n      setCurrentWorkoutIndex(-1);\r\n      setAddRowBtn(false);\r\n      setSaveBtn(false);\r\n      setDeleteBtn(false);\r\n      setCurrentWorkout(false);\r\n      setData([]);\r\n\r\n      if (selectedExercise) {\r\n        const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n        const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n        try {\r\n          const docSnapshot = await getDoc(setDocRef);\r\n          if (docSnapshot.exists()) {\r\n            const workouts = docSnapshot.data()?.workouts || [];\r\n\r\n            if (Array.isArray(workouts) && workouts.length > 0) {\r\n              setWorkouts(workouts.map((workout) => workout.approaches || []));\r\n              setWorkoutDates(workouts.map((workout) => workout.date));\r\n              const lastIndex = workouts.length - 1;\r\n              setCurrentWorkoutIndex(lastIndex);\r\n              setHideButtons(false);\r\n              onWorkoutDateChange(workouts[lastIndex].date);\r\n            } else {\r\n              setData([]);\r\n              setWorkoutDates([]);\r\n              setCurrentWorkoutIndex(-1);\r\n              setHideButtons(true);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error loading workouts:\", error);\r\n        }\r\n      }\r\n    };\r\n\r\n    loadWorkouts();\r\n  }, [selectedExercise]);\r\n\r\n  const addRow = () => {\r\n    if (!selectedExercise) return;\r\n    const newData = [...data];\r\n    const nextSet =\r\n      newData.length > 0 ? newData[newData.length - 1].set + 1 : 1;\r\n\r\n    const newRow: ExerciseTableType = {\r\n      key: nextSet.toString(),\r\n      weight: \"\",\r\n      set: nextSet,\r\n      reps: \"\",\r\n      icon: <CloseOutlined />,\r\n    };\r\n\r\n    newData.push(newRow);\r\n    setData(newData);\r\n    setEditWeight(newRow.key);\r\n  };\r\n\r\n  const startNewTraining = () => {\r\n    setData([]);\r\n    setAddRowBtn(true);\r\n    setSaveBtn(true);\r\n    setHideButtons(true);\r\n    setCurrentWorkout(true);\r\n    setDeleteBtn(false);\r\n  };\r\n\r\n  const showPreviousWorkout = () => {\r\n    if (currentWorkoutIndex > 0) {\r\n      const newIndex = currentWorkoutIndex - 1;\r\n      setCurrentWorkoutIndex(newIndex);\r\n      setData(workouts[newIndex] || []);\r\n      onWorkoutDateChange(workoutDates[newIndex]);\r\n    }\r\n  };\r\n\r\n  const showNextWorkout = () => {\r\n    if (currentWorkoutIndex < workouts.length - 1) {\r\n      const newIndex = currentWorkoutIndex + 1;\r\n      setCurrentWorkoutIndex(newIndex);\r\n      setData(workouts[newIndex] || []);\r\n      onWorkoutDateChange(workoutDates[newIndex]);\r\n    }\r\n  };\r\n\r\n  const isLastWorkout = currentWorkoutIndex === workouts.length - 1;\r\n\r\n  return (\r\n    <>\r\n      {addRowBtn && (\r\n        <SettingButton onClick={addRow} icon={<PlusOutlined />}>\r\n          {t(\"addRow\")}\r\n        </SettingButton>\r\n      )}\r\n      {saveBtn && (\r\n        <div className={styles.saveBtn}>\r\n          <CustomButton onClick={saveExerciseData} icon={<CheckOutlined />}>\r\n            {t(\"saveTraining\")}\r\n          </CustomButton>\r\n        </div>\r\n      )}\r\n      <div className={styles.tableFooter}>\r\n        {!hideButtons && currentWorkoutIndex > 0 ? (\r\n          <CustomButton onClick={showPreviousWorkout} icon={<LeftOutlined />}>\r\n            {t(\"previous\")}\r\n          </CustomButton>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n\r\n        {!hideButtons && !isLastWorkout && (\r\n          <CustomButton onClick={showNextWorkout} icon={<RightOutlined />}>\r\n            {t(\"next\")}\r\n          </CustomButton>\r\n        )}\r\n\r\n        {(isLastWorkout || hideButtons) && !saveBtn && (\r\n          <CustomButton onClick={startNewTraining}>\r\n            {t(\"newEntry\")}\r\n            <RightOutlined />\r\n          </CustomButton>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"collapse\":\"BestResult_collapse__pQyb-\",\"title\":\"BestResult_title__jsqEH\",\"wrapper\":\"BestResult_wrapper__1-LYV\",\"editBtn\":\"BestResult_editBtn__8ELAU\",\"saveRecord\":\"BestResult_saveRecord__oirpc\",\"updateRecord\":\"BestResult_updateRecord__tUmlI\"};","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CheckOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport { Collapse } from \"antd\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { SettingButton } from \"../../../../components/SettingButton/SettingButton\";\r\nimport NumericInput from \"../../../../components/NumericInput/NumericInput\";\r\nimport { BestResultProps, Exercise } from \"../../../../types/types\";\r\nimport { ClosableMessage } from \"../../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./BestResult.module.scss\";\r\n\r\nexport const BestResult: React.FC<BestResultProps> = ({\r\n  bestResult,\r\n  selectedExercise,\r\n  setBestResult,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const user = getAuth().currentUser;\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const [weight, setWeight] = useState<string>(bestResult?.weight || \"0\");\r\n  const [reps, setReps] = useState<string>(bestResult?.reps || \"0\");\r\n  const [isSaving, setIsSaving] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    setWeight(bestResult?.weight || \"0\");\r\n    setReps(bestResult?.reps || \"0\");\r\n  }, [bestResult]);\r\n\r\n  const saveBestResult = async (updatedBestResult: {\r\n    weight: string;\r\n    reps: string;\r\n  }) => {\r\n    if (user && selectedExercise && !isSaving) {\r\n      setIsSaving(true);\r\n      const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n      try {\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          const exerciseToUpdate = exercisesData.exercises.find(\r\n            (exercise: Exercise) => exercise.id === selectedExercise.id\r\n          );\r\n\r\n          if (\r\n            exerciseToUpdate.bestResult.weight === updatedBestResult.weight &&\r\n            exerciseToUpdate.bestResult.reps === updatedBestResult.reps\r\n          ) {\r\n            ClosableMessage({\r\n              type: \"info\",\r\n              content: t(\"noChangesDetected\"),\r\n            });\r\n            setIsSaving(false);\r\n            return;\r\n          }\r\n\r\n          if (Number(updatedBestResult.reps) === 0) {\r\n            setReps(exerciseToUpdate.bestResult.reps);\r\n            ClosableMessage({\r\n              type: \"error\",\r\n              content: t(\"repsNot0\"),\r\n            });\r\n            setIsSaving(false);\r\n            return;\r\n          }\r\n\r\n          const updatedExercises = exercisesData.exercises.map(\r\n            (exercise: Exercise) => {\r\n              if (exercise.id === selectedExercise.id) {\r\n                return {\r\n                  ...exercise,\r\n                  bestResult: updatedBestResult,\r\n                };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          await updateDoc(exercisesDocRef, { exercises: updatedExercises });\r\n          setBestResult(updatedBestResult);\r\n          ClosableMessage({\r\n            type: \"success\",\r\n            content: t(\"recordUpdated\"),\r\n          });\r\n        } else {\r\n          ClosableMessage({\r\n            type: \"error\",\r\n            content: t(\"noExercisesFound\"),\r\n          });\r\n        }\r\n      } catch (error) {\r\n        ClosableMessage({\r\n          type: \"error\",\r\n          content: t(\"errorSavingBestResult\"),\r\n        });\r\n      } finally {\r\n        setIsSaving(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!isSaving) {\r\n      await saveBestResult({ weight, reps });\r\n      setEditMode(false);\r\n    }\r\n  };\r\n\r\n  const genExtra = () => (\r\n    <img\r\n      src={process.env.PUBLIC_URL + \"/assets/Icons/AdditionalIcons/trophy.png\"}\r\n    />\r\n  );\r\n\r\n  const items = [\r\n    {\r\n      key: \"1\",\r\n      label: <div className={styles.title}>{t(\"bestExerciseResult\")}</div>,\r\n      children: (\r\n        <>\r\n          {editMode ? (\r\n            <>\r\n              <div className={styles.wrapper}>\r\n                <div>\r\n                  <NumericInput value={weight} onChange={setWeight} />\r\n                  <span>{t(\"kg\")}</span>\r\n                </div>\r\n                <div>\r\n                  <NumericInput\r\n                    value={reps}\r\n                    onChange={setReps}\r\n                    onBlur={handleSave}\r\n                  />\r\n                  <span>{t(\"bestResultReps\")}</span>\r\n                </div>\r\n              </div>\r\n              <div className={styles.editBtn}>\r\n                <SettingButton\r\n                  icon={<CheckOutlined />}\r\n                  onClick={handleSave}\r\n                  className={styles.saveRecord}\r\n                >\r\n                  <span>{t(\"saveRecord\")}</span>\r\n                </SettingButton>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className={styles.wrapper}>\r\n                <div>\r\n                  {weight} {t(\"kg\")}\r\n                </div>\r\n                <div>\r\n                  {reps} {t(\"bestResultReps\")}\r\n                </div>\r\n              </div>\r\n              <div className={styles.editBtn}>\r\n                <SettingButton\r\n                  icon={<EditOutlined />}\r\n                  onClick={() => setEditMode(true)}\r\n                  className={styles.updateRecord}\r\n                >\r\n                  <span>{t(\"updateRecord\")}</span>\r\n                </SettingButton>\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      ),\r\n      extra: genExtra(),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.collapse}>\r\n      <Collapse size=\"large\" items={items} bordered={false} />\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"deleteWorkout\":\"DeleteWorkout_deleteWorkout__T7qoY\",\"confirm\":\"DeleteWorkout_confirm__yTni8\",\"deleteBtn\":\"DeleteWorkout_deleteBtn__u1SVc\"};","import React, { useState } from \"react\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  collection,\r\n  getFirestore,\r\n  getDoc,\r\n  updateDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { message } from \"antd\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { ResetButton } from \"../../../../components/ResetButton/ResetButton\";\r\nimport { DeleteWorkoutProps } from \"../../../../types/types\";\r\nimport { CustomModal } from \"../../../../components/CustomModal/CustomModal\";\r\nimport { scrollToTop } from \"../../../../utils/scrollToTop\";\r\n\r\nimport styles from \"./DeleteWorkout.module.scss\";\r\n\r\nexport const DeleteWorkout: React.FC<DeleteWorkoutProps> = ({\r\n  workoutDate,\r\n  selectedExercise,\r\n  setData,\r\n  setWorkoutDate,\r\n  setSelectedExercise,\r\n  setActiveCardId,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const user = getAuth().currentUser;\r\n  const [, contextHolder] = message.useMessage();\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n\r\n  const deleteWorkoutByDate = async () => {\r\n    if (!workoutDate || !selectedExercise || !user) return;\r\n\r\n    const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n    const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n\r\n    try {\r\n      const docSnapshot = await getDoc(setDocRef);\r\n      if (docSnapshot.exists()) {\r\n        const documentData = docSnapshot.data();\r\n        const workouts = documentData.workouts || [];\r\n        const filteredWorkouts = workouts.filter(\r\n          (workout: { date: string | number | Date }) =>\r\n            new Date(workout.date).toLocaleString() !== workoutDate\r\n        );\r\n\r\n        await updateDoc(setDocRef, { workouts: filteredWorkouts });\r\n\r\n        setData([]);\r\n        setWorkoutDate(null);\r\n        setSelectedExercise(null);\r\n        setActiveCardId(null);\r\n        scrollToTop();\r\n        setIsModalOpen(false);\r\n\r\n        message.success({\r\n          key: \"limit-success\",\r\n          content: t(\"workoutDeleted\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      message.error({\r\n        key: \"limit-error\",\r\n        content: t(\"errorDeletingWorkout\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    if (!workoutDate || !selectedExercise) {\r\n      message.error({\r\n        key: \"limit-error\",\r\n        content: t(\"noDataToDelete\"),\r\n      });\r\n      return;\r\n    }\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const deleteWorkout = (e: { stopPropagation: () => void }) => {\r\n    e.stopPropagation();\r\n    deleteWorkoutByDate();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <div className={styles.deleteWorkout}>\r\n        <ResetButton icon={<DeleteOutlined />} onClick={confirmDelete}>\r\n          {t(\"deleteWorkout\")}\r\n        </ResetButton>\r\n      </div>\r\n      <CustomModal\r\n        open={isModalOpen}\r\n        onCancel={(e) => {\r\n          setIsModalOpen(false);\r\n        }}\r\n        footer={false}\r\n      >\r\n        <p className={styles.confirm}>{t(\"confirmDeletingWorkout\")}</p>\r\n        <div className={styles.deleteBtn}>\r\n          <ResetButton\r\n            children={t(\"delete\")}\r\n            onClick={deleteWorkout}\r\n            icon={<DeleteOutlined />}\r\n          />\r\n        </div>\r\n      </CustomModal>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { ConfigProvider, Divider, message, Table } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  writeBatch,\r\n} from \"firebase/firestore\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport {\r\n  Approach,\r\n  Exercise,\r\n  ExerciseTablePropsType,\r\n  ExerciseTableType,\r\n} from \"../../../types/types\";\r\nimport { EmptyBox } from \"../../../components/EmptyBox/EmptyBox\";\r\nimport NumericInput from \"../../../components/NumericInput/NumericInput\";\r\nimport { scrollToBottom } from \"../../../utils/scrollToBottom\";\r\nimport { ClosableMessage } from \"../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./ExerciseTable.module.scss\";\r\nimport { TableFooter } from \"./TableFooter/TableFooter\";\r\nimport { BestResult } from \"./BestResult/BestResult\";\r\nimport { DeleteWorkout } from \"./DeleteWorkout/DeleteWorkout\";\r\n\r\nexport const ExerciseTable: React.FC<ExerciseTablePropsType> = ({\r\n  selectedExercise,\r\n  setSelectedExercise,\r\n  setActiveCardId,\r\n}) => {\r\n  const user = getAuth().currentUser;\r\n  const { t } = useTranslation();\r\n  const [data, setData] = useState<ExerciseTableType[]>([]);\r\n  const [bestResult, setBestResult] = useState<{\r\n    weight: string;\r\n    reps: string;\r\n  } | null>(null);\r\n  const [editWeight, setEditWeight] = useState<string | null>(null);\r\n  const [editReps, setEditReps] = useState<string | null>(null);\r\n  const [workoutDate, setWorkoutDate] = useState<string | null>(null);\r\n  const [currentWorkout, setCurrentWorkout] = useState(false);\r\n  const [addRowBtn, setAddRowBtn] = useState(false);\r\n  const [saveBtn, setSaveBtn] = useState(false);\r\n  const [deleteBtn, setDeleteBtn] = useState(true);\r\n\r\n  const weightInputRef = useRef<HTMLInputElement | null>(null);\r\n  const repsInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (selectedExercise) {\r\n      loadExerciseData();\r\n    } else {\r\n      setData([]);\r\n      setBestResult(null);\r\n    }\r\n  }, [selectedExercise]);\r\n\r\n  useEffect(() => {\r\n    if (editReps && repsInputRef.current) {\r\n      repsInputRef.current.focus();\r\n    }\r\n    if (editWeight && weightInputRef.current) {\r\n      weightInputRef.current.focus();\r\n    }\r\n  }, [editReps, editWeight]);\r\n\r\n  const loadExerciseData = async () => {\r\n    if (user && selectedExercise) {\r\n      const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n      const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n      const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n\r\n      try {\r\n        const [docSnapshot, exercisesDoc] = await Promise.all([\r\n          getDoc(setDocRef),\r\n          getDoc(exercisesDocRef),\r\n        ]);\r\n\r\n        if (docSnapshot.exists()) {\r\n          const documentData = docSnapshot.data();\r\n          const workouts = documentData?.workouts || [];\r\n\r\n          if (workouts.length > 0) {\r\n            const latestWorkout = workouts[workouts.length - 1];\r\n            const workoutDate = new Date(latestWorkout.date).toLocaleString();\r\n\r\n            setWorkoutDate(workoutDate);\r\n            const approaches = latestWorkout.approaches || [];\r\n            const loadedData: ExerciseTableType[] = approaches.map(\r\n              (approach: Approach) => ({\r\n                key: approach.id,\r\n                set: approach.set,\r\n                weight: approach.weight,\r\n                reps: approach.reps,\r\n                icon: <CloseOutlined />,\r\n              })\r\n            );\r\n\r\n            setData(loadedData);\r\n            scrollToBottom();\r\n            setDeleteBtn(true);\r\n          } else {\r\n            setData([]);\r\n            setWorkoutDate(null);\r\n            setDeleteBtn(false);\r\n          }\r\n\r\n          if (exercisesDoc.exists()) {\r\n            const exercisesData = exercisesDoc.data();\r\n            const exercise = exercisesData.exercises.find(\r\n              (ex: { id: string }) => ex.id === selectedExercise.id\r\n            );\r\n            if (exercise) {\r\n              setBestResult(exercise.bestResult);\r\n            } else {\r\n              setBestResult(null);\r\n            }\r\n          }\r\n        } else {\r\n          setData([]);\r\n          setWorkoutDate(null);\r\n          setBestResult(null);\r\n          scrollToBottom();\r\n          setDeleteBtn(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading exercise data:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveExerciseData = async () => {\r\n    if (user && selectedExercise) {\r\n      const validData = data.filter(\r\n        (row) => Number(row.reps) > 0 && Number(row.weight) > 0\r\n      );\r\n\r\n      if (validData.length === 0) {\r\n        ClosableMessage({\r\n          type: \"error\",\r\n          content: t(\"noDataToSave\"),\r\n        });\r\n        return;\r\n      }\r\n      const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n      const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n\r\n      try {\r\n        const batch = writeBatch(getFirestore());\r\n        const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n        const setDoc = await getDoc(setDocRef);\r\n        const setData = setDoc.exists() ? setDoc.data() : { workouts: [] };\r\n\r\n        const newWorkout = {\r\n          id: uuidv4(),\r\n          date: new Date().toISOString(),\r\n          approaches: validData.map((row, index) => ({\r\n            id: uuidv4(),\r\n            set: index + 1,\r\n            reps: row.reps,\r\n            weight: row.weight,\r\n          })),\r\n        };\r\n\r\n        setData.workouts.push(newWorkout);\r\n        batch.set(setDocRef, setData);\r\n\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          const updatedExercises = exercisesData.exercises.map(\r\n            (exercise: Exercise) => {\r\n              if (exercise.id === selectedExercise.id) {\r\n                return {\r\n                  ...exercise,\r\n                };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          batch.update(exercisesDocRef, { exercises: updatedExercises });\r\n        }\r\n\r\n        await batch.commit();\r\n\r\n        setCurrentWorkout(false);\r\n        setAddRowBtn(false);\r\n        setSaveBtn(false);\r\n\r\n        ClosableMessage({\r\n          type: \"success\",\r\n          content: t(\"exerciseDataSaved\"),\r\n        });\r\n      } catch (error) {\r\n        ClosableMessage({\r\n          type: \"error\",\r\n          content: t(\"errorSavingExerciseData\"),\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateWeight = (key: string, value: string) => {\r\n    const newData = data.map((row) => {\r\n      if (row.key === key) {\r\n        return { ...row, weight: value };\r\n      }\r\n      return row;\r\n    });\r\n    setData(newData);\r\n  };\r\n\r\n  const updateReps = (key: string, value: string) => {\r\n    const newData = data.map((row) => {\r\n      if (row.key === key) {\r\n        return { ...row, reps: value };\r\n      }\r\n      return row;\r\n    });\r\n    setData(newData);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: `${t(\"set\")}`,\r\n      dataIndex: \"set\",\r\n      width: \"20%\",\r\n      render: (set: string) => <span>{set}.</span>,\r\n    },\r\n    {\r\n      title: `${t(\"weight\")}`,\r\n      dataIndex: \"weight\",\r\n      width: \"30%\",\r\n      render: (text: string, record: ExerciseTableType) =>\r\n        currentWorkout ? (\r\n          editWeight === record.key ? (\r\n            <NumericInput\r\n              ref={weightInputRef}\r\n              value={record.weight}\r\n              onChange={(value) => updateWeight(record.key, value)}\r\n              onBlur={() => setEditWeight(null)}\r\n            />\r\n          ) : (\r\n            <div\r\n              onClick={() => setEditWeight(record.key)}\r\n              className={styles.editableDiv}\r\n            >\r\n              {record.weight || t(\"clickToEdit\")}\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className={styles.editableDiv}>{record.weight}</div>\r\n        ),\r\n    },\r\n    {\r\n      title: `${t(\"reps\")}`,\r\n      dataIndex: \"reps\",\r\n      width: \"25%\",\r\n      render: (text: string, record: ExerciseTableType) =>\r\n        currentWorkout ? (\r\n          editReps === record.key ? (\r\n            <NumericInput\r\n              ref={repsInputRef}\r\n              value={record.reps}\r\n              onChange={(value) => updateReps(record.key, value)}\r\n              onBlur={() => setEditReps(null)}\r\n            />\r\n          ) : (\r\n            <div className={styles.repsAndDelete}>\r\n              <div\r\n                onClick={() => setEditReps(record.key)}\r\n                className={styles.editableDiv}\r\n              >\r\n                {record.reps || t(\"clickToEdit\")}\r\n              </div>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className={styles.editableDiv}>{record.reps}</div>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  const handleWorkoutDateChange = (date: string) => {\r\n    const workoutDate = new Date(date);\r\n    const formattedDate = workoutDate.toLocaleString();\r\n    if (!isNaN(workoutDate.getTime())) {\r\n      setWorkoutDate(formattedDate);\r\n      setCurrentWorkout(false);\r\n    } else {\r\n      console.error(\"Invalid date:\", date);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider style={{ backgroundColor: \"gray\" }} />\r\n      <div className={styles.tableTitle}>\r\n        <SubTitle\r\n          children={selectedExercise?.name || t(\"noExerciseSelected\")}\r\n          className={styles.subtitle}\r\n        />\r\n      </div>\r\n      <ConfigProvider\r\n        theme={{\r\n          components: {\r\n            Table: {\r\n              headerBg: \"#1A1A1A\",\r\n              headerColor: \"#ffffff\",\r\n              cellFontSize: 18,\r\n              colorBgContainer: \"#282828\",\r\n              colorText: \"#ffffff\",\r\n              borderColor: \"#535353\",\r\n              cellPaddingBlock: 12,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        {selectedExercise ? (\r\n          <>\r\n            <BestResult\r\n              bestResult={bestResult}\r\n              selectedExercise={selectedExercise}\r\n              setBestResult={setBestResult}\r\n            />\r\n            {currentWorkout ? (\r\n              <div className={styles.dateAndDelete}>\r\n                {t(\"workoutDate\")}: {new Date().toLocaleDateString()}\r\n              </div>\r\n            ) : (\r\n              <div className={styles.dateAndDelete}>\r\n                {t(\"workoutDate\")}: {workoutDate ? workoutDate : \". . .\"}\r\n              </div>\r\n            )}\r\n            <Table\r\n              rowKey={(record) => record.key}\r\n              columns={columns}\r\n              dataSource={data}\r\n              pagination={false}\r\n              className={styles.table}\r\n              locale={{ emptyText: <EmptyBox /> }}\r\n            />\r\n            <TableFooter\r\n              selectedExercise={selectedExercise}\r\n              data={data}\r\n              setData={setData}\r\n              setEditWeight={setEditWeight}\r\n              saveExerciseData={saveExerciseData}\r\n              onWorkoutDateChange={handleWorkoutDateChange}\r\n              setCurrentWorkout={setCurrentWorkout}\r\n              addRowBtn={addRowBtn}\r\n              setAddRowBtn={setAddRowBtn}\r\n              saveBtn={saveBtn}\r\n              setSaveBtn={setSaveBtn}\r\n              setDeleteBtn={setDeleteBtn}\r\n            />\r\n            {deleteBtn && (\r\n              <DeleteWorkout\r\n                workoutDate={workoutDate}\r\n                selectedExercise={selectedExercise}\r\n                setData={setData}\r\n                setWorkoutDate={setWorkoutDate}\r\n                setSelectedExercise={setSelectedExercise}\r\n                setActiveCardId={setActiveCardId}\r\n              />\r\n            )}\r\n          </>\r\n        ) : (\r\n          <Table\r\n            columns={columns}\r\n            className={styles.table}\r\n            locale={{ emptyText: <EmptyBox /> }}\r\n          />\r\n        )}\r\n      </ConfigProvider>\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"addExercise\":\"AddExercise_addExercise__7FNxa\",\"button\":\"AddExercise_button__mkO2c\"};","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { CustomButton } from \"../../../components/CustomButton/CustomButton\";\r\nimport { CustomInput } from \"../../../components/CustomInput/CustomInput\";\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport { IAddExercise } from \"../../../types/types\";\r\nimport { ClosableMessage } from \"../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./AddExercise.module.scss\";\r\n\r\nexport const AddExercise: React.FC<IAddExercise> = ({\r\n  onAddExercise,\r\n  category,\r\n}) => {\r\n  const user = getAuth().currentUser;\r\n  const { t } = useTranslation();\r\n  const [exerciseName, setExerciseName] = useState(\"\");\r\n\r\n  const handleAddExercise = async () => {\r\n    if (!exerciseName) {\r\n      ClosableMessage({ type: \"error\", content: t(\"typeExercise\") });\r\n      return;\r\n    }\r\n    try {\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercise = {\r\n          id: uuidv4(),\r\n          name: exerciseName,\r\n          category: category,\r\n          bestResult: {\r\n            weight: \"0\",\r\n            reps: \"0\",\r\n          },\r\n          isFavorite: false,\r\n        };\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n        const docSnapshot = await getDoc(exercisesDocRef);\r\n\r\n        if (docSnapshot.exists()) {\r\n          const existingExercises = docSnapshot.data().exercises || [];\r\n\r\n          const exerciseExists = existingExercises.some(\r\n            (existingExercise: { name: string }) =>\r\n              existingExercise.name.toLowerCase() === exerciseName.toLowerCase()\r\n          );\r\n\r\n          if (exerciseExists) {\r\n            ClosableMessage({ type: \"error\", content: t(\"nameAlreadyExists\") });\r\n            setExerciseName(\"\");\r\n            return;\r\n          }\r\n\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: [...existingExercises, exercise],\r\n          });\r\n        } else {\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: [exercise],\r\n          });\r\n        }\r\n\r\n        setExerciseName(\"\");\r\n        onAddExercise();\r\n        ClosableMessage({ type: \"success\", content: t(\"exerciseAdded\") });\r\n      }\r\n    } catch (error) {\r\n      ClosableMessage({ type: \"error\", content: t(\"errorAddingExercise\") });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SubTitle>{t(\"addAnExercise\")}</SubTitle>\r\n      <div className={styles.addExercise}>\r\n        <CustomInput\r\n          value={exerciseName}\r\n          onChange={(value: string) => setExerciseName(value)}\r\n          text={t(\"exerciseName\")}\r\n          placeholder={t(\"typeExercise\")}\r\n        />\r\n        <CustomButton\r\n          className={styles.button}\r\n          icon={<PlusOutlined />}\r\n          onClick={handleAddExercise}\r\n        >\r\n          {t(\"addExerciseBtn\")}\r\n        </CustomButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Exercises_title__ThgWQ\",\"description\":\"Exercises_description__cykz7\",\"cards\":\"Exercises_cards__+xw7k\"};","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"CardOptions_options__F-aCP\",\"star\":\"CardOptions_star__tS7rd\",\"active\":\"CardOptions_active__E3ut+\",\"editExercise\":\"CardOptions_editExercise__JcxiY\",\"editBtn\":\"CardOptions_editBtn__WYKcX\",\"saveRecord\":\"CardOptions_saveRecord__QY7zv\"};","import React, { useState } from \"react\";\r\nimport { CheckOutlined, EditOutlined, StarFilled } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { CardOptionsPropsType } from \"../../../../../types/types\";\r\nimport { SettingButton } from \"../../../../../components/SettingButton/SettingButton\";\r\nimport { ClosableMessage } from \"../../../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./CardOptions.module.scss\";\r\n\r\nexport const CardOptions: React.FC<CardOptionsPropsType> = ({\r\n  item,\r\n  category,\r\n  setData,\r\n  setCurrentEditingId,\r\n  setNewName,\r\n  editMode,\r\n  setEditMode,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [isActive, setIsActive] = useState<boolean>(false);\r\n\r\n  const toggleFavorite = async (exerciseId: string, currentStatus: boolean) => {\r\n    try {\r\n      const user = getAuth().currentUser;\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          const favoriteExercisesCount = exercisesData.exercises.filter(\r\n            (exercise: { isFavorite: boolean }) => exercise.isFavorite\r\n          ).length;\r\n\r\n          if (!currentStatus && favoriteExercisesCount >= 3) {\r\n            ClosableMessage({\r\n              type: \"warning\",\r\n              content: t(\"maxFavoritesReached\"),\r\n            });\r\n            return;\r\n          }\r\n\r\n          let updatedExercises = exercisesData.exercises.map(\r\n            (exercise: { id: string }) => {\r\n              if (exercise.id === exerciseId) {\r\n                return { ...exercise, isFavorite: !currentStatus };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: updatedExercises,\r\n          });\r\n\r\n          const translatedCategory = t(`categories.${category}`);\r\n          const filteredData = updatedExercises.filter(\r\n            (exercise: { category: string }) =>\r\n              t(`categories.${exercise.category}`) === translatedCategory\r\n          );\r\n          setData(filteredData);\r\n        }\r\n\r\n        if (!currentStatus) {\r\n          ClosableMessage({ type: \"success\", content: t(\"addedToFavorite\") });\r\n          return;\r\n        } else {\r\n          ClosableMessage({\r\n            type: \"success\",\r\n            content: t(\"removedFromFavorite\"),\r\n          });\r\n        }\r\n        setIsActive(!isActive);\r\n      }\r\n    } catch (error) {\r\n      ClosableMessage({ type: \"error\", content: t(\"errorUpdatingFavorite\") });\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (exerciseId: string, currentName: string) => {\r\n    setCurrentEditingId(exerciseId);\r\n    setNewName(currentName);\r\n    setEditMode(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.options}>\r\n      <SettingButton\r\n        icon={<StarFilled />}\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          toggleFavorite(item.id, item.isFavorite);\r\n        }}\r\n        className={`${styles.star} ${item.isFavorite ? styles.active : \"\"}`}\r\n      >\r\n        <span>{t(\"favorite\")}</span>\r\n      </SettingButton>\r\n      {editMode ? (\r\n        <div className={styles.editBtn}>\r\n          <SettingButton icon={<CheckOutlined />} className={styles.saveRecord}>\r\n            <span>{t(\"save\")}</span>\r\n          </SettingButton>\r\n        </div>\r\n      ) : (\r\n        <SettingButton\r\n          icon={<EditOutlined />}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleEditClick(item.id, item.name);\r\n          }}\r\n          className={styles.editExercise}\r\n        >\r\n          <span>{t(\"editName\")}</span>\r\n        </SettingButton>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"deleteIconContainer\":\"DeleteIcon_deleteIconContainer__IWqYi\",\"exerciseNumber\":\"DeleteIcon_exerciseNumber__Q9Zs7\",\"deleteIcon\":\"DeleteIcon_deleteIcon__ntbKM\",\"confirm\":\"DeleteIcon_confirm__0yMiT\",\"deleteSave\":\"DeleteIcon_deleteSave__joWfR\"};","import React from \"react\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  deleteDoc,\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { CustomModal } from \"../../../../../../components/CustomModal/CustomModal\";\r\nimport { ResetButton } from \"../../../../../../components/ResetButton/ResetButton\";\r\nimport { ModalDeletePropsType, Exercise } from \"../../../../../../types/types\";\r\nimport { scrollToTop } from \"../../../../../../utils/scrollToTop\";\r\n\r\nimport styles from \"../DeleteIcon.module.scss\";\r\nimport { ClosableMessage } from \"../../../../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nexport const ModalDelete: React.FC<ModalDeletePropsType> = ({\r\n  setLoading,\r\n  setIsModalOpen,\r\n  category,\r\n  setData,\r\n  isModalOpen,\r\n  handleCancel,\r\n  item,\r\n  setConfirm,\r\n  setSelectedExercise,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const handleDeleteCard = async (exerciseId: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const user = getAuth().currentUser;\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n        const setsCollectionRef = doc(getFirestore(), \"sets\", exerciseId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n        await deleteDoc(setsCollectionRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          let updatedExercises: Exercise[] = [];\r\n\r\n          if (exercisesData && exercisesData.exercises) {\r\n            updatedExercises = exercisesData.exercises.filter(\r\n              (exercise: Exercise) => exercise.id !== exerciseId\r\n            );\r\n\r\n            await updateDoc(exercisesDocRef, {\r\n              exercises: updatedExercises,\r\n            });\r\n\r\n            const filteredData = updatedExercises.filter(\r\n              (exercise: Exercise) =>\r\n                t(`categories.${exercise.category}`) ===\r\n                t(`categories.${category}`)\r\n            );\r\n            setData(filteredData);\r\n            localStorage.setItem(\"exercisesData\", JSON.stringify(filteredData));\r\n          }\r\n        }\r\n        setConfirm(false);\r\n        setIsModalOpen(false);\r\n        setLoading(false);\r\n        setSelectedExercise(null);\r\n        scrollToTop();\r\n        ClosableMessage({ type: \"success\", content: t(\"exerciseDeleted\") });\r\n      }\r\n    } catch (error) {\r\n      ClosableMessage({ type: \"error\", content: t(\"errorDeletingExercise\") });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CustomModal\r\n      open={isModalOpen}\r\n      onCancel={(e) => {\r\n        handleCancel(e);\r\n        setIsModalOpen(false);\r\n      }}\r\n      footer={false}\r\n    >\r\n      <p className={styles.confirm}>{t(\"confirmDeletingExercise\")}</p>\r\n      <div className={styles.deleteSave}>\r\n        <ResetButton\r\n          children={t(\"delete\")}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleDeleteCard(item.id);\r\n          }}\r\n          icon={<DeleteOutlined />}\r\n        />\r\n      </div>\r\n    </CustomModal>\r\n  );\r\n};\r\n","import { CloseOutlined } from \"@ant-design/icons\";\r\nimport { Tooltip } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { DeleteIconPropsType } from \"../../../../../types/types\";\r\n\r\nimport { ModalDelete } from \"./ModalDelete/ModalDelete\";\r\nimport styles from \"./DeleteIcon.module.scss\";\r\n\r\nexport const DeleteIcon: React.FC<DeleteIconPropsType> = ({\r\n  setLoading,\r\n  setIsModalOpen,\r\n  category,\r\n  setData,\r\n  isModalOpen,\r\n  handleCancel,\r\n  item,\r\n  index,\r\n  setSelectedExercise,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [confirm, setConfirm] = useState<boolean>(false);\r\n\r\n  const handleConfirm = () => {\r\n    setConfirm(true);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.deleteIconContainer}>\r\n        <div className={styles.exerciseNumber}>{index + 1}.</div>\r\n        <Tooltip title={t(\"deleteExercise\")}>\r\n          <CloseOutlined\r\n            className={styles.deleteIcon}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleConfirm();\r\n            }}\r\n          />\r\n        </Tooltip>\r\n      </div>\r\n      {confirm && (\r\n        <ModalDelete\r\n          setLoading={setLoading}\r\n          category={category}\r\n          setData={setData}\r\n          isModalOpen={isModalOpen}\r\n          setIsModalOpen={setIsModalOpen}\r\n          handleCancel={handleCancel}\r\n          item={item}\r\n          setConfirm={setConfirm}\r\n          setSelectedExercise={setSelectedExercise}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"editInput\":\"EditInput_editInput__CnmRa\"};","import React, { useEffect, useRef } from \"react\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { EditInputPropsType, Exercise } from \"../../../../../types/types\";\r\nimport { ClosableMessage } from \"../../../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./EditInput.module.scss\";\r\n\r\nexport const EditInput: React.FC<EditInputPropsType> = ({\r\n  newName,\r\n  editMode,\r\n  currentEditingId,\r\n  setCurrentEditingId,\r\n  category,\r\n  setData,\r\n  setEditMode,\r\n  setNewName,\r\n}) => {\r\n  const user = getAuth().currentUser;\r\n  const { t } = useTranslation();\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (editMode && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editMode]);\r\n\r\n  const changeExerciseName = async (exerciseId: string, newName: string) => {\r\n    try {\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n\r\n          const currentExercise = exercisesData.exercises.find(\r\n            (exercise: { id: string }) => exercise.id === exerciseId\r\n          );\r\n\r\n          if (currentExercise && currentExercise.name === newName) {\r\n            ClosableMessage({\r\n              type: \"warning\",\r\n              content: t(\"nameNotChanged\"),\r\n            });\r\n            return;\r\n          }\r\n\r\n          if (newName.trim().length < 3) {\r\n            ClosableMessage({\r\n              type: \"error\",\r\n              content: t(\"nameMin3Symbols\"),\r\n            });\r\n            return;\r\n          }\r\n          const nameExists = exercisesData.exercises.some(\r\n            (exercise: { id: string; name: string }) =>\r\n              exercise.id !== exerciseId && exercise.name === newName\r\n          );\r\n\r\n          if (nameExists) {\r\n            ClosableMessage({\r\n              type: \"error\",\r\n              content: t(\"nameAlreadyExists\"),\r\n            });\r\n            return;\r\n          }\r\n\r\n          let updatedExercises = exercisesData.exercises.map(\r\n            (exercise: { id: string; name: string }) => {\r\n              if (exercise.id === exerciseId) {\r\n                return { ...exercise, name: newName };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: updatedExercises,\r\n          });\r\n\r\n          const filteredData = updatedExercises\r\n            .filter(\r\n              (exercise: { category: string }) =>\r\n                t(`categories.${exercise.category}`) ===\r\n                t(`categories.${category}`)\r\n            )\r\n            .map((exercise: Exercise) => ({\r\n              id: exercise.id,\r\n              name: t(exercise.name),\r\n              category: exercise.category,\r\n              bestResult: `${t(\"lastSet\")}: ${exercise.bestResult}`,\r\n              isFavorite: exercise.isFavorite,\r\n            }));\r\n\r\n          localStorage.setItem(\"exercisesData\", JSON.stringify(filteredData));\r\n          setData(filteredData);\r\n\r\n          ClosableMessage({\r\n            type: \"success\",\r\n            content: t(\"nameUpdated\"),\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      ClosableMessage({ type: \"error\", content: t(\"nameChangeFailed\") });\r\n    }\r\n  };\r\n\r\n  const handleEditKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key === \"Enter\" && currentEditingId) {\r\n      changeExerciseName(currentEditingId, newName);\r\n      setEditMode(false);\r\n      setCurrentEditingId(null);\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (currentEditingId) {\r\n      changeExerciseName(currentEditingId, newName);\r\n      setEditMode(false);\r\n      setCurrentEditingId(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      value={newName}\r\n      className={styles.editInput}\r\n      onChange={(e) => setNewName(e.target.value)}\r\n      onKeyDown={handleEditKeyDown}\r\n      onBlur={handleBlur}\r\n      ref={inputRef}\r\n    />\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cardItem\":\"ExerciseCard_cardItem__2AKct\",\"active\":\"ExerciseCard_active__7n1-4\",\"exerciseContainer\":\"ExerciseCard_exerciseContainer__nXbmq\",\"exerciseName\":\"ExerciseCard_exerciseName__MCYS-\"};","import React, { useState } from \"react\";\r\n\r\nimport { Exercise, ExerciseCardPropsType } from \"../../../../types/types\";\r\n\r\nimport { CardOptions } from \"./CardOptions/CardOptions\";\r\nimport { DeleteIcon } from \"./DeleteIcon/DeleteIcon\";\r\nimport { EditInput } from \"./EditInput/EditInput\";\r\nimport styles from \"./ExerciseCard.module.scss\";\r\n\r\nexport const ExerciseCard: React.FC<ExerciseCardPropsType> = ({\r\n  item,\r\n  onSelectExercise,\r\n  category,\r\n  setData,\r\n  setLoading,\r\n  activeCardId,\r\n  setActiveCardId,\r\n  index,\r\n  exercisesRef,\r\n  setSelectedExercise,\r\n}) => {\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [newName, setNewName] = useState<string>(\"\");\r\n  const [currentEditingId, setCurrentEditingId] = useState<string | null>(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const handleCancel = (e: { stopPropagation: () => void }) => {\r\n    e.stopPropagation();\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleCardClick = (item: Exercise) => {\r\n    setActiveCardId(item.id);\r\n    onSelectExercise(item);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.cardItem} ${\r\n        activeCardId === item.id ? styles.active : \"\"\r\n      }`}\r\n      onClick={() => handleCardClick(item)}\r\n      ref={exercisesRef}\r\n    >\r\n      <DeleteIcon\r\n        setLoading={setLoading}\r\n        setIsModalOpen={setIsModalOpen}\r\n        category={category}\r\n        setData={setData}\r\n        isModalOpen={isModalOpen}\r\n        handleCancel={handleCancel}\r\n        item={item}\r\n        index={index}\r\n        setSelectedExercise={setSelectedExercise}\r\n      />\r\n      {currentEditingId === item.id && editMode ? (\r\n        <EditInput\r\n          newName={newName}\r\n          editMode={editMode}\r\n          currentEditingId={currentEditingId}\r\n          setCurrentEditingId={setCurrentEditingId}\r\n          category={category}\r\n          setData={setData}\r\n          setEditMode={setEditMode}\r\n          setNewName={setNewName}\r\n        />\r\n      ) : (\r\n        <div className={styles.exerciseContainer}>\r\n          <span className={styles.exerciseName}>{item.name}</span>\r\n        </div>\r\n      )}\r\n      <CardOptions\r\n        item={item}\r\n        category={category}\r\n        setData={setData}\r\n        setCurrentEditingId={setCurrentEditingId}\r\n        setNewName={setNewName}\r\n        editMode={editMode}\r\n        setEditMode={setEditMode}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport { Exercise, ExercisesProps } from \"../../../types/types\";\r\nimport { Loader } from \"../../../components/Loader/Loader\";\r\nimport { EmptyBox } from \"../../../components/EmptyBox/EmptyBox\";\r\nimport { ClosableMessage } from \"../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./Exercises.module.scss\";\r\nimport { ExerciseCard } from \"./ExerciseCard/ExerciseCard\";\r\n\r\nexport const Exercises: React.FC<ExercisesProps> = ({\r\n  category,\r\n  updateTrigger,\r\n  onSelectExercise,\r\n  exercisesRef,\r\n  activeCardId,\r\n  setActiveCardId,\r\n  setSelectedExercise,\r\n  data,\r\n  setData,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(\r\n      localStorage.getItem(\"exercisesData\") || \"[]\"\r\n    );\r\n    if (storedData.length > 0) {\r\n      setData(storedData);\r\n      setLoading(false);\r\n    }\r\n  }, [category]);\r\n\r\n  useEffect(() => {\r\n    const fetchExercises = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const user = getAuth().currentUser;\r\n        if (user) {\r\n          const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n          const exercisesDoc = await getDoc(exercisesDocRef);\r\n          if (exercisesDoc.exists()) {\r\n            const exercisesData = exercisesDoc.data();\r\n            const filteredData = exercisesData.exercises\r\n              .filter(\r\n                (exercise: Exercise) =>\r\n                  t(`categories.${exercise.category}`) ===\r\n                  t(`categories.${category}`)\r\n              )\r\n              .map((exercise: Exercise) => ({\r\n                id: exercise.id,\r\n                name: t(exercise.name),\r\n                category: exercise.category,\r\n                bestResult: exercise.bestResult,\r\n                isFavorite: exercise.isFavorite,\r\n              }));\r\n            localStorage.setItem(\"exercisesData\", JSON.stringify(filteredData));\r\n            setData(filteredData);\r\n          }\r\n        }\r\n        setLoading(false);\r\n      } catch (error) {\r\n        ClosableMessage({\r\n          type: \"error\",\r\n          content: t(\"errorFetchingExercises\"),\r\n        });\r\n      }\r\n    };\r\n    fetchExercises();\r\n  }, [category, t, updateTrigger]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <SubTitle children={t(\"exercises\")} className={styles.title} />\r\n          <div className={styles.description}>{t(\"chooseExercise\")}</div>\r\n          <div className={styles.cards}>\r\n            {data.length ? (\r\n              data.map((item: Exercise, index) => (\r\n                <ExerciseCard\r\n                  key={item.id}\r\n                  item={item}\r\n                  onSelectExercise={onSelectExercise}\r\n                  category={category}\r\n                  setData={setData}\r\n                  setLoading={setLoading}\r\n                  activeCardId={activeCardId}\r\n                  setActiveCardId={setActiveCardId}\r\n                  index={index}\r\n                  exercisesRef={exercisesRef}\r\n                  setSelectedExercise={setSelectedExercise}\r\n                />\r\n              ))\r\n            ) : (\r\n              <EmptyBox />\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { DescriptionTitle } from \"../../components/DescriptionTitle/DescriptionTitle\";\r\nimport { PageWrapper } from \"../../components/PageWrapper/PageWrapper\";\r\nimport { Exercise, LocationState } from \"../../types/types\";\r\n\r\nimport { ExerciseTable } from \"./ExerciseTable/ExerciseTable\";\r\nimport { AddExercise } from \"./AddExercise/AddExercise\";\r\nimport { Exercises } from \"./Exercises/Exercises\";\r\n\r\nconst Workout: React.FC = () => {\r\n  const location = useLocation();\r\n  const state = location.state as LocationState;\r\n  const [data, setData] = useState<Exercise[]>([]);\r\n  const [updateTrigger, setUpdateTrigger] = useState(0);\r\n  const [selectedExercise, setSelectedExercise] = useState<Exercise | null>(\r\n    null\r\n  );\r\n  const [activeCardId, setActiveCardId] = useState<string | null>(null);\r\n  const exercisesRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n  }, []);\r\n\r\n  const handleUpdateExercises = () => {\r\n    setUpdateTrigger((prev) => prev + 1);\r\n\r\n    if (exercisesRef.current) {\r\n      exercisesRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  const handleSelectExercise = (exercise: Exercise) => {\r\n    // Проверка наличия данных для выбранного упражнения\r\n    const exerciseData = data.find((item) => item.id === exercise.id);\r\n\r\n    if (exerciseData) {\r\n      setSelectedExercise(exercise); // Устанавливаем выбранное упражнение\r\n    } else {\r\n      // Сбрасываем состояние и данные при отсутствии информации\r\n      setSelectedExercise(null);\r\n      setData([]); // Очищаем данные, если для упражнения нет записей\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div style={{ minHeight: \"100vh\" }}>\r\n        <DescriptionTitle text={state.title} textAlign=\"center\" />\r\n        <AddExercise\r\n          category={state?.title}\r\n          onAddExercise={handleUpdateExercises}\r\n        />\r\n        <Exercises\r\n          category={state?.title}\r\n          updateTrigger={updateTrigger}\r\n          onSelectExercise={handleSelectExercise}\r\n          exercisesRef={exercisesRef}\r\n          activeCardId={activeCardId}\r\n          setActiveCardId={setActiveCardId}\r\n          setSelectedExercise={setSelectedExercise}\r\n          data={data}\r\n          setData={setData}\r\n        />\r\n        <ExerciseTable\r\n          selectedExercise={selectedExercise}\r\n          setSelectedExercise={setSelectedExercise}\r\n          setActiveCardId={setActiveCardId}\r\n        />\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default Workout;\r\n","export const scrollToTop = () =>\r\n  setTimeout(() => {\r\n    window.scrollTo({\r\n      left: 0,\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, 100);\r\n"],"names":["ClosableMessage","_ref","type","content","key","message","_jsxs","children","_jsx","CloseOutlined","onClick","closeMessage","destroy","className","styles","CustomInput","name","text","placeholder","isRequired","onChange","value","t","useTranslation","Form","Item","label","rules","required","Input","allowClear","e","target","autoComplete","CustomModal","open","onCancel","footer","useEffect","document","body","style","overflow","ConfigProvider","theme","components","Modal","contentBg","colorIcon","colorIconHover","marginTop","DescriptionTitle","textAlign","ref","controls","useAnimatedInView","motion","h2","descriptionTitle","initial","animate","variants","animation","container","maxWidth","margin","PageWrapper","ResetButton","icon","Button","SettingButton","SubTitle","p","threshold","arguments","length","undefined","triggerOnce","animationVariants","useAnimation","inView","useInView","start","hidden","opacity","visible","transition","duration","EmptyBox","Empty","image","PRESENTED_IMAGE_SIMPLE","description","color","NumericInput","onBlur","replace","startsWith","substring","test","inputMode","pattern","forwardRef","scrollToBottom","setTimeout","window","scrollTo","left","top","scrollHeight","behavior","TableFooter","selectedExercise","data","setData","setEditWeight","saveExerciseData","onWorkoutDateChange","setCurrentWorkout","addRowBtn","setAddRowBtn","saveBtn","setSaveBtn","setDeleteBtn","workouts","setWorkouts","useState","workoutDates","setWorkoutDates","currentWorkoutIndex","setCurrentWorkoutIndex","hideButtons","setHideButtons","async","setsCollectionRef","collection","getFirestore","setDocRef","doc","id","docSnapshot","getDoc","exists","_docSnapshot$data","Array","isArray","map","workout","approaches","date","lastIndex","error","console","loadWorkouts","isLastWorkout","_Fragment","addRow","newData","nextSet","set","newRow","toString","weight","reps","push","PlusOutlined","CustomButton","CheckOutlined","showPreviousWorkout","newIndex","LeftOutlined","showNextWorkout","RightOutlined","startNewTraining","BestResult","bestResult","setBestResult","user","getAuth","currentUser","editMode","setEditMode","setWeight","setReps","isSaving","setIsSaving","handleSave","exercisesDocRef","uid","exercisesDoc","exercisesData","exerciseToUpdate","exercises","find","exercise","updatedBestResult","Number","updatedExercises","updateDoc","saveBestResult","items","EditOutlined","extra","src","process","Collapse","size","bordered","DeleteWorkout","workoutDate","setWorkoutDate","setSelectedExercise","setActiveCardId","contextHolder","useMessage","isModalOpen","setIsModalOpen","DeleteOutlined","confirmDelete","stopPropagation","filteredWorkouts","filter","Date","toLocaleString","scrollToTop","success","deleteWorkoutByDate","ExerciseTable","editWeight","editReps","setEditReps","currentWorkout","deleteBtn","weightInputRef","useRef","repsInputRef","loadExerciseData","current","focus","Promise","all","documentData","latestWorkout","loadedData","approach","ex","columns","title","dataIndex","width","render","record","updateWeight","row","updateReps","Divider","backgroundColor","Table","headerBg","headerColor","cellFontSize","colorBgContainer","colorText","borderColor","cellPaddingBlock","toLocaleDateString","rowKey","dataSource","pagination","locale","emptyText","validData","batch","writeBatch","setDoc","newWorkout","uuidv4","toISOString","index","update","commit","formattedDate","isNaN","getTime","AddExercise","onAddExercise","category","exerciseName","setExerciseName","userId","isFavorite","existingExercises","some","existingExercise","toLowerCase","CardOptions","item","setCurrentEditingId","setNewName","isActive","setIsActive","StarFilled","exerciseId","currentStatus","favoriteExercisesCount","translatedCategory","filteredData","toggleFavorite","handleEditClick","currentName","ModalDelete","setLoading","handleCancel","setConfirm","deleteDoc","localStorage","setItem","JSON","stringify","handleDeleteCard","DeleteIcon","confirm","Tooltip","EditInput","newName","currentEditingId","inputRef","changeExerciseName","currentExercise","trim","onKeyDown","event","handleBlur","ExerciseCard","onSelectExercise","activeCardId","exercisesRef","handleCardClick","Exercises","updateTrigger","loading","storedData","parse","getItem","fetchExercises","Loader","Workout","state","useLocation","setUpdateTrigger","scroll","minHeight","handleUpdateExercises","prev","scrollIntoView"],"sourceRoot":""}