{"version":3,"file":"static/js/693.4919d4df.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["import { invariant } from '../../utils/errors.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls, setValues };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const props = visualElement.getProps();\n            const appearId = props[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n                if (i === unresolvedKeyframes.length - 1) {\n                    this.finalKeyframe = keyframe;\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        var _a;\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            (_a = this.features[key]) === null || _a === void 0 ? void 0 : _a.unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection = new ProjectionNodeConstructor(this.latestValues, renderedProps[\"data-framer-portal-id\"]\n                ? undefined\n                : getClosestProjectingNode(this.parent));\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.2.6\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.2.6 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.2.6\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import type { ObserverInstanceCallback } from \"./index\";\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit[\"root\"]) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === \"root\"\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    // biome-ignore lint/style/useConst: It's fine to use let here, as we are going to assign it later\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === \"undefined\" &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from \"react\";\nimport type { InViewHookResponse, IntersectionOptions } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions[\"onChange\"]>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: threshold is not correctly detected as a dependency\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["setVariants","visualElement","variantLabels","reverse","forEach","key","variant","getVariant","setTarget","variantChildren","child","animationControls","hasMounted","subscribers","Set","controls","subscribe","add","delete","start","definition","transitionOverride","invariant","animations","push","animateVisualElement","Promise","all","set","Array","isArray","setValues","stop","values","value","stopAnimation","mount","useAnimation","useConstant","useIsomorphicLayoutEffect","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","length","transformProps","has","startsWith","Math","sqrt","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","undefined","isAnimatable","name","complex","test","BaseAnimation","constructor","autoplay","delay","repeatDelay","options","this","isStopped","hasAttemptedResolve","updateFinishedPromise","resolved","_resolved","flushKeyframeResolvers","onKeyframesResolved","velocity","onComplete","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","current","i","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","max","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","pow","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","origin","target","state","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","v","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","backOut","backIn","reverseEasing","backInOut","mirrorEasing","easingLookup","linear","circIn","circInOut","circOut","anticipate","p","easingDefinitionToFunction","x1","y1","x2","y2","hueToRgb","q","mixLinearColor","from","to","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","color","find","Boolean","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixNumber","transform","invisibleValues","mixImmediate","mixNumber$1","getMixer","isCSSVariableToken","mixComplex","mixArray","mixObject","output","numValues","blendValue","map","template","createTransformer","originStats","analyseComplexValue","targetStats","indexes","var","number","mixVisibility","pipe","_a","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","arguments","inputLength","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","progress","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","easing","splice","frameloopDriver","update","passTimestamp","timestamp","frame","cancelFrame","now","frameData","isProcessing","time","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","KeyframeResolver","KeyframeResolver$1","super","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","resolver","cancel","teardown","onStop","motionValue","onResolved","owner","resolveKeyframes","scheduleResolve","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","complete","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","callback","memo","Object","hasOwnProperty","call","Element","prototype","acceleratedValues","AcceleratedAnimation","DOMKeyframesResolver","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","element","valueName","keyframeOptions","animate","fill","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","getProps","animateMotionValue","transition","isHandoff","valueTransition","getValueTransition","getVelocity","isTransitionDefined","shouldSkip","MotionGlobalConfig","skipAnimations","get","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionEnd","willChange","getValue","animationTypeState","animationState","getState","latestValues","valueTarget","window","HandoffAppearAnimations","appearId","optimizedAppearDataAttribute","shouldReduceMotion","isWillChangeMotionValue","remove","animateVariant","resolveVariant","presenceContext","custom","getAnimation","getChildAnimations","size","forwardDelay","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","notify","animateChildren","when","first","last","sortNodePosition","resolvedDefinition","postRender","camelToDash","isKeyframesTarget","_delay","acos","Queue","order","scheduled","process","indexOf","clear","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","useManualTiming","performance","keepAlive","immediate","requestAnimationFrame","clearTime","queueMicrotask","splitCSSVariableRegex","getVariableValue","depth","token","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","trim","isNumericalString","parseFloat","invalidTemplates","unresolvedKeyframes","readKeyframes","keyframe","resolveNoneKeyframes","positionalKeys","originType","findDimensionValueType","targetType","isNumOrPxType","needsMeasurement","noneKeyframeIndexes","isZeroValueString","animatableTemplate","noneIndex","getAnimatableNone","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","positionalValues","measureViewportBox","measureKeyframe","jump","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","LazyContext","strict","microtask","cancelMicrotask","isRefObject","ref","useMotionRef","visualState","externalRef","useCallback","instance","unmount","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","props","isVariantNode","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","layoutId","useLayoutId","isBrowser","parent","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","wantsHandoff","HandoffComplete","render","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","jsxs","Provider","children","jsx","_ref2","layoutGroupId","id","createMotionProxy","createConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","isForcedMotionValue","translateAlias","y","z","transformPerspective","numTransforms","transformPropOrder","getValueAsType","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","numberValueTypes","valueAsType","default","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","buildTransform","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","source","isMotionValue","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","width","height","calcSVGTransformOrigin","scale","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolveVariantFromProps","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","prev","prevLength","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","notifyListeners","subscriptionManager","_len","args","_key","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","HandoffCancelAllAnimations","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","_b","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","dimensionValueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","allowProjection","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","addValue","hasValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","testValueType","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","str","replace","checkStringStartsWith","startsAsVariableToken","singleCssVariableRegex","split","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","_ref3","paddingLeft","paddingRight","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","degrees","vw","vh","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","translateZ","perspective","progressPercentage","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","scrollTo","readAllKeyframes","isAsync","isComplete","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","getValueState","setMotionValue","resolveFinalValueInKeyframes","item","any","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","getSize","seconds","milliseconds","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","_this","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","isColorString","r","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","originalValue","toString","parsedValue","parseComplexValue","numSections","convertNumbersToZero","colorRegex","parsed","transformer","createUnitType","endsWith","observerMap","RootIds","rootId","unsupportedValue","optionsToId","fallbackInView","bounds","intersectionRatio","boundingClientRect","intersectionRect","rootBounds","observer","elements","thresholds","trackVisibility","createObserver","callbacks","disconnect","React","useInView","triggerOnce","skip","initialInView","setRef","React2","setState","entryTarget","previousEntryTarget"],"sourceRoot":""}