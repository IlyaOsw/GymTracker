{"version":3,"file":"static/js/265.63c6bf23.chunk.js","mappings":"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","sources":["webpack://gymtracker/./src/components/CustomInput/CustomInput.module.scss?82c8","components/CustomInput/CustomInput.tsx","components/CustomModal/CustomModal.tsx","webpack://gymtracker/./src/components/DescriptionTitle/DescriptionTitle.module.scss?64ef","components/DescriptionTitle/DescriptionTitle.tsx","components/PageWrapper/PageWrapper.tsx","webpack://gymtracker/./src/components/ResetButton/ResetButton.module.scss?4be0","components/ResetButton/ResetButton.tsx","webpack://gymtracker/./src/components/SettingButton/SettingButton.module.scss?b1fb","components/SettingButton/SettingButton.tsx","webpack://gymtracker/./src/components/SubTitle/SubTitle.module.scss?d9b0","components/SubTitle/SubTitle.tsx","hooks/useAnimatedInView .tsx","components/EmptyBox/EmptyBox.tsx","webpack://gymtracker/./src/components/NumericInput/NumericInput.module.scss?4f22","components/NumericInput/NumericInput.tsx","webpack://gymtracker/./src/pages/Workout/ExerciseTable/ExerciseTable.module.scss?799a","webpack://gymtracker/./src/pages/Workout/ExerciseTable/TableFooter/TableFooter.module.scss?31d1","pages/Workout/ExerciseTable/TableFooter/TableFooter.tsx","webpack://gymtracker/./src/pages/Workout/ExerciseTable/BestResult/BestResult.module.scss?47bd","pages/Workout/ExerciseTable/BestResult/BestResult.tsx","pages/Workout/ExerciseTable/ExerciseTable.tsx","webpack://gymtracker/./src/pages/Workout/AddExercise/AddExercise.module.scss?140e","pages/Workout/AddExercise/AddExercise.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/Exercises.module.scss?28b0","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/CardOptions/CardOptions.module.scss?2f2b","pages/Workout/Exercises/ExerciseCard/CardOptions/CardOptions.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/DeleteIcon/DeleteIcon.module.scss?6012","pages/Workout/Exercises/ExerciseCard/DeleteIcon/ModalDelete/ModalDelete.tsx","pages/Workout/Exercises/ExerciseCard/DeleteIcon/DeleteIcon.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/EditInput/EditInput.module.scss?17ed","pages/Workout/Exercises/ExerciseCard/EditInput/EditInput.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/ExerciseCard.module.scss?e0ae","pages/Workout/Exercises/ExerciseCard/ExerciseCard.tsx","pages/Workout/Exercises/Exercises.tsx","pages/Workout/Workout.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"CustomInput_inputWrapper__wz8SN\",\"inputLabel\":\"CustomInput_inputLabel__b-QWx\",\"inputField\":\"CustomInput_inputField__baNtE\"};","import { Form, Input } from \"antd\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CustomInputProps, FieldType } from \"../../types/types\";\r\n\r\nimport styles from \"./CustomInput.module.scss\";\r\n\r\nexport const CustomInput: React.FC<CustomInputProps> = ({\r\n  name,\r\n  text,\r\n  type,\r\n  placeholder,\r\n  isRequired = true,\r\n  className,\r\n  onChange,\r\n  value,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    if (onChange) {\r\n      onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.inputWrapper}>\r\n      <Form.Item<FieldType>\r\n        label={<span className={styles.inputLabel}>{t(text)}</span>}\r\n        name={name}\r\n        rules={[{ required: isRequired }]}\r\n      >\r\n        <Input\r\n          type={type}\r\n          placeholder={placeholder}\r\n          className={`${styles.inputField} ${className}`}\r\n          allowClear\r\n          onChange={handleChange}\r\n          value={value}\r\n          autoComplete=\"off\"\r\n        />\r\n      </Form.Item>\r\n    </div>\r\n  );\r\n};\r\n","import { ConfigProvider, Modal } from \"antd\";\r\nimport React from \"react\";\r\n\r\nimport { CustomModalProps } from \"../../types/types\";\r\n\r\nexport const CustomModal: React.FC<CustomModalProps> = ({\r\n  open,\r\n  onCancel,\r\n  footer = null,\r\n  children,\r\n}) => {\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        components: {\r\n          Modal: {\r\n            contentBg: \"#141414\",\r\n            colorIcon: \"lightgray\",\r\n            colorIconHover: \"gray\",\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <Modal\r\n        open={open}\r\n        onCancel={onCancel}\r\n        footer={footer}\r\n        style={{ marginTop: \"50px\" }}\r\n      >\r\n        {children}\r\n      </Modal>\r\n    </ConfigProvider>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionTitle\":\"DescriptionTitle_descriptionTitle__E-lRw\",\"start\":\"DescriptionTitle_start__FSu7h\",\"center\":\"DescriptionTitle_center__eJvMJ\",\"end\":\"DescriptionTitle_end__uV+MA\"};","import { motion } from \"framer-motion\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\nimport { CustomButtonProps } from \"../../types/types\";\r\n\r\nimport styles from \"./DescriptionTitle.module.scss\";\r\n\r\nexport const DescriptionTitle: React.FC<CustomButtonProps> = ({\r\n  text,\r\n  textAlign = \"start\",\r\n  className,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { ref, controls } = useAnimatedInView();\r\n\r\n  return (\r\n    <motion.h2\r\n      ref={ref}\r\n      className={`${styles.descriptionTitle} ${styles[textAlign]} ${className}`}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n    >\r\n      {t(text)}\r\n    </motion.h2>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { PageWrapperProps } from \"../../types/types\";\r\n\r\nconst container: React.CSSProperties = {\r\n  maxWidth: \"1200px\",\r\n  margin: \"0 auto\",\r\n};\r\n\r\nexport const PageWrapper: React.FC<PageWrapperProps> = ({ children }) => {\r\n  return <div style={container}>{children}</div>;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"reset\":\"ResetButton_reset__efwrw\"};","import React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nimport { ResetBtnType } from \"../../types/types\";\r\n\r\nimport styles from \"./ResetButton.module.scss\";\r\n\r\nexport const ResetButton: React.FC<ResetBtnType> = ({\r\n  onClick,\r\n  children,\r\n  icon,\r\n}) => {\r\n  return (\r\n    <Button className={styles.reset} onClick={onClick} icon={icon}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"SettingButton_btn__TNlVz\"};","import { Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nimport styles from \"./SettingButton.module.scss\";\r\n\r\nexport type SettingButtonPropsType = {\r\n  onClick?: (e: any) => void;\r\n  icon?: React.ReactNode;\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n};\r\n\r\nexport const SettingButton: React.FC<SettingButtonPropsType> = ({\r\n  onClick,\r\n  icon,\r\n  children,\r\n  className,\r\n}) => {\r\n  return (\r\n    <Button\r\n      onClick={onClick}\r\n      icon={icon}\r\n      className={`${styles.btn} ${className}`}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"subTitle\":\"SubTitle_subTitle__6A8PN\"};","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\nimport { SubTitleType } from \"../../types/types\";\r\n\r\nimport styles from \"./SubTitle.module.scss\";\r\n\r\nexport const SubTitle: React.FC<SubTitleType> = ({ children, className }) => {\r\n  const { ref, controls } = useAnimatedInView();\r\n\r\n  return (\r\n    <motion.p\r\n      ref={ref}\r\n      className={`${styles.subTitle} ${className}`}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n    >\r\n      {children}\r\n    </motion.p>\r\n  );\r\n};\r\n","import { useAnimation, Variants } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useAnimatedInView = (\r\n  threshold: number = 0.1,\r\n  triggerOnce: boolean = false,\r\n  animationVariants?: Variants\r\n) => {\r\n  const controls = useAnimation();\r\n  const [ref, inView] = useInView({ threshold, triggerOnce });\r\n\r\n  useEffect(() => {\r\n    if (inView) {\r\n      controls.start(\"visible\");\r\n    } else {\r\n      controls.start(\"hidden\");\r\n    }\r\n  }, [controls, inView]);\r\n\r\n  return { ref, controls, animationVariants };\r\n};\r\n\r\nexport const animation = {\r\n  hidden: { opacity: 0 },\r\n  visible: { opacity: 1, transition: { duration: 1 } },\r\n};\r\n","import { Empty } from \"antd\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const EmptyBox: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Empty\r\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n      description={<span style={{ color: \"#ffffff\" }}>{t(\"noData\")}</span>}\r\n    />\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"NumericInput_input__1SATw\"};","import React, { forwardRef, ChangeEvent } from \"react\";\r\n\r\nimport { NumericInputProps } from \"../../types/types\";\r\n\r\nimport styles from \"./NumericInput.module.scss\";\r\n\r\nconst NumericInput: React.ForwardRefRenderFunction<\r\n  HTMLInputElement,\r\n  NumericInputProps\r\n> = ({ value, onChange, onBlur }, ref) => {\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let value = e.target.value;\r\n    value = value.replace(\",\", \".\");\r\n\r\n    if (value.length > 1 && value.startsWith(\"0\") && !value.startsWith(\"0.\")) {\r\n      value = value.substring(1);\r\n    }\r\n\r\n    if (/^\\d*\\.?\\d*$/.test(value)) {\r\n      onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      ref={ref}\r\n      value={value}\r\n      onChange={handleChange}\r\n      onBlur={onBlur}\r\n      className={styles.input}\r\n      type=\"text\"\r\n      inputMode=\"decimal\"\r\n      pattern=\"[0-9]*[.,]?[0-9]*\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default forwardRef(NumericInput);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableTitle\":\"ExerciseTable_tableTitle__nWHV1\",\"subtitle\":\"ExerciseTable_subtitle__dWB0y\",\"dateAndDelete\":\"ExerciseTable_dateAndDelete__Rghoq\",\"table\":\"ExerciseTable_table__gqYvK\",\"editableDiv\":\"ExerciseTable_editableDiv__lnIPx\",\"repsAndDelete\":\"ExerciseTable_repsAndDelete__sJi7S\"};","// extracted by mini-css-extract-plugin\nexport default {\"tableFooter\":\"TableFooter_tableFooter__Vdj4o\",\"saveBtn\":\"TableFooter_saveBtn__CLumP\"};","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  RightOutlined,\r\n  CloseOutlined,\r\n  LeftOutlined,\r\n  PlusOutlined,\r\n  CheckOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { collection, doc, getDoc, getFirestore } from \"firebase/firestore\";\r\n\r\nimport { CustomButton } from \"../../../../components/CustomButton/CustomButton\";\r\nimport {\r\n  ExerciseTableType,\r\n  TableFooterPropsType,\r\n} from \"../../../../types/types\";\r\nimport { SettingButton } from \"../../../../components/SettingButton/SettingButton\";\r\n\r\nimport styles from \"./TableFooter.module.scss\";\r\n\r\nexport const TableFooter: React.FC<TableFooterPropsType> = ({\r\n  selectedExercise,\r\n  data,\r\n  setData,\r\n  setEditWeight,\r\n  saveExerciseData,\r\n  onWorkoutDateChange,\r\n  setCurrentWorkout,\r\n  addRowBtn,\r\n  setAddRowBtn,\r\n  saveBtn,\r\n  setSaveBtn,\r\n  setDeleteBtn,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [workouts, setWorkouts] = useState<ExerciseTableType[][]>([]);\r\n  const [workoutDates, setWorkoutDates] = useState<string[]>([]);\r\n  const [currentWorkoutIndex, setCurrentWorkoutIndex] = useState<number>(-1);\r\n  const [hideButtons, setHideButtons] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadWorkouts = async () => {\r\n      if (selectedExercise) {\r\n        const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n        const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n        try {\r\n          const docSnapshot = await getDoc(setDocRef);\r\n          if (docSnapshot.exists()) {\r\n            const setData = docSnapshot.data();\r\n            const workouts = setData?.workouts || [];\r\n\r\n            if (\r\n              Array.isArray(workouts) &&\r\n              workouts.every((workout) => Array.isArray(workout.approaches))\r\n            ) {\r\n              setWorkouts(workouts.map((workout) => workout.approaches || []));\r\n              setWorkoutDates(workouts.map((workout) => workout.date));\r\n              const lastIndex = workouts.length - 1;\r\n              setCurrentWorkoutIndex(lastIndex);\r\n              onWorkoutDateChange(workouts[lastIndex].date);\r\n            } else {\r\n              console.error(\"Workouts data format is incorrect.\");\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error loading workouts:\", error);\r\n        }\r\n      }\r\n    };\r\n    setHideButtons(false);\r\n    loadWorkouts();\r\n  }, [selectedExercise]);\r\n\r\n  const addRow = () => {\r\n    if (!selectedExercise) {\r\n      return;\r\n    }\r\n    const newData = [...data];\r\n    const nextSet =\r\n      newData.length > 0 ? newData[newData.length - 1].set + 1 : 1;\r\n\r\n    const newRow: ExerciseTableType = {\r\n      key: nextSet.toString(),\r\n      weight: \"\",\r\n      set: nextSet,\r\n      reps: \"\",\r\n      icon: <CloseOutlined />,\r\n    };\r\n\r\n    newData.push(newRow);\r\n    setData(newData);\r\n    setEditWeight(newRow.key);\r\n  };\r\n\r\n  const startNewTraining = () => {\r\n    setData([]);\r\n    setAddRowBtn(true);\r\n    setSaveBtn(true);\r\n    setHideButtons(true);\r\n    setCurrentWorkout(true);\r\n    setDeleteBtn(false);\r\n  };\r\n\r\n  const showPreviousWorkout = () => {\r\n    if (currentWorkoutIndex > 0) {\r\n      const newIndex = currentWorkoutIndex - 1;\r\n      setCurrentWorkoutIndex(newIndex);\r\n      setData(workouts[newIndex] || []);\r\n      onWorkoutDateChange(workoutDates[newIndex]);\r\n    }\r\n  };\r\n\r\n  const showNextWorkout = () => {\r\n    if (currentWorkoutIndex < workouts.length - 1) {\r\n      const newIndex = currentWorkoutIndex + 1;\r\n      setCurrentWorkoutIndex(newIndex);\r\n      setData(workouts[newIndex] || []);\r\n      onWorkoutDateChange(workoutDates[newIndex]);\r\n    }\r\n  };\r\n\r\n  const isLastWorkout = currentWorkoutIndex === workouts.length - 1;\r\n\r\n  return (\r\n    <>\r\n      {addRowBtn && (\r\n        <SettingButton onClick={addRow} icon={<PlusOutlined />}>\r\n          {t(\"addRow\")}\r\n        </SettingButton>\r\n      )}\r\n      {saveBtn && (\r\n        <div className={styles.saveBtn}>\r\n          <CustomButton onClick={saveExerciseData} icon={<CheckOutlined />}>\r\n            {t(\"saveTraining\")}\r\n          </CustomButton>\r\n        </div>\r\n      )}\r\n      <div className={styles.tableFooter}>\r\n        {!hideButtons && currentWorkoutIndex > 0 ? (\r\n          <CustomButton onClick={showPreviousWorkout} icon={<LeftOutlined />}>\r\n            {t(\"previous\")}\r\n          </CustomButton>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {!hideButtons && !isLastWorkout && (\r\n          <CustomButton onClick={showNextWorkout} icon={<RightOutlined />}>\r\n            {t(\"next\")}\r\n          </CustomButton>\r\n        )}\r\n        {!hideButtons && isLastWorkout && (\r\n          <CustomButton onClick={startNewTraining}>\r\n            {t(\"newEntry\")}\r\n            <RightOutlined />\r\n          </CustomButton>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"collapse\":\"BestResult_collapse__pQyb-\",\"title\":\"BestResult_title__jsqEH\",\"wrapper\":\"BestResult_wrapper__1-LYV\",\"editBtn\":\"BestResult_editBtn__8ELAU\"};","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CheckOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport { Collapse, message } from \"antd\";\r\n\r\nimport { SettingButton } from \"../../../../components/SettingButton/SettingButton\";\r\nimport NumericInput from \"../../../../components/NumericInput/NumericInput\";\r\nimport { BestResultProps } from \"../../../../types/types\";\r\n\r\nimport styles from \"./BestResult.module.scss\";\r\n\r\nexport const BestResult: React.FC<BestResultProps> = ({\r\n  bestResult,\r\n  onSave,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const [weight, setWeight] = useState<string>(bestResult?.weight || \"0\");\r\n  const [reps, setReps] = useState<string>(bestResult?.reps || \"0\");\r\n\r\n  useEffect(() => {\r\n    setWeight(bestResult?.weight || \"0\");\r\n    setReps(bestResult?.reps || \"0\");\r\n  }, [bestResult]);\r\n\r\n  const handleSave = () => {\r\n    onSave({ weight, reps });\r\n    setEditMode(false);\r\n    messageApi.open({\r\n      type: \"success\",\r\n      content: t(\"recordUpdated\"),\r\n    });\r\n  };\r\n\r\n  const genExtra = () => (\r\n    <img\r\n      src={process.env.PUBLIC_URL + \"/assets/Icons/AdditionalIcons/trophy.png\"}\r\n    />\r\n  );\r\n\r\n  const items = [\r\n    {\r\n      key: \"1\",\r\n      label: <div className={styles.title}>{t(\"bestExerciseResult\")}</div>,\r\n      children: (\r\n        <>\r\n          {editMode ? (\r\n            <>\r\n              <div className={styles.wrapper}>\r\n                <div>\r\n                  <NumericInput value={weight} onChange={setWeight} />\r\n                  <span>{t(\"kg\")}</span>\r\n                </div>\r\n                <div>\r\n                  <NumericInput value={reps} onChange={setReps} />\r\n                  <span>{t(\"bestResultReps\")}</span>\r\n                </div>\r\n              </div>\r\n              <div className={styles.editBtn}>\r\n                <SettingButton\r\n                  icon={<CheckOutlined />}\r\n                  className={styles.editExercise}\r\n                  onClick={handleSave}\r\n                >\r\n                  <span>{t(\"saveRecord\")}</span>\r\n                </SettingButton>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className={styles.wrapper}>\r\n                <div>\r\n                  {weight} {t(\"kg\")}\r\n                </div>\r\n                <div>\r\n                  {reps} {t(\"bestResultReps\")}\r\n                </div>\r\n              </div>\r\n              <div className={styles.editBtn}>\r\n                <SettingButton\r\n                  icon={<EditOutlined />}\r\n                  className={styles.editExercise}\r\n                  onClick={() => setEditMode(true)}\r\n                >\r\n                  <span>{t(\"updateRecord\")}</span>\r\n                </SettingButton>\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      ),\r\n      extra: genExtra(),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.collapse}>\r\n      {contextHolder}\r\n      <Collapse size=\"large\" items={items} bordered={false} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { ConfigProvider, Divider, message, Table } from \"antd\";\r\nimport { CloseOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  updateDoc,\r\n  writeBatch,\r\n} from \"firebase/firestore\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport {\r\n  Exercise,\r\n  ExerciseTablePropsType,\r\n  ExerciseTableType,\r\n} from \"../../../types/types\";\r\nimport { EmptyBox } from \"../../../components/EmptyBox/EmptyBox\";\r\nimport NumericInput from \"../../../components/NumericInput/NumericInput\";\r\nimport { ResetButton } from \"../../../components/ResetButton/ResetButton\";\r\n\r\nimport styles from \"./ExerciseTable.module.scss\";\r\nimport { TableFooter } from \"./TableFooter/TableFooter\";\r\nimport { BestResult } from \"./BestResult/BestResult\";\r\n\r\nexport const ExerciseTable: React.FC<ExerciseTablePropsType> = ({\r\n  selectedExercise,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [data, setData] = useState<ExerciseTableType[]>([]);\r\n  const [bestResult, setBestResult] = useState<{\r\n    weight: string;\r\n    reps: string;\r\n  } | null>(null);\r\n  const [editWeight, setEditWeight] = useState<string | null>(null);\r\n  const [editReps, setEditReps] = useState<string | null>(null);\r\n  const weightInputRef = useRef<HTMLInputElement | null>(null);\r\n  const repsInputRef = useRef<HTMLInputElement | null>(null);\r\n  const [workoutDate, setWorkoutDate] = useState<string | null>(null);\r\n  const user = getAuth().currentUser;\r\n  const [currentWorkout, setCurrentWorkout] = useState(false);\r\n  const [addRowBtn, setAddRowBtn] = useState(false);\r\n  const [saveBtn, setSaveBtn] = useState(false);\r\n  const [deleteBtn, setDeleteBtn] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (selectedExercise) {\r\n      loadExerciseData();\r\n    } else {\r\n      setData([]);\r\n    }\r\n  }, [selectedExercise]);\r\n\r\n  useEffect(() => {\r\n    if (editReps && repsInputRef.current) {\r\n      repsInputRef.current.focus();\r\n    }\r\n    if (editWeight && weightInputRef.current) {\r\n      weightInputRef.current.focus();\r\n    }\r\n  }, [editReps, editWeight]);\r\n\r\n  const scrollToBottom = () =>\r\n    setTimeout(() => {\r\n      window.scrollTo({\r\n        left: 0,\r\n        top: document.body.scrollHeight,\r\n        behavior: \"smooth\",\r\n      });\r\n    }, 100);\r\n\r\n  const loadExerciseData = async () => {\r\n    if (user && selectedExercise) {\r\n      const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n      const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n      const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n\r\n      try {\r\n        const [docSnapshot, exercisesDoc] = await Promise.all([\r\n          getDoc(setDocRef),\r\n          getDoc(exercisesDocRef),\r\n        ]);\r\n\r\n        if (docSnapshot.exists()) {\r\n          const documentData = docSnapshot.data();\r\n          const workouts = documentData?.workouts || [];\r\n\r\n          if (workouts.length > 0) {\r\n            const latestWorkout = workouts[workouts.length - 1];\r\n            const workoutDate = new Date(latestWorkout.date).toLocaleString();\r\n\r\n            setWorkoutDate(workoutDate);\r\n            const approaches = latestWorkout.approaches || [];\r\n            const loadedData: ExerciseTableType[] = approaches.map(\r\n              (approach: {\r\n                id: string;\r\n                set: number;\r\n                weight: string;\r\n                reps: string;\r\n              }) => ({\r\n                key: approach.id,\r\n                set: approach.set,\r\n                weight: approach.weight,\r\n                reps: approach.reps,\r\n                icon: <CloseOutlined />,\r\n              })\r\n            );\r\n            setData(loadedData);\r\n            scrollToBottom();\r\n          } else {\r\n            setData([]);\r\n            setWorkoutDate(null);\r\n            scrollToBottom();\r\n          }\r\n\r\n          if (exercisesDoc.exists()) {\r\n            const exercisesData = exercisesDoc.data();\r\n            const exercise = exercisesData.exercises.find(\r\n              (ex: { id: string }) => ex.id === selectedExercise.id\r\n            );\r\n            if (exercise) {\r\n              setBestResult(exercise.bestResult);\r\n            }\r\n          }\r\n          setAddRowBtn(true);\r\n          setSaveBtn(true);\r\n          setDeleteBtn(true);\r\n        } else {\r\n          setData([]);\r\n          setWorkoutDate(null);\r\n          scrollToBottom();\r\n          setDeleteBtn(false);\r\n        }\r\n        setAddRowBtn(false);\r\n        setSaveBtn(false);\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveBestResult = async (updatedBestResult: {\r\n    weight: string;\r\n    reps: string;\r\n  }) => {\r\n    if (user && selectedExercise) {\r\n      const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n      try {\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          const updatedExercises = exercisesData.exercises.map(\r\n            (exercise: Exercise) => {\r\n              if (exercise.id === selectedExercise.id) {\r\n                return {\r\n                  ...exercise,\r\n                  bestResult: updatedBestResult,\r\n                };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          await updateDoc(exercisesDocRef, { exercises: updatedExercises });\r\n          setBestResult(updatedBestResult);\r\n        } else {\r\n          messageApi.open({\r\n            type: \"error\",\r\n            content: t(\"noExercisesFound\"),\r\n          });\r\n        }\r\n      } catch (error) {\r\n        messageApi.open({\r\n          type: \"error\",\r\n          content: t(\"errorSavingBestResult\"),\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveExerciseData = async () => {\r\n    if (user && selectedExercise) {\r\n      const validData = data.filter((row) => row.reps && row.weight);\r\n\r\n      if (validData.length === 0) {\r\n        messageApi.open({\r\n          type: \"error\",\r\n          content: t(\"noDataToSave\"),\r\n        });\r\n        return;\r\n      }\r\n      const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n      const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n\r\n      try {\r\n        const batch = writeBatch(getFirestore());\r\n        const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n\r\n        const setDoc = await getDoc(setDocRef);\r\n        const setData = setDoc.exists() ? setDoc.data() : { workouts: [] };\r\n\r\n        const newWorkout = {\r\n          id: uuidv4(),\r\n          date: new Date().toISOString(),\r\n          approaches: data.map((row, index) => ({\r\n            id: uuidv4(),\r\n            set: index + 1,\r\n            reps: row.reps,\r\n            weight: row.weight,\r\n          })),\r\n        };\r\n\r\n        setData.workouts.push(newWorkout);\r\n        batch.set(setDocRef, setData);\r\n\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          const updatedExercises = exercisesData.exercises.map(\r\n            (exercise: Exercise) => {\r\n              if (exercise.id === selectedExercise.id) {\r\n                return {\r\n                  ...exercise,\r\n                };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          batch.update(exercisesDocRef, { exercises: updatedExercises });\r\n        }\r\n\r\n        await batch.commit();\r\n        setAddRowBtn(false);\r\n        setSaveBtn(false);\r\n        messageApi.open({\r\n          type: \"success\",\r\n          content: t(\"exerciseDataSaved\"),\r\n        });\r\n      } catch (error) {\r\n        messageApi.open({\r\n          type: \"error\",\r\n          content: t(\"errorSavingExerciseData\"),\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateWeight = (key: string, value: string) => {\r\n    const newData = data.map((row) => {\r\n      if (row.key === key) {\r\n        return { ...row, weight: value };\r\n      }\r\n      return row;\r\n    });\r\n    setData(newData);\r\n  };\r\n\r\n  const updateReps = (key: string, value: string) => {\r\n    const newData = data.map((row) => {\r\n      if (row.key === key) {\r\n        return { ...row, reps: value };\r\n      }\r\n      return row;\r\n    });\r\n    setData(newData);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: `${t(\"set\")}`,\r\n      dataIndex: \"set\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: `${t(\"weight\")}`,\r\n      dataIndex: \"weight\",\r\n      width: \"30%\",\r\n      render: (text: string, record: ExerciseTableType) =>\r\n        editWeight === record.key ? (\r\n          <NumericInput\r\n            ref={weightInputRef}\r\n            value={record.weight}\r\n            onChange={(value) => updateWeight(record.key, value)}\r\n            onBlur={() => setEditWeight(null)}\r\n          />\r\n        ) : (\r\n          <div\r\n            onClick={() => setEditWeight(record.key)}\r\n            className={styles.editableDiv}\r\n          >\r\n            {record.weight || t(\"clickToEdit\")}\r\n          </div>\r\n        ),\r\n    },\r\n    {\r\n      title: `${t(\"reps\")}`,\r\n      dataIndex: \"reps\",\r\n      width: \"25%\",\r\n      render: (text: string, record: ExerciseTableType, index: number) =>\r\n        editReps === record.key ? (\r\n          <NumericInput\r\n            ref={repsInputRef}\r\n            value={record.reps}\r\n            onChange={(value) => updateReps(record.key, value)}\r\n            onBlur={() => setEditReps(null)}\r\n          />\r\n        ) : (\r\n          <div className={styles.repsAndDelete}>\r\n            <div\r\n              onClick={() => setEditReps(record.key)}\r\n              className={styles.editableDiv}\r\n            >\r\n              {record.reps || t(\"clickToEdit\")}\r\n            </div>\r\n          </div>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  const handleWorkoutDateChange = (date: string) => {\r\n    const workoutDate = new Date(date);\r\n    const formattedDate = workoutDate.toLocaleString();\r\n    if (!isNaN(workoutDate.getTime())) {\r\n      setWorkoutDate(formattedDate);\r\n    } else {\r\n      console.error(\"Invalid date:\", date);\r\n    }\r\n  };\r\n\r\n  const deleteWorkoutByDate = async () => {\r\n    if (!workoutDate || !selectedExercise || !user) return;\r\n\r\n    const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n    const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n\r\n    try {\r\n      const docSnapshot = await getDoc(setDocRef);\r\n      if (docSnapshot.exists()) {\r\n        const documentData = docSnapshot.data();\r\n        const workouts = documentData.workouts || [];\r\n\r\n        const filteredWorkouts = workouts.filter(\r\n          (workout: any) =>\r\n            new Date(workout.date).toLocaleString() !== workoutDate\r\n        );\r\n\r\n        if (filteredWorkouts.length === workouts.length) {\r\n          messageApi.open({\r\n            type: \"error\",\r\n            content: t(\"workoutNotFound\"),\r\n          });\r\n          return;\r\n        }\r\n\r\n        await updateDoc(setDocRef, { workouts: filteredWorkouts });\r\n\r\n        setData([]);\r\n        setWorkoutDate(null);\r\n        messageApi.open({\r\n          type: \"success\",\r\n          content: t(\"workoutDeleted\"),\r\n        });\r\n      } else {\r\n        messageApi.open({\r\n          type: \"error\",\r\n          content: t(\"errorDeletingWorkout\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      messageApi.open({\r\n        type: \"error\",\r\n        content: t(\"errorDeletingWorkout\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Divider style={{ backgroundColor: \"gray\" }} />\r\n      <div className={styles.tableTitle}>\r\n        <SubTitle\r\n          children={selectedExercise?.name || t(\"noExerciseSelected\")}\r\n          className={styles.subtitle}\r\n        />\r\n      </div>\r\n      <ConfigProvider\r\n        theme={{\r\n          components: {\r\n            Table: {\r\n              headerBg: \"#1A1A1A\",\r\n              headerColor: \"#ffffff\",\r\n              cellFontSize: 18,\r\n              colorBgContainer: \"#282828\",\r\n              colorText: \"#ffffff\",\r\n              borderColor: \"#535353\",\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        {selectedExercise ? (\r\n          <>\r\n            <BestResult bestResult={bestResult} onSave={saveBestResult} />\r\n            {currentWorkout ? (\r\n              <div className={styles.dateAndDelete}>\r\n                {t(\"workoutDate\")}: {new Date().toLocaleDateString()}\r\n              </div>\r\n            ) : (\r\n              <div className={styles.dateAndDelete}>\r\n                {t(\"workoutDate\")}: {workoutDate ? workoutDate : \". . .\"}\r\n              </div>\r\n            )}\r\n            <Table\r\n              rowKey={(record) => record.key}\r\n              columns={columns}\r\n              dataSource={data}\r\n              pagination={false}\r\n              className={styles.table}\r\n              locale={{ emptyText: <EmptyBox /> }}\r\n            />\r\n            {deleteBtn && (\r\n              <ResetButton\r\n                icon={<DeleteOutlined />}\r\n                onClick={deleteWorkoutByDate}\r\n              >\r\n                {t(\"deleteWorkout\")}\r\n              </ResetButton>\r\n            )}\r\n            <TableFooter\r\n              selectedExercise={selectedExercise}\r\n              data={data}\r\n              setData={setData}\r\n              setEditWeight={setEditWeight}\r\n              saveExerciseData={saveExerciseData}\r\n              onWorkoutDateChange={handleWorkoutDateChange}\r\n              setCurrentWorkout={setCurrentWorkout}\r\n              addRowBtn={addRowBtn}\r\n              setAddRowBtn={setAddRowBtn}\r\n              saveBtn={saveBtn}\r\n              setSaveBtn={setSaveBtn}\r\n              setDeleteBtn={setDeleteBtn}\r\n            />\r\n          </>\r\n        ) : (\r\n          <Table\r\n            columns={columns}\r\n            className={styles.table}\r\n            locale={{ emptyText: <EmptyBox /> }}\r\n          />\r\n        )}\r\n      </ConfigProvider>\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"addExercise\":\"AddExercise_addExercise__7FNxa\",\"button\":\"AddExercise_button__mkO2c\"};","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport { message } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { CustomButton } from \"../../../components/CustomButton/CustomButton\";\r\nimport { CustomInput } from \"../../../components/CustomInput/CustomInput\";\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport { IAddExercise } from \"../../../types/types\";\r\n\r\nimport styles from \"./AddExercise.module.scss\";\r\n\r\nexport const AddExercise: React.FC<IAddExercise> = ({\r\n  onAddExercise,\r\n  category,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [exerciseName, setExerciseName] = useState(\"\");\r\n\r\n  const handleAddExercise = async () => {\r\n    if (!exerciseName) {\r\n      messageApi.open({\r\n        type: \"error\",\r\n        content: t(\"typeExercise\"),\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      const user = getAuth().currentUser;\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercise = {\r\n          id: uuidv4(),\r\n          name: exerciseName,\r\n          category: category,\r\n          bestResult: {\r\n            weight: \"0\",\r\n            reps: \"0\",\r\n          },\r\n          isFavorite: false,\r\n        };\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n        const docSnapshot = await getDoc(exercisesDocRef);\r\n\r\n        if (docSnapshot.exists()) {\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: [...docSnapshot.data().exercises, exercise],\r\n          });\r\n        } else {\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: [exercise],\r\n          });\r\n        }\r\n        messageApi.open({\r\n          type: \"success\",\r\n          content: t(\"exerciseAdded\"),\r\n        });\r\n        setExerciseName(\"\");\r\n        onAddExercise();\r\n      }\r\n    } catch (error) {\r\n      messageApi.open({\r\n        type: \"error\",\r\n        content: t(\"errorAddingExercise\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <SubTitle>{t(\"addAnExercise\")}</SubTitle>\r\n      <div className={styles.addExercise}>\r\n        <CustomInput\r\n          value={exerciseName}\r\n          onChange={(value: string) => setExerciseName(value)}\r\n          text={t(\"exerciseName\")}\r\n          placeholder={t(\"typeExercise\")}\r\n        />\r\n        <CustomButton\r\n          className={styles.button}\r\n          icon={<PlusOutlined />}\r\n          onClick={handleAddExercise}\r\n        >\r\n          {t(\"addExerciseBtn\")}\r\n        </CustomButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Exercises_title__ThgWQ\",\"description\":\"Exercises_description__cykz7\",\"cards\":\"Exercises_cards__+xw7k\"};","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"CardOptions_options__F-aCP\",\"star\":\"CardOptions_star__tS7rd\",\"active\":\"CardOptions_active__E3ut+\",\"editExercise\":\"CardOptions_editExercise__JcxiY\"};","import React, { useState } from \"react\";\r\nimport { EditOutlined, StarFilled } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { message } from \"antd\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { CardOptionsPropsType } from \"../../../../../types/types\";\r\nimport { SettingButton } from \"../../../../../components/SettingButton/SettingButton\";\r\n\r\nimport styles from \"./CardOptions.module.scss\";\r\n\r\nexport const CardOptions: React.FC<CardOptionsPropsType> = ({\r\n  item,\r\n  category,\r\n  setData,\r\n  setCurrentEditingId,\r\n  setNewName,\r\n  setEditMode,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [isActive, setIsActive] = useState<boolean>(false);\r\n\r\n  const toggleFavorite = async (exerciseId: string, currentStatus: boolean) => {\r\n    try {\r\n      const user = getAuth().currentUser;\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          let updatedExercises = exercisesData.exercises.map(\r\n            (exercise: { id: string }) => {\r\n              if (exercise.id === exerciseId) {\r\n                return { ...exercise, isFavorite: !currentStatus };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: updatedExercises,\r\n          });\r\n\r\n          const translatedCategory = t(`categories.${category}`);\r\n          const filteredData = updatedExercises.filter(\r\n            (exercise: { category: string }) =>\r\n              t(`categories.${exercise.category}`) === translatedCategory\r\n          );\r\n          setData(filteredData);\r\n        }\r\n\r\n        if (!currentStatus) {\r\n          messageApi.open({\r\n            type: \"success\",\r\n            content: t(\"addedToFavorite\"),\r\n          });\r\n        } else {\r\n          messageApi.open({\r\n            type: \"success\",\r\n            content: t(\"removedFromFavorite\"),\r\n          });\r\n        }\r\n        setIsActive(!isActive);\r\n      }\r\n    } catch (error) {\r\n      messageApi.open({\r\n        type: \"error\",\r\n        content: t(\"errorUpdatingFavorite\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (exerciseId: string, currentName: string) => {\r\n    setCurrentEditingId(exerciseId);\r\n    setNewName(currentName);\r\n    setEditMode(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.options}>\r\n      {contextHolder}\r\n      <SettingButton\r\n        icon={<StarFilled />}\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          toggleFavorite(item.id, item.isFavorite);\r\n        }}\r\n        className={`${styles.star} ${item.isFavorite ? styles.active : \"\"}`}\r\n      >\r\n        <span>{t(\"favorite\")}</span>\r\n      </SettingButton>\r\n      <SettingButton\r\n        icon={<EditOutlined />}\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          handleEditClick(item.id, item.name);\r\n        }}\r\n        className={styles.editExercise}\r\n      >\r\n        <span>{t(\"editName\")}</span>\r\n      </SettingButton>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"deleteIconContainer\":\"DeleteIcon_deleteIconContainer__IWqYi\",\"exerciseNumber\":\"DeleteIcon_exerciseNumber__Q9Zs7\",\"deleteIcon\":\"DeleteIcon_deleteIcon__ntbKM\",\"confirm\":\"DeleteIcon_confirm__0yMiT\",\"deleteSave\":\"DeleteIcon_deleteSave__joWfR\"};","import React from \"react\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  deleteDoc,\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { message } from \"antd\";\r\n\r\nimport { CustomModal } from \"../../../../../../components/CustomModal/CustomModal\";\r\nimport { ResetButton } from \"../../../../../../components/ResetButton/ResetButton\";\r\nimport { ModalDeletePropsType, Exercise } from \"../../../../../../types/types\";\r\n\r\nimport styles from \"../DeleteIcon.module.scss\";\r\n\r\nexport const ModalDelete: React.FC<ModalDeletePropsType> = ({\r\n  setLoading,\r\n  setIsModalOpen,\r\n  category,\r\n  setData,\r\n  isModalOpen,\r\n  handleCancel,\r\n  item,\r\n  setConfirm,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n\r\n  const handleDeleteCard = async (exerciseId: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const user = getAuth().currentUser;\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n        const setsCollectionRef = doc(getFirestore(), \"sets\", exerciseId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n        await deleteDoc(setsCollectionRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          let updatedExercises: Exercise[] = [];\r\n\r\n          if (exercisesData && exercisesData.exercises) {\r\n            updatedExercises = exercisesData.exercises.filter(\r\n              (exercise: Exercise) => exercise.id !== exerciseId\r\n            );\r\n\r\n            await updateDoc(exercisesDocRef, {\r\n              exercises: updatedExercises,\r\n            });\r\n\r\n            const filteredData = updatedExercises.filter(\r\n              (exercise: Exercise) =>\r\n                t(`categories.${exercise.category}`) ===\r\n                t(`categories.${category}`)\r\n            );\r\n            setData(filteredData);\r\n            localStorage.setItem(\"exercisesData\", JSON.stringify(filteredData));\r\n          }\r\n        }\r\n        messageApi.open({\r\n          type: \"success\",\r\n          content: t(\"exerciseDeleted\"),\r\n        });\r\n      }\r\n      setConfirm(false);\r\n      setIsModalOpen(false);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      messageApi.open({\r\n        type: \"error\",\r\n        content: t(\"errorDeletingExercise\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CustomModal\r\n      open={isModalOpen}\r\n      onCancel={(e) => {\r\n        handleCancel(e);\r\n        setIsModalOpen(false);\r\n      }}\r\n      footer={false}\r\n    >\r\n      {contextHolder}\r\n      <p className={styles.confirm}>{t(\"confirmDeletingExercise\")}</p>\r\n      <div className={styles.deleteSave}>\r\n        <ResetButton\r\n          children={t(\"delete\")}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleDeleteCard(item.id);\r\n          }}\r\n          icon={<DeleteOutlined />}\r\n        />\r\n      </div>\r\n    </CustomModal>\r\n  );\r\n};\r\n","import { CloseOutlined } from \"@ant-design/icons\";\r\nimport { Tooltip } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { DeleteIconPropsType } from \"../../../../../types/types\";\r\n\r\nimport { ModalDelete } from \"./ModalDelete/ModalDelete\";\r\nimport styles from \"./DeleteIcon.module.scss\";\r\n\r\nexport const DeleteIcon: React.FC<DeleteIconPropsType> = ({\r\n  setLoading,\r\n  setIsModalOpen,\r\n  category,\r\n  setData,\r\n  isModalOpen,\r\n  handleCancel,\r\n  item,\r\n  index,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [confirm, setConfirm] = useState<boolean>(false);\r\n\r\n  const handleConfirm = () => {\r\n    setConfirm(true);\r\n    setIsModalOpen(true);\r\n  };\r\n  return (\r\n    <>\r\n      <div className={styles.deleteIconContainer}>\r\n        <div className={styles.exerciseNumber}>{index + 1}.</div>\r\n        <Tooltip title={t(\"deleteExercise\")}>\r\n          <CloseOutlined\r\n            className={styles.deleteIcon}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleConfirm();\r\n            }}\r\n          />\r\n        </Tooltip>\r\n      </div>\r\n      {confirm && (\r\n        <ModalDelete\r\n          setLoading={setLoading}\r\n          category={category}\r\n          setData={setData}\r\n          isModalOpen={isModalOpen}\r\n          setIsModalOpen={setIsModalOpen}\r\n          handleCancel={handleCancel}\r\n          item={item}\r\n          setConfirm={setConfirm}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"editInput\":\"EditInput_editInput__CnmRa\"};","import React, { useEffect, useRef } from \"react\";\r\nimport { message } from \"antd\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { EditInputPropsType, Exercise } from \"../../../../../types/types\";\r\n\r\nimport styles from \"./EditInput.module.scss\";\r\n\r\nexport const EditInput: React.FC<EditInputPropsType> = ({\r\n  newName,\r\n  editMode,\r\n  currentEditingId,\r\n  setCurrentEditingId,\r\n  category,\r\n  setData,\r\n  setEditMode,\r\n  setNewName,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (editMode && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editMode]);\r\n\r\n  const changeExerciseName = async (exerciseId: string, newName: string) => {\r\n    try {\r\n      const db = getFirestore();\r\n      const auth = getAuth();\r\n      const user = auth.currentUser;\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(db, \"exercises\", userId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          let updatedExercises = exercisesData.exercises.map(\r\n            (exercise: { id: string; name: string }) => {\r\n              if (exercise.id === exerciseId) {\r\n                return { ...exercise, name: newName };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: updatedExercises,\r\n          });\r\n          const filteredData = updatedExercises\r\n            .filter(\r\n              (exercise: { category: string }) =>\r\n                t(`categories.${exercise.category}`) ===\r\n                t(`categories.${category}`)\r\n            )\r\n            .map((exercise: Exercise) => ({\r\n              id: exercise.id,\r\n              name: t(exercise.name),\r\n              category: exercise.category,\r\n              bestResult: `${t(\"lastSet\")}: ${exercise.bestResult}`,\r\n              isFavorite: exercise.isFavorite,\r\n            }));\r\n          localStorage.setItem(\"exercisesData\", JSON.stringify(filteredData));\r\n          setData(filteredData);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      messageApi.open({\r\n        type: \"error\",\r\n        content: t(\"nameChangeFailed\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEditKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key === \"Enter\" && currentEditingId) {\r\n      changeExerciseName(currentEditingId, newName);\r\n      setEditMode(false);\r\n      setCurrentEditingId(null);\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (currentEditingId) {\r\n      changeExerciseName(currentEditingId, newName);\r\n      setEditMode(false);\r\n      setCurrentEditingId(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <input\r\n        value={newName}\r\n        className={styles.editInput}\r\n        onChange={(e) => setNewName(e.target.value)}\r\n        onKeyDown={handleEditKeyDown}\r\n        onBlur={handleBlur}\r\n        ref={inputRef}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cardItem\":\"ExerciseCard_cardItem__2AKct\",\"active\":\"ExerciseCard_active__7n1-4\",\"exerciseContainer\":\"ExerciseCard_exerciseContainer__nXbmq\",\"exerciseName\":\"ExerciseCard_exerciseName__MCYS-\"};","import React, { useState } from \"react\";\r\n\r\nimport { ExerciseCardPropsType } from \"../../../../types/types\";\r\n\r\nimport { CardOptions } from \"./CardOptions/CardOptions\";\r\nimport { DeleteIcon } from \"./DeleteIcon/DeleteIcon\";\r\nimport { EditInput } from \"./EditInput/EditInput\";\r\nimport styles from \"./ExerciseCard.module.scss\";\r\n\r\nexport const ExerciseCard: React.FC<ExerciseCardPropsType> = ({\r\n  item,\r\n  onSelectExercise,\r\n  category,\r\n  setData,\r\n  setLoading,\r\n  activeCardId,\r\n  setActiveCardId,\r\n  index,\r\n}) => {\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [newName, setNewName] = useState<string>(\"\");\r\n  const [currentEditingId, setCurrentEditingId] = useState<string | null>(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const handleCancel = (e: any) => {\r\n    e.stopPropagation();\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleCardClick = (item: any) => {\r\n    setActiveCardId(item.id);\r\n    onSelectExercise(item);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.cardItem} ${\r\n        activeCardId === item.id ? styles.active : \"\"\r\n      }`}\r\n      onClick={() => handleCardClick(item)}\r\n    >\r\n      <DeleteIcon\r\n        setLoading={setLoading}\r\n        setIsModalOpen={setIsModalOpen}\r\n        category={category}\r\n        setData={setData}\r\n        isModalOpen={isModalOpen}\r\n        handleCancel={handleCancel}\r\n        item={item}\r\n        index={index}\r\n      />\r\n      {currentEditingId === item.id && editMode ? (\r\n        <EditInput\r\n          newName={newName}\r\n          editMode={editMode}\r\n          currentEditingId={currentEditingId}\r\n          setCurrentEditingId={setCurrentEditingId}\r\n          category={category}\r\n          setData={setData}\r\n          setEditMode={setEditMode}\r\n          setNewName={setNewName}\r\n        />\r\n      ) : (\r\n        <div className={styles.exerciseContainer}>\r\n          <span className={styles.exerciseName}>{item.name}</span>\r\n        </div>\r\n      )}\r\n      <CardOptions\r\n        item={item}\r\n        category={category}\r\n        setData={setData}\r\n        setCurrentEditingId={setCurrentEditingId}\r\n        setNewName={setNewName}\r\n        setEditMode={setEditMode}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { message } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport { Exercise, ExercisesProps } from \"../../../types/types\";\r\nimport { Loader } from \"../../../components/Loader/Loader\";\r\nimport { EmptyBox } from \"../../../components/EmptyBox/EmptyBox\";\r\n\r\nimport styles from \"./Exercises.module.scss\";\r\nimport { ExerciseCard } from \"./ExerciseCard/ExerciseCard\";\r\n\r\nexport const Exercises: React.FC<ExercisesProps> = ({\r\n  category,\r\n  updateTrigger,\r\n  onSelectExercise,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [data, setData] = useState<Exercise[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [activeCardId, setActiveCardId] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(\r\n      localStorage.getItem(\"exercisesData\") || \"[]\"\r\n    );\r\n    if (storedData.length > 0) {\r\n      setData(storedData);\r\n      setLoading(false);\r\n    }\r\n  }, [category]);\r\n\r\n  useEffect(() => {\r\n    const fetchExercises = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const user = getAuth().currentUser;\r\n        if (user) {\r\n          const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n          const exercisesDoc = await getDoc(exercisesDocRef);\r\n          if (exercisesDoc.exists()) {\r\n            const exercisesData = exercisesDoc.data();\r\n            const filteredData = exercisesData.exercises\r\n              .filter(\r\n                (exercise: Exercise) =>\r\n                  t(`categories.${exercise.category}`) ===\r\n                  t(`categories.${category}`)\r\n              )\r\n              .map((exercise: Exercise) => ({\r\n                id: exercise.id,\r\n                name: t(exercise.name),\r\n                category: exercise.category,\r\n                bestResult: exercise.bestResult,\r\n                isFavorite: exercise.isFavorite,\r\n              }));\r\n            localStorage.setItem(\"exercisesData\", JSON.stringify(filteredData));\r\n            setData(filteredData);\r\n          }\r\n        }\r\n        setLoading(false);\r\n      } catch (error) {\r\n        messageApi.open({\r\n          type: \"error\",\r\n          content: t(\"errorFetchingExercises\"),\r\n        });\r\n      }\r\n    };\r\n    fetchExercises();\r\n  }, [category, t, updateTrigger]);\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <SubTitle children={t(\"exercises\")} className={styles.title} />\r\n          <div className={styles.description}>{t(\"chooseExercise\")}</div>\r\n          <div className={styles.cards}>\r\n            {data.length ? (\r\n              data.map((item: Exercise, index) => (\r\n                <ExerciseCard\r\n                  key={item.id}\r\n                  item={item}\r\n                  onSelectExercise={onSelectExercise}\r\n                  category={category}\r\n                  setData={setData}\r\n                  setLoading={setLoading}\r\n                  activeCardId={activeCardId}\r\n                  setActiveCardId={setActiveCardId}\r\n                  index={index}\r\n                />\r\n              ))\r\n            ) : (\r\n              <EmptyBox />\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { DescriptionTitle } from \"../../components/DescriptionTitle/DescriptionTitle\";\r\nimport { PageWrapper } from \"../../components/PageWrapper/PageWrapper\";\r\nimport { Exercise, LocationState } from \"../../types/types\";\r\n\r\nimport { ExerciseTable } from \"./ExerciseTable/ExerciseTable\";\r\nimport { AddExercise } from \"./AddExercise/AddExercise\";\r\nimport { Exercises } from \"./Exercises/Exercises\";\r\n\r\nconst Workout: React.FC = () => {\r\n  const location = useLocation();\r\n  const state = location.state as LocationState;\r\n  const [updateTrigger, setUpdateTrigger] = useState(0);\r\n  const [selectedExercise, setSelectedExercise] = useState<Exercise | null>(\r\n    null\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n  }, []);\r\n\r\n  const handleUpdateExercises = () => setUpdateTrigger((prev) => prev + 1);\r\n\r\n  const handleSelectExercise = (exercise: Exercise) =>\r\n    setSelectedExercise(exercise);\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div style={{ minHeight: \"100vh\" }}>\r\n        <DescriptionTitle text={state.title} textAlign=\"center\" />\r\n        <AddExercise\r\n          category={state?.title}\r\n          onAddExercise={handleUpdateExercises}\r\n        />\r\n        <Exercises\r\n          category={state?.title}\r\n          updateTrigger={updateTrigger}\r\n          onSelectExercise={handleSelectExercise}\r\n        />\r\n        <ExerciseTable selectedExercise={selectedExercise} />\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default Workout;\r\n"],"names":["CustomInput","_ref","name","text","type","placeholder","isRequired","className","onChange","value","t","useTranslation","_jsx","styles","children","Form","Item","label","rules","required","Input","concat","allowClear","e","target","autoComplete","CustomModal","open","onCancel","footer","ConfigProvider","theme","components","Modal","contentBg","colorIcon","colorIconHover","style","marginTop","DescriptionTitle","textAlign","ref","controls","useAnimatedInView","motion","h2","descriptionTitle","initial","animate","variants","animation","container","maxWidth","margin","PageWrapper","ResetButton","onClick","icon","Button","SettingButton","SubTitle","p","threshold","arguments","length","undefined","triggerOnce","animationVariants","useAnimation","inView","useInView","useEffect","start","hidden","opacity","visible","transition","duration","EmptyBox","Empty","image","PRESENTED_IMAGE_SIMPLE","description","color","NumericInput","onBlur","replace","startsWith","substring","test","inputMode","pattern","forwardRef","TableFooter","selectedExercise","data","setData","setEditWeight","saveExerciseData","onWorkoutDateChange","setCurrentWorkout","addRowBtn","setAddRowBtn","saveBtn","setSaveBtn","setDeleteBtn","workouts","setWorkouts","useState","workoutDates","setWorkoutDates","currentWorkoutIndex","setCurrentWorkoutIndex","hideButtons","setHideButtons","async","setsCollectionRef","collection","getFirestore","setDocRef","doc","id","docSnapshot","getDoc","exists","Array","isArray","every","workout","approaches","map","date","lastIndex","console","error","loadWorkouts","isLastWorkout","_jsxs","_Fragment","addRow","newData","nextSet","set","newRow","key","toString","weight","reps","CloseOutlined","push","PlusOutlined","CustomButton","CheckOutlined","showPreviousWorkout","newIndex","LeftOutlined","showNextWorkout","RightOutlined","startNewTraining","BestResult","bestResult","onSave","messageApi","contextHolder","message","useMessage","editMode","setEditMode","setWeight","setReps","items","title","wrapper","editBtn","editExercise","handleSave","content","EditOutlined","extra","src","process","collapse","Collapse","size","bordered","ExerciseTable","setBestResult","editWeight","editReps","setEditReps","weightInputRef","useRef","repsInputRef","workoutDate","setWorkoutDate","user","getAuth","currentUser","currentWorkout","deleteBtn","loadExerciseData","current","focus","scrollToBottom","setTimeout","window","scrollTo","left","top","document","body","scrollHeight","behavior","exercisesDocRef","uid","exercisesDoc","Promise","all","documentData","latestWorkout","Date","toLocaleString","loadedData","approach","exercise","exercises","find","ex","alert","columns","dataIndex","width","render","record","updateWeight","row","index","updateReps","Divider","backgroundColor","Table","headerBg","headerColor","cellFontSize","colorBgContainer","colorText","borderColor","updatedExercises","updatedBestResult","updateDoc","toLocaleDateString","rowKey","dataSource","pagination","locale","emptyText","DeleteOutlined","filteredWorkouts","filter","batch","writeBatch","setDoc","newWorkout","uuidv4","toISOString","update","commit","formattedDate","isNaN","getTime","AddExercise","onAddExercise","category","exerciseName","setExerciseName","userId","isFavorite","CardOptions","item","setCurrentEditingId","setNewName","isActive","setIsActive","StarFilled","stopPropagation","exerciseId","currentStatus","translatedCategory","filteredData","toggleFavorite","handleEditClick","currentName","ModalDelete","setLoading","setIsModalOpen","isModalOpen","handleCancel","setConfirm","deleteDoc","exercisesData","localStorage","setItem","JSON","stringify","handleDeleteCard","DeleteIcon","confirm","Tooltip","EditInput","newName","currentEditingId","inputRef","changeExerciseName","db","onKeyDown","event","handleBlur","ExerciseCard","onSelectExercise","activeCardId","setActiveCardId","handleCardClick","Exercises","updateTrigger","loading","storedData","parse","getItem","fetchExercises","Loader","Workout","state","useLocation","setUpdateTrigger","setSelectedExercise","scroll","minHeight","handleUpdateExercises","prev"],"sourceRoot":""}