{"version":3,"file":"static/js/626.9fbc2190.chunk.js","mappings":"mKACA,QAA+B,kCAA/B,EAA8E,gCAA9E,EAA2H,gC,aCOpH,MAAMA,EAA0CC,IAShD,IATiD,KACtDC,EAAI,KACJC,EAAI,KACJC,EAAI,YACJC,EAAW,WACXC,GAAa,EAAI,UACjBC,EAAS,SACTC,EAAQ,MACRC,GACDR,EACC,MAAM,EAAES,IAAMC,EAAAA,EAAAA,MASd,OACEC,EAAAA,EAAAA,KAAA,OAAKL,UAAWM,EAAoBC,UAClCF,EAAAA,EAAAA,KAACG,EAAAA,EAAKC,KAAI,CACRC,OAAOL,EAAAA,EAAAA,KAAA,QAAML,UAAWM,EAAkBC,SAAEJ,EAAEP,KAC9CD,KAAMA,EACNgB,MAAO,CAAC,CAAEC,SAAUb,IAAcQ,UAElCF,EAAAA,EAAAA,KAACQ,EAAAA,EAAK,CACJhB,KAAMA,EACNC,YAAaA,EACbE,UAAS,GAAAc,OAAKR,EAAiB,KAAAQ,OAAId,GACnCe,YAAU,EACVd,SAnBce,IACpB,MAAM,MAAEd,GAAUc,EAAEC,OAChBhB,GACFA,EAASC,EACX,EAgBMA,MAAOA,EACPgB,aAAa,WAGb,C,6ECvCH,MAAMC,EAA0CzB,IAMhD,IANiD,KACtD0B,EAAI,SACJC,EAAQ,OACRC,EAAS,KAAI,SACbf,EAAQ,UACRP,GACDN,EAaC,OAZA6B,EAAAA,EAAAA,YAAU,KAENC,SAASC,KAAKC,MAAMC,SADlBP,EAC6B,SAEA,OAG1B,KACLI,SAASC,KAAKC,MAAMC,SAAW,MAAM,IAEtC,CAACP,KAGFf,EAAAA,EAAAA,KAACuB,EAAAA,GAAc,CACbC,MAAO,CACLC,WAAY,CACVC,MAAO,CACLC,UAAW,UACXC,UAAW,YACXC,eAAgB,UAGpB3B,UAEFF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAK,CACJX,KAAMA,EACNC,SAAUA,EACVC,OAAQA,EACRI,MAAO,CAAES,UAAW,QACpBnC,UAAWA,EAAUO,SAEpBA,KAEY,C,oEC5CrB,SAAgB,iBAAmB,2CAA2C,MAAQ,gCAAgC,OAAS,iCAAiC,IAAM,+B,aCO/J,MAAM6B,EAAgD1C,IAItD,IAJuD,KAC5DE,EAAI,UACJyC,EAAY,QAAO,UACnBrC,GACDN,EACC,MAAM,EAAES,IAAMC,EAAAA,EAAAA,OACR,IAAEkC,EAAG,SAAEC,IAAaC,EAAAA,EAAAA,KAE1B,OACEnC,EAAAA,EAAAA,KAACoC,EAAAA,EAAOC,GAAE,CACRJ,IAAKA,EACLtC,UAAS,GAAAc,OAAKR,EAAOqC,iBAAgB,KAAA7B,OAAIR,EAAO+B,GAAU,KAAAvB,OAAId,GAC9D4C,QAAQ,SACRC,QAASN,EACTO,SAAUC,EAAAA,EAAUxC,SAEnBJ,EAAEP,IACO,C,uDCrBhB,MAAMoD,EAAiC,CACrCC,SAAU,SACVC,OAAQ,UAGGC,EAA0CzD,IAAmB,IAAlB,SAAEa,GAAUb,EAClE,OAAOW,EAAAA,EAAAA,KAAA,OAAKqB,MAAOsB,EAAUzC,SAAEA,GAAe,C,wDCThD,QAAwB,2B,aCMjB,MAAM6C,EAAsC1D,IAI5C,IAJ6C,QAClD2D,EAAO,SACP9C,EAAQ,KACR+C,GACD5D,EACC,OACEW,EAAAA,EAAAA,KAACkD,EAAAA,GAAM,CAACvD,UAAWM,EAAc+C,QAASA,EAASC,KAAMA,EAAK/C,SAC3DA,GACM,C,wDCdb,QAAsB,2B,aCWf,MAAMiD,EAAkD9D,IAKxD,IALyD,QAC9D2D,EAAO,KACPC,EAAI,SACJ/C,EAAQ,UACRP,GACDN,EACC,OACEW,EAAAA,EAAAA,KAACkD,EAAAA,GAAM,CACLF,QAASA,EACTC,KAAMA,EACNtD,UAAS,GAAAc,OAAKR,EAAU,KAAAQ,OAAId,GAAYO,SAEvCA,GACM,C,kECxBb,QAA2B,2B,aCOpB,MAAMkD,EAAmC/D,IAA8B,IAA7B,SAAEa,EAAQ,UAAEP,GAAWN,EACtE,MAAM,IAAE4C,EAAG,SAAEC,IAAaC,EAAAA,EAAAA,KAE1B,OACEnC,EAAAA,EAAAA,KAACoC,EAAAA,EAAOiB,EAAC,CACPpB,IAAKA,EACLtC,UAAS,GAAAc,OAAKR,EAAe,KAAAQ,OAAId,GACjC4C,QAAQ,SACRC,QAASN,EACTO,SAAUC,EAAAA,EAAUxC,SAEnBA,GACQ,C,4EChBR,MAAMiC,EAAoB,WAI3B,IAHJmB,EAAiBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACpBG,EAAoBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACpBI,EAA4BJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAE5B,MAAMvB,GAAW0B,EAAAA,EAAAA,MACV3B,EAAK4B,IAAUC,EAAAA,EAAAA,IAAU,CAAER,YAAWI,gBAU7C,OARAxC,EAAAA,EAAAA,YAAU,KACJ2C,EACF3B,EAAS6B,MAAM,WAEf7B,EAAS6B,MAAM,SACjB,GACC,CAAC7B,EAAU2B,IAEP,CAAE5B,MAAKC,WAAUyB,oBAC1B,EAEajB,EAAY,CACvBsB,OAAQ,CAAEC,QAAS,GACnBC,QAAS,CAAED,QAAS,EAAGE,WAAY,CAAEC,SAAU,I,mNCrB1C,MAAMC,EAAqBA,KAChC,MAAM,EAAEvE,IAAMC,EAAAA,EAAAA,MAEd,OACEC,EAAAA,EAAAA,KAACsE,EAAAA,EAAK,CACJC,MAAOD,EAAAA,EAAME,uBACbC,aAAazE,EAAAA,EAAAA,KAAA,QAAMqB,MAAO,CAAEqD,MAAO,WAAYxE,SAAEJ,EAAE,aACnD,ECVN,EAAwB,4BCKlB6E,EAGFA,CAAAtF,EAA8B4C,KAAS,IAAtC,MAAEpC,EAAK,SAAED,EAAQ,OAAEgF,GAAQvF,EAc9B,OACEW,EAAAA,EAAAA,KAAA,SACEiC,IAAKA,EACLpC,MAAOA,EACPD,SAjBkBe,IACpB,IAAId,EAAQc,EAAEC,OAAOf,MACrBA,EAAQA,EAAMgF,QAAQ,IAAK,KAEvBhF,EAAM2D,OAAS,GAAK3D,EAAMiF,WAAW,OAASjF,EAAMiF,WAAW,QACjEjF,EAAQA,EAAMkF,UAAU,IAGtB,cAAcC,KAAKnF,IACrBD,EAASC,EACX,EAQE+E,OAAQA,EACRjF,UAAWM,EACXT,KAAK,OACLyF,UAAU,UACVC,QAAQ,qBACR,EAIN,GAAeC,EAAAA,EAAAA,YAAWR,GCrCbS,EAAiBA,IAC5BC,YAAW,KACTC,OAAOC,SAAS,CACdC,KAAM,EACNC,IAAKtE,SAASC,KAAKsE,aACnBC,SAAU,UACV,GACD,KCNL,EAA6B,kCAA7B,EAA0E,gCAA1E,EAA0H,qCAA1H,EAAuK,6BAAvK,EAAkN,mCAAlN,EAAqQ,qC,+DCArQ,QAA8B,iCAA9B,EAAyE,6BCmB5DC,EAA8CvG,IAapD,IAbqD,iBAC1DwG,EAAgB,KAChBC,EAAI,QACJC,EAAO,cACPC,EAAa,iBACbC,EAAgB,oBAChBC,EAAmB,kBACnBC,EAAiB,UACjBC,EAAS,aACTC,EAAY,QACZC,EAAO,WACPC,EAAU,aACVC,GACDnH,EACC,MAAM,EAAES,IAAMC,EAAAA,EAAAA,OACP0G,EAAUC,IAAeC,EAAAA,EAAAA,UAAgC,KACzDC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAmB,KACpDG,EAAqBC,IAA0BJ,EAAAA,EAAAA,WAAkB,IACjEK,EAAaC,IAAkBN,EAAAA,EAAAA,WAAS,IAE/CzF,EAAAA,EAAAA,YAAU,KA6BR+F,GAAe,GA5BMC,WACnB,GAAIrB,EAAkB,CACpB,MAAMsB,GAAoBC,EAAAA,EAAAA,KAAWC,EAAAA,EAAAA,MAAgB,QAC/CC,GAAYC,EAAAA,EAAAA,IAAIJ,EAAmBtB,EAAiB2B,IAC1D,IACE,MAAMC,QAAoBC,EAAAA,EAAAA,IAAOJ,GACjC,GAAIG,EAAYE,SAAU,CACxB,MAAM5B,EAAU0B,EAAY3B,OACtBW,GAAkB,OAAPV,QAAO,IAAPA,OAAO,EAAPA,EAASU,WAAY,GAEtC,GACEmB,MAAMC,QAAQpB,IACdA,EAASqB,OAAOC,GAAYH,MAAMC,QAAQE,EAAQC,cAClD,CACAtB,EAAYD,EAASwB,KAAKF,GAAYA,EAAQC,YAAc,MAC5DnB,EAAgBJ,EAASwB,KAAKF,GAAYA,EAAQG,QAClD,MAAMC,EAAY1B,EAASjD,OAAS,EACpCuD,EAAuBoB,GACvBjC,EAAoBO,EAAS0B,GAAWD,KAC1C,MACEE,QAAQC,MAAM,qCAElB,CACF,CAAE,MAAOA,GACPD,QAAQC,MAAM,0BAA2BA,EAC3C,CACF,GAGFC,EAAc,GACb,CAACzC,IAEJ,MAgDM0C,EAAgBzB,IAAwBL,EAASjD,OAAS,EAEhE,OACEgF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAvI,SAAA,CACGkG,IACCpG,EAAAA,EAAAA,KAACmD,EAAAA,EAAa,CAACH,QArDN0F,KACb,IAAK7C,EACH,OAEF,MAAM8C,EAAU,IAAI7C,GACd8C,EACJD,EAAQnF,OAAS,EAAImF,EAAQA,EAAQnF,OAAS,GAAGqF,IAAM,EAAI,EAEvDC,EAA4B,CAChCC,IAAKH,EAAQI,WACbC,OAAQ,GACRJ,IAAKD,EACLM,KAAM,GACNjG,MAAMjD,EAAAA,EAAAA,KAACmJ,EAAAA,EAAa,KAGtBR,EAAQS,KAAKN,GACb/C,EAAQ4C,GACR3C,EAAc8C,EAAOC,IAAI,EAmCW9F,MAAMjD,EAAAA,EAAAA,KAACqJ,EAAAA,EAAY,IAAInJ,SACpDJ,EAAE,YAGNwG,IACCtG,EAAAA,EAAAA,KAAA,OAAKL,UAAWM,EAAeC,UAC7BF,EAAAA,EAAAA,KAACsJ,EAAAA,EAAY,CAACtG,QAASiD,EAAkBhD,MAAMjD,EAAAA,EAAAA,KAACuJ,EAAAA,EAAa,IAAIrJ,SAC9DJ,EAAE,qBAIT0I,EAAAA,EAAAA,MAAA,OAAK7I,UAAWM,EAAmBC,SAAA,EAC/B8G,GAAeF,EAAsB,GACrC9G,EAAAA,EAAAA,KAACsJ,EAAAA,EAAY,CAACtG,QApCMwG,KAC1B,GAAI1C,EAAsB,EAAG,CAC3B,MAAM2C,EAAW3C,EAAsB,EACvCC,EAAuB0C,GACvB1D,EAAQU,EAASgD,IAAa,IAC9BvD,EAAoBU,EAAa6C,GACnC,GA8BkDxG,MAAMjD,EAAAA,EAAAA,KAAC0J,EAAAA,EAAY,IAAIxJ,SAChEJ,EAAE,eAGLE,EAAAA,EAAAA,KAAA,WAEAgH,IAAgBuB,IAChBvI,EAAAA,EAAAA,KAACsJ,EAAAA,EAAY,CAACtG,QAlCE2G,KACtB,GAAI7C,EAAsBL,EAASjD,OAAS,EAAG,CAC7C,MAAMiG,EAAW3C,EAAsB,EACvCC,EAAuB0C,GACvB1D,EAAQU,EAASgD,IAAa,IAC9BvD,EAAoBU,EAAa6C,GACnC,GA4B8CxG,MAAMjD,EAAAA,EAAAA,KAAC4J,EAAAA,EAAa,IAAI1J,SAC7DJ,EAAE,WAGLkH,GAAeuB,IACfC,EAAAA,EAAAA,MAACc,EAAAA,EAAY,CAACtG,QAzDG6G,KACvB9D,EAAQ,IACRM,GAAa,GACbE,GAAW,GACXU,GAAe,GACfd,GAAkB,GAClBK,GAAa,EAAM,EAmD2BtG,SAAA,CACrCJ,EAAE,aACHE,EAAAA,EAAAA,KAAC4J,EAAAA,EAAa,YAInB,E,wBC5JP,QAA2B,6BAA3B,EAAgE,0BAAhE,EAAoG,4BAApG,EAA0I,4BCY7HE,EAAwCzK,IAI9C,IAJ+C,WACpD0K,EAAU,iBACVlE,EAAgB,cAChBmE,GACD3K,EACC,MAAM,EAAES,IAAMC,EAAAA,EAAAA,MACRkK,GAAOC,EAAAA,EAAAA,MAAUC,aAChBC,EAAYC,GAAiBC,EAAAA,GAAQC,cACrCC,EAAUC,IAAe9D,EAAAA,EAAAA,WAAkB,IAC3CsC,EAAQyB,IAAa/D,EAAAA,EAAAA,WAA2B,OAAVoD,QAAU,IAAVA,OAAU,EAAVA,EAAYd,SAAU,MAC5DC,EAAMyB,IAAWhE,EAAAA,EAAAA,WAA2B,OAAVoD,QAAU,IAAVA,OAAU,EAAVA,EAAYb,OAAQ,MAE7DhI,EAAAA,EAAAA,YAAU,KACRwJ,GAAoB,OAAVX,QAAU,IAAVA,OAAU,EAAVA,EAAYd,SAAU,KAChC0B,GAAkB,OAAVZ,QAAU,IAAVA,OAAU,EAAVA,EAAYb,OAAQ,IAAI,GAC/B,CAACa,IAEJ,MAuCMa,EAAaA,KAvCI1D,WAIrB,GAAI+C,GAAQpE,EAAkB,CAC5B,MAAMgF,GAAkBtD,EAAAA,EAAAA,KAAIF,EAAAA,EAAAA,MAAgB,YAAa4C,EAAKa,KAC9D,IACE,MAAMC,QAAqBrD,EAAAA,EAAAA,IAAOmD,GAClC,GAAIE,EAAapD,SAAU,CACzB,MACMqD,EADgBD,EAAajF,OACImF,UAAUhD,KAC9CiD,GACKA,EAAS1D,KAAO3B,EAAiB2B,GAC5B,IACF0D,EACHnB,WAAYoB,GAGTD,UAILE,EAAAA,EAAAA,IAAUP,EAAiB,CAAEI,UAAWD,IAC9ChB,EAAcmB,EAChB,MACEf,EAAWrJ,KAAK,CACdvB,KAAM,QACN6L,QAASvL,EAAE,qBAGjB,CAAE,MAAOuI,GACP+B,EAAWrJ,KAAK,CACdvB,KAAM,QACN6L,QAASvL,EAAE,0BAEf,CACF,GAIAwL,CAAe,CAAErC,SAAQC,SACzBuB,GAAY,GACZL,EAAWrJ,KAAK,CACdvB,KAAM,UACN6L,QAASvL,EAAE,kBACX,EASEyL,EAAQ,CACZ,CACExC,IAAK,IACL1I,OAAOL,EAAAA,EAAAA,KAAA,OAAKL,UAAWM,EAAaC,SAAEJ,EAAE,wBACxCI,UACEF,EAAAA,EAAAA,KAAAyI,EAAAA,SAAA,CAAAvI,SACGsK,GACChC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAvI,SAAA,EACEsI,EAAAA,EAAAA,MAAA,OAAK7I,UAAWM,EAAeC,SAAA,EAC7BsI,EAAAA,EAAAA,MAAA,OAAAtI,SAAA,EACEF,EAAAA,EAAAA,KAAC2E,EAAY,CACX9E,MAAOoJ,EACPrJ,SAAU8K,EACV9F,OAAQgG,KAEV5K,EAAAA,EAAAA,KAAA,QAAAE,SAAOJ,EAAE,YAEX0I,EAAAA,EAAAA,MAAA,OAAAtI,SAAA,EACEF,EAAAA,EAAAA,KAAC2E,EAAY,CACX9E,MAAOqJ,EACPtJ,SAAU+K,EACV/F,OAAQgG,KAEV5K,EAAAA,EAAAA,KAAA,QAAAE,SAAOJ,EAAE,2BAGbE,EAAAA,EAAAA,KAAA,OAAKL,UAAWM,EAAeC,UAC7BF,EAAAA,EAAAA,KAACmD,EAAAA,EAAa,CAACF,MAAMjD,EAAAA,EAAAA,KAACuJ,EAAAA,EAAa,IAAKvG,QAAS4H,EAAW1K,UAC1DF,EAAAA,EAAAA,KAAA,QAAAE,SAAOJ,EAAE,wBAKf0I,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAvI,SAAA,EACEsI,EAAAA,EAAAA,MAAA,OAAK7I,UAAWM,EAAeC,SAAA,EAC7BsI,EAAAA,EAAAA,MAAA,OAAAtI,SAAA,CACG+I,EAAO,IAAEnJ,EAAE,UAEd0I,EAAAA,EAAAA,MAAA,OAAAtI,SAAA,CACGgJ,EAAK,IAAEpJ,EAAE,yBAGdE,EAAAA,EAAAA,KAAA,OAAKL,UAAWM,EAAeC,UAC7BF,EAAAA,EAAAA,KAACmD,EAAAA,EAAa,CACZF,MAAMjD,EAAAA,EAAAA,KAACwL,EAAAA,EAAY,IACnBxI,QAASA,IAAMyH,GAAY,GAAMvK,UAEjCF,EAAAA,EAAAA,KAAA,QAAAE,SAAOJ,EAAE,2BAOrB2L,OA3DFzL,EAAAA,EAAAA,KAAA,OACE0L,IAAKC,0DA8DT,OACEnD,EAAAA,EAAAA,MAAA,OAAK7I,UAAWM,EAAgBC,SAAA,CAC7BmK,GACDrK,EAAAA,EAAAA,KAAC4L,EAAAA,EAAQ,CAACC,KAAK,QAAQN,MAAOA,EAAOO,UAAU,MAC3C,E,2CCjJV,QAAgC,qCAAhC,EAA+E,+BAA/E,EAA0H,iCCmB7GC,EAA8C1M,IAOpD,IAPqD,YAC1D2M,EAAW,iBACXnG,EAAgB,QAChBE,EAAO,eACPkG,EAAc,oBACdC,EAAmB,gBACnBC,GACD9M,EACC,MAAM,EAAES,IAAMC,EAAAA,EAAAA,MACRkK,GAAOC,EAAAA,EAAAA,MAAUC,aAChBC,EAAYC,GAAiBC,EAAAA,GAAQC,cACrC6B,EAAaC,IAAkB1F,EAAAA,EAAAA,WAAkB,GAwDxD,OACE6B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAvI,SAAA,CACGmK,GACDrK,EAAAA,EAAAA,KAAA,OAAKL,UAAWM,EAAqBC,UACnCF,EAAAA,EAAAA,KAAC+C,EAAAA,EAAW,CAACE,MAAMjD,EAAAA,EAAAA,KAACsM,EAAAA,EAAc,IAAKtJ,QApBvBuJ,KACfP,GAAgBnG,EAOrBwG,GAAe,GANbjC,EAAWrJ,KAAK,CACdvB,KAAM,QACN6L,QAASvL,EAAE,mBAIK,EAY8CI,SAC3DJ,EAAE,sBAGP0I,EAAAA,EAAAA,MAAC1H,EAAAA,EAAW,CACVC,KAAMqL,EACNpL,SAAWL,IACT0L,GAAe,EAAM,EAEvBpL,QAAQ,EAAMf,SAAA,EAEdF,EAAAA,EAAAA,KAAA,KAAGL,UAAWM,EAAeC,SAAEJ,EAAE,6BACjCE,EAAAA,EAAAA,KAAA,OAAKL,UAAWM,EAAiBC,UAC/BF,EAAAA,EAAAA,KAAC+C,EAAAA,EAAW,CACV7C,SAAUJ,EAAE,UACZkD,QAxBarC,IACrBA,EAAE6L,kBAlDwBtF,WAC1B,IAAK8E,IAAgBnG,IAAqBoE,EAAM,OAEhD,MAAM9C,GAAoBC,EAAAA,EAAAA,KAAWC,EAAAA,EAAAA,MAAgB,QAC/CC,GAAYC,EAAAA,EAAAA,IAAIJ,EAAmBtB,EAAiB2B,IAE1D,IACE,MAAMC,QAAoBC,EAAAA,EAAAA,IAAOJ,GACjC,GAAIG,EAAYE,SAAU,CACxB,MAEM8E,GAFehF,EAAY3B,OACHW,UAAY,IACRiG,QAC/B3E,GACC,IAAI4E,KAAK5E,EAAQG,MAAM0E,mBAAqBZ,UAG1CZ,EAAAA,EAAAA,IAAU9D,EAAW,CAAEb,SAAUgG,IAEvC1G,EAAQ,IACRkG,EAAe,MACfC,EAAoB,MACpBC,EAAgB,OAChBU,EAAAA,EAAAA,KACAR,GAAe,GAEfjC,EAAWrJ,KAAK,CACdvB,KAAM,UACN6L,QAASvL,EAAE,mBAEf,CACF,CAAE,MAAOuI,GACP+B,EAAWrJ,KAAK,CACdvB,KAAM,QACN6L,QAASvL,EAAE,yBAEf,GAgBAgN,EAAqB,EAuBb7J,MAAMjD,EAAAA,EAAAA,KAACsM,EAAAA,EAAc,aAI1B,EClFMS,GAAkD1N,IAIxD,IAJyD,iBAC9DwG,EAAgB,oBAChBqG,EAAmB,gBACnBC,GACD9M,EACC,MAAM,EAAES,IAAMC,EAAAA,EAAAA,OACPqK,EAAYC,GAAiBC,EAAAA,GAAQC,cACrCzE,EAAMC,IAAWY,EAAAA,EAAAA,UAA8B,KAC/CoD,EAAYC,IAAiBrD,EAAAA,EAAAA,UAG1B,OACHqG,EAAYhH,IAAiBW,EAAAA,EAAAA,UAAwB,OACrDsG,EAAUC,IAAevG,EAAAA,EAAAA,UAAwB,OACjDqF,EAAaC,IAAkBtF,EAAAA,EAAAA,UAAwB,OACvDwG,EAAgBhH,IAAqBQ,EAAAA,EAAAA,WAAS,IAC9CP,EAAWC,IAAgBM,EAAAA,EAAAA,WAAS,IACpCL,EAASC,IAAcI,EAAAA,EAAAA,WAAS,IAChCyG,EAAW5G,IAAgBG,EAAAA,EAAAA,WAAS,GAErC0G,GAAiBC,EAAAA,EAAAA,QAAgC,MACjDC,GAAeD,EAAAA,EAAAA,QAAgC,MAC/CrD,GAAOC,EAAAA,EAAAA,MAAUC,aAEvBjJ,EAAAA,EAAAA,YAAU,KACJ2E,EACF2H,IAEAzH,EAAQ,GACV,GACC,CAACF,KAEJ3E,EAAAA,EAAAA,YAAU,KACJ+L,GAAYM,EAAaE,SAC3BF,EAAaE,QAAQC,QAEnBV,GAAcK,EAAeI,SAC/BJ,EAAeI,QAAQC,OACzB,GACC,CAACT,EAAUD,IAEd,MAAMQ,EAAmBtG,UACvB,GAAI+C,GAAQpE,EAAkB,CAC5B,MAAMsB,GAAoBC,EAAAA,EAAAA,KAAWC,EAAAA,EAAAA,MAAgB,QAC/CC,GAAYC,EAAAA,EAAAA,IAAIJ,EAAmBtB,EAAiB2B,IACpDqD,GAAkBtD,EAAAA,EAAAA,KAAIF,EAAAA,EAAAA,MAAgB,YAAa4C,EAAKa,KAE9D,IACE,MAAOrD,EAAasD,SAAsB4C,QAAQC,IAAI,EACpDlG,EAAAA,EAAAA,IAAOJ,IACPI,EAAAA,EAAAA,IAAOmD,KAGT,GAAIpD,EAAYE,SAAU,CACxB,MAAMkG,EAAepG,EAAY3B,OAC3BW,GAAuB,OAAZoH,QAAY,IAAZA,OAAY,EAAZA,EAAcpH,WAAY,GAE3C,GAAIA,EAASjD,OAAS,EAAG,CACvB,MAAMsK,EAAgBrH,EAASA,EAASjD,OAAS,GAC3CwI,EAAc,IAAIW,KAAKmB,EAAc5F,MAAM0E,iBAEjDX,EAAeD,GACf,MACM+B,GADaD,EAAc9F,YAAc,IACIC,KAChD+F,IAKA,CACCjF,IAAKiF,EAASxG,GACdqB,IAAKmF,EAASnF,IACdI,OAAQ+E,EAAS/E,OACjBC,KAAM8E,EAAS9E,KACfjG,MAAMjD,EAAAA,EAAAA,KAACmJ,EAAAA,EAAa,QAGxBpD,EAAQgI,GACR3I,GACF,MACEW,EAAQ,IACRkG,EAAe,MACf7G,IAKF,GAFAoB,EAAaC,EAASjD,OAAS,GAE3BuH,EAAapD,SAAU,CACzB,MACMuD,EADgBH,EAAajF,OACJmF,UAAUgD,MACtCC,GAAuBA,EAAG1G,KAAO3B,EAAiB2B,KAEjD0D,GACFlB,EAAckB,EAASnB,WAE3B,CAEA1D,GAAa,GACbE,GAAW,EACb,MACER,EAAQ,IACRkG,EAAe,MACf7G,IACAoB,GAAa,GAGfH,GAAa,GACbE,GAAW,EACb,CAAE,MAAO8B,GACP8F,MAAM9F,EACR,CACF,GAgGI+F,EAAU,CACd,CACEC,MAAM,GAAD5N,OAAKX,EAAE,QACZwO,UAAW,MACXC,MAAO,OAET,CACEF,MAAM,GAAD5N,OAAKX,EAAE,WACZwO,UAAW,SACXC,MAAO,MACPC,OAAQA,CAACjP,EAAckP,IACrBtB,EACEH,IAAeyB,EAAO1F,KACpB/I,EAAAA,EAAAA,KAAC2E,EAAY,CACX1C,IAAKoL,EACLxN,MAAO4O,EAAOxF,OACdrJ,SAAWC,GApCF6O,EAAC3F,EAAalJ,KACjC,MAAM8I,EAAU7C,EAAKmC,KAAK0G,GACpBA,EAAI5F,MAAQA,EACP,IAAK4F,EAAK1F,OAAQpJ,GAEpB8O,IAET5I,EAAQ4C,EAAQ,EA6Be+F,CAAaD,EAAO1F,IAAKlJ,GAC9C+E,OAAQA,IAAMoB,EAAc,SAG9BhG,EAAAA,EAAAA,KAAA,OACEgD,QAASA,IAAMgD,EAAcyI,EAAO1F,KACpCpJ,UAAWM,EAAmBC,SAE7BuO,EAAOxF,QAAUnJ,EAAE,kBAIxBE,EAAAA,EAAAA,KAAA,OAAKL,UAAWM,EAAmBC,SAAEuO,EAAOxF,UAGlD,CACEoF,MAAM,GAAD5N,OAAKX,EAAE,SACZwO,UAAW,OACXC,MAAO,MACPC,OAAQA,CAACjP,EAAckP,IACrBtB,EACEF,IAAawB,EAAO1F,KAClB/I,EAAAA,EAAAA,KAAC2E,EAAY,CACX1C,IAAKsL,EACL1N,MAAO4O,EAAOvF,KACdtJ,SAAWC,GAnDJ+O,EAAC7F,EAAalJ,KAC/B,MAAM8I,EAAU7C,EAAKmC,KAAK0G,GACpBA,EAAI5F,MAAQA,EACP,IAAK4F,EAAKzF,KAAMrJ,GAElB8O,IAET5I,EAAQ4C,EAAQ,EA4CeiG,CAAWH,EAAO1F,IAAKlJ,GAC5C+E,OAAQA,IAAMsI,EAAY,SAG5BlN,EAAAA,EAAAA,KAAA,OAAKL,UAAWM,EAAqBC,UACnCF,EAAAA,EAAAA,KAAA,OACEgD,QAASA,IAAMkK,EAAYuB,EAAO1F,KAClCpJ,UAAWM,EAAmBC,SAE7BuO,EAAOvF,MAAQpJ,EAAE,oBAKxBE,EAAAA,EAAAA,KAAA,OAAKL,UAAWM,EAAmBC,SAAEuO,EAAOvF,SAgBpD,OACEV,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAvI,SAAA,CACGmK,GACDrK,EAAAA,EAAAA,KAAC6O,EAAAA,EAAO,CAACxN,MAAO,CAAEyN,gBAAiB,WACnC9O,EAAAA,EAAAA,KAAA,OAAKL,UAAWM,EAAkBC,UAChCF,EAAAA,EAAAA,KAACoD,EAAAA,EAAQ,CACPlD,UAA0B,OAAhB2F,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBvG,OAAQQ,EAAE,sBACtCH,UAAWM,OAGfD,EAAAA,EAAAA,KAACuB,EAAAA,GAAc,CACbC,MAAO,CACLC,WAAY,CACVsN,MAAO,CACLC,SAAU,UACVC,YAAa,UACbC,aAAc,GACdC,iBAAkB,UAClBC,UAAW,UACXC,YAAa,UACbC,iBAAkB,MAGtBpP,SAED2F,GACC2C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAvI,SAAA,EACEF,EAAAA,EAAAA,KAAC8J,EAAU,CACTC,WAAYA,EACZlE,iBAAkBA,EAClBmE,cAAeA,IAEhBmD,GACC3E,EAAAA,EAAAA,MAAA,OAAK7I,UAAWM,EAAqBC,SAAA,CAClCJ,EAAE,eAAe,MAAG,IAAI6M,MAAO4C,yBAGlC/G,EAAAA,EAAAA,MAAA,OAAK7I,UAAWM,EAAqBC,SAAA,CAClCJ,EAAE,eAAe,KAAGkM,GAA4B,YAGrDhM,EAAAA,EAAAA,KAAC+O,EAAAA,EAAK,CACJS,OAASf,GAAWA,EAAO1F,IAC3BqF,QAASA,EACTqB,WAAY3J,EACZ4J,YAAY,EACZ/P,UAAWM,EACX0P,OAAQ,CAAEC,WAAW5P,EAAAA,EAAAA,KAACqE,EAAQ,QAEhCrE,EAAAA,EAAAA,KAAC4F,EAAW,CACVC,iBAAkBA,EAClBC,KAAMA,EACNC,QAASA,EACTC,cAAeA,EACfC,iBA1NaiB,UACvB,GAAI+C,GAAQpE,EAAkB,CAC5B,MAAMgK,EAAY/J,EAAK4G,QACpBiC,GAAQmB,OAAOnB,EAAIzF,MAAQ,GAAK4G,OAAOnB,EAAI1F,QAAU,IAGxD,GAAyB,IAArB4G,EAAUrM,OAKZ,YAJA4G,EAAWrJ,KAAK,CACdvB,KAAM,QACN6L,QAASvL,EAAE,kBAIf,MAAMqH,GAAoBC,EAAAA,EAAAA,KAAWC,EAAAA,EAAAA,MAAgB,QAC/CwD,GAAkBtD,EAAAA,EAAAA,KAAIF,EAAAA,EAAAA,MAAgB,YAAa4C,EAAKa,KAE9D,IACE,MAAMiF,GAAQC,EAAAA,EAAAA,KAAW3I,EAAAA,EAAAA,OACnBC,GAAYC,EAAAA,EAAAA,IAAIJ,EAAmBtB,EAAiB2B,IAEpDyI,QAAevI,EAAAA,EAAAA,IAAOJ,GACtBvB,EAAUkK,EAAOtI,SAAWsI,EAAOnK,OAAS,CAAEW,SAAU,IAExDyJ,EAAa,CACjB1I,IAAI2I,EAAAA,EAAAA,KACJjI,MAAM,IAAIyE,MAAOyD,cACjBpI,WAAY6H,EAAU5H,KAAI,CAAC0G,EAAK0B,KAAK,CACnC7I,IAAI2I,EAAAA,EAAAA,KACJtH,IAAKwH,EAAQ,EACbnH,KAAMyF,EAAIzF,KACVD,OAAQ0F,EAAI1F,YAIhBlD,EAAQU,SAAS2C,KAAK8G,GACtBH,EAAMlH,IAAIvB,EAAWvB,GAErB,MAAMgF,QAAqBrD,EAAAA,EAAAA,IAAOmD,GAClC,GAAIE,EAAapD,SAAU,CACzB,MACMqD,EADgBD,EAAajF,OACImF,UAAUhD,KAC9CiD,GACKA,EAAS1D,KAAO3B,EAAiB2B,GAC5B,IACF0D,GAGAA,IAIX6E,EAAMO,OAAOzF,EAAiB,CAAEI,UAAWD,GAC7C,OAEM+E,EAAMQ,SAEZpK,GAAkB,GAClBE,GAAa,GACbE,GAAW,GAEX6D,EAAWrJ,KAAK,CACdvB,KAAM,UACN6L,QAASvL,EAAE,sBAEf,CAAE,MAAOuI,GACP+B,EAAWrJ,KAAK,CACdvB,KAAM,QACN6L,QAASvL,EAAE,4BAEf,CACF,GAqJUoG,oBAlEqBgC,IAC/B,MAAM8D,EAAc,IAAIW,KAAKzE,GACvBsI,EAAgBxE,EAAYY,iBAC7B6D,MAAMzE,EAAY0E,WAIrBtI,QAAQC,MAAM,gBAAiBH,IAH/B+D,EAAeuE,GACfrK,GAAkB,GAGpB,EA2DUA,kBAAmBA,EACnBC,UAAWA,EACXC,aAAcA,EACdC,QAASA,EACTC,WAAYA,EACZC,aAAcA,IAEf4G,IACCpN,EAAAA,EAAAA,KAAC+L,EAAa,CACZC,YAAaA,EACbnG,iBAAkBA,EAClBE,QAASA,EACTkG,eAAgBA,EAChBC,oBAAqBA,EACrBC,gBAAiBA,QAKvBnM,EAAAA,EAAAA,KAAC+O,EAAAA,EAAK,CACJX,QAASA,EACTzO,UAAWM,EACX0P,OAAQ,CAAEC,WAAW5P,EAAAA,EAAAA,KAACqE,EAAQ,WAInC,E,eCpYP,SAA8B,iCAA9B,GAAwE,4BCc3DsM,GAAsCtR,IAG5C,IAH6C,cAClDuR,EAAa,SACbC,GACDxR,EACC,MAAM,EAAES,IAAMC,EAAAA,EAAAA,OACPqK,EAAYC,GAAiBC,EAAAA,GAAQC,cACrCuG,EAAcC,IAAmBpK,EAAAA,EAAAA,UAAS,IAmDjD,OACE6B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAvI,SAAA,CACGmK,GACDrK,EAAAA,EAAAA,KAACoD,EAAAA,EAAQ,CAAAlD,SAAEJ,EAAE,oBACb0I,EAAAA,EAAAA,MAAA,OAAK7I,UAAWM,GAAmBC,SAAA,EACjCF,EAAAA,EAAAA,KAACZ,GAAAA,EAAW,CACVS,MAAOiR,EACPlR,SAAWC,GAAkBkR,EAAgBlR,GAC7CN,KAAMO,EAAE,gBACRL,YAAaK,EAAE,mBAEjBE,EAAAA,EAAAA,KAACsJ,EAAAA,EAAY,CACX3J,UAAWM,GACXgD,MAAMjD,EAAAA,EAAAA,KAACqJ,EAAAA,EAAY,IACnBrG,QA/DkBkE,UACxB,GAAK4J,EAOL,IACE,MAAM7G,GAAOC,EAAAA,EAAAA,MAAUC,YACvB,GAAIF,EAAM,CACR,MAAM+G,EAAS/G,EAAKa,IACdI,EAAW,CACf1D,IAAI2I,EAAAA,EAAAA,KACJ7Q,KAAMwR,EACND,SAAUA,EACV9G,WAAY,CACVd,OAAQ,IACRC,KAAM,KAER+H,YAAY,GAERpG,GAAkBtD,EAAAA,EAAAA,KAAIF,EAAAA,EAAAA,MAAgB,YAAa2J,GACnDvJ,QAAoBC,EAAAA,EAAAA,IAAOmD,GAE7BpD,EAAYE,eACRyD,EAAAA,EAAAA,IAAUP,EAAiB,CAC/BI,UAAW,IAAIxD,EAAY3B,OAAOmF,UAAWC,WAGzCE,EAAAA,EAAAA,IAAUP,EAAiB,CAC/BI,UAAW,CAACC,KAGhB6F,EAAgB,IAChBH,IACAxG,EAAWrJ,KAAK,CACdvB,KAAM,UACN6L,QAASvL,EAAE,kBAEf,CACF,CAAE,MAAOuI,GACP+B,EAAWrJ,KAAK,CACdvB,KAAM,QACN6L,QAASvL,EAAE,wBAEf,MA5CEsK,EAAWrJ,KAAK,CACdvB,KAAM,QACN6L,QAASvL,EAAE,iBA0Cf,EAiBiCI,SAE1BJ,EAAE,yBAGN,E,eC1FP,SAAwB,yBAAxB,GAA+D,+BAA/D,GAAsG,yB,eCAtG,SAA0B,6BAA1B,GAA8D,0BAA9D,GAAiG,4BAAjG,GAA4I,kCCW/HoR,GAA8C7R,IAOpD,IAPqD,KAC1D8R,EAAI,SACJN,EAAQ,QACR9K,EAAO,oBACPqL,EAAmB,WACnBC,EAAU,YACV5G,GACDpL,EACC,MAAM,EAAES,IAAMC,EAAAA,EAAAA,OACPqK,EAAYC,GAAiBC,EAAAA,GAAQC,cACrC+G,EAAUC,IAAe5K,EAAAA,EAAAA,WAAkB,GAwElD,OACE6B,EAAAA,EAAAA,MAAA,OAAK7I,UAAWM,GAAeC,SAAA,CAC5BmK,GACDrK,EAAAA,EAAAA,KAACmD,EAAAA,EAAa,CACZF,MAAMjD,EAAAA,EAAAA,KAACwR,GAAAA,EAAU,IACjBxO,QAAUrC,IACRA,EAAE6L,kBA5EatF,OAAOuK,EAAoBC,KAChD,IACE,MAAMzH,GAAOC,EAAAA,EAAAA,MAAUC,YACvB,GAAIF,EAAM,CACR,MAAM+G,EAAS/G,EAAKa,IACdD,GAAkBtD,EAAAA,EAAAA,KAAIF,EAAAA,EAAAA,MAAgB,YAAa2J,GACnDjG,QAAqBrD,EAAAA,EAAAA,IAAOmD,GAElC,GAAIE,EAAapD,SAAU,CACzB,MAAMgK,EAAgB5G,EAAajF,OAC7B8L,EAAyBD,EAAc1G,UAAUyB,QACpDxB,GAAsCA,EAAS+F,aAChDzN,OAEF,IAAKkO,GAAiBE,GAA0B,EAK9C,YAJAxH,EAAWrJ,KAAK,CACdvB,KAAM,QACN6L,QAASvL,EAAE,yBAKf,IAAIkL,EAAmB2G,EAAc1G,UAAUhD,KAC5CiD,GACKA,EAAS1D,KAAOiK,EACX,IAAKvG,EAAU+F,YAAaS,GAE9BxG,UAILE,EAAAA,EAAAA,IAAUP,EAAiB,CAC/BI,UAAWD,IAGb,MAAM6G,EAAqB/R,EAAE,cAADW,OAAeoQ,IACrCiB,EAAe9G,EAAiB0B,QACnCxB,GACCpL,EAAE,cAADW,OAAeyK,EAAS2F,aAAgBgB,IAE7C9L,EAAQ+L,EACV,CAEKJ,EAMHtH,EAAWrJ,KAAK,CACdvB,KAAM,UACN6L,QAASvL,EAAE,yBAPbsK,EAAWrJ,KAAK,CACdvB,KAAM,UACN6L,QAASvL,EAAE,qBAQfyR,GAAaD,EACf,CACF,CAAE,MAAOjJ,GACP+B,EAAWrJ,KAAK,CACdvB,KAAM,QACN6L,QAASvL,EAAE,0BAEf,GAgBMiS,CAAeZ,EAAK3J,GAAI2J,EAAKF,WAAW,EAE1CtR,UAAS,GAAAc,OAAKR,GAAW,KAAAQ,OAAI0Q,EAAKF,WAAahR,GAAgB,IAAKC,UAEpEF,EAAAA,EAAAA,KAAA,QAAAE,SAAOJ,EAAE,iBAEXE,EAAAA,EAAAA,KAACmD,EAAAA,EAAa,CACZF,MAAMjD,EAAAA,EAAAA,KAACwL,EAAAA,EAAY,IACnBxI,QAAUrC,IArBQqR,IAACP,EAAoBQ,EAsBrCtR,EAAE6L,kBAtBeiF,EAuBDN,EAAK3J,GAvBgByK,EAuBZd,EAAK7R,KAtBpC8R,EAAoBK,GACpBJ,EAAWY,GACXxH,GAAY,EAoB6B,EAErC9K,UAAWM,GAAoBC,UAE/BF,EAAAA,EAAAA,KAAA,QAAAE,SAAOJ,EAAE,kBAEP,E,eCpHV,SAAsC,wCAAtC,GAA+F,mCAA/F,GAA+I,+BAA/I,GAAwL,4BAAxL,GAAiO,+BCmBpNoS,GAA8C7S,IAUpD,IAVqD,WAC1D8S,EAAU,eACV9F,EAAc,SACdwE,EAAQ,QACR9K,EAAO,YACPqG,EAAW,aACXgG,EAAY,KACZjB,EAAI,WACJkB,EAAU,oBACVnG,GACD7M,EACC,MAAM,EAAES,IAAMC,EAAAA,EAAAA,OACPqK,EAAYC,GAAiBC,EAAAA,GAAQC,aAsD5C,OACE/B,EAAAA,EAAAA,MAAC1H,EAAAA,EAAW,CACVC,KAAMqL,EACNpL,SAAWL,IACTyR,EAAazR,GACb0L,GAAe,EAAM,EAEvBpL,QAAQ,EAAMf,SAAA,CAEbmK,GACDrK,EAAAA,EAAAA,KAAA,KAAGL,UAAWM,GAAeC,SAAEJ,EAAE,8BACjCE,EAAAA,EAAAA,KAAA,OAAKL,UAAWM,GAAkBC,UAChCF,EAAAA,EAAAA,KAAC+C,EAAAA,EAAW,CACV7C,SAAUJ,EAAE,UACZkD,QAAUrC,IACRA,EAAE6L,kBAnEatF,WACvBiL,GAAW,GACX,IACE,MAAMlI,GAAOC,EAAAA,EAAAA,MAAUC,YACvB,GAAIF,EAAM,CACR,MAAM+G,EAAS/G,EAAKa,IACdD,GAAkBtD,EAAAA,EAAAA,KAAIF,EAAAA,EAAAA,MAAgB,YAAa2J,GACnD7J,GAAoBI,EAAAA,EAAAA,KAAIF,EAAAA,EAAAA,MAAgB,OAAQoK,GAChD1G,QAAqBrD,EAAAA,EAAAA,IAAOmD,GAGlC,SADMyH,EAAAA,EAAAA,IAAUnL,GACZ4D,EAAapD,SAAU,CACzB,MAAMgK,EAAgB5G,EAAajF,OACnC,IAAIkF,EAA+B,GAEnC,GAAI2G,GAAiBA,EAAc1G,UAAW,CAC5CD,EAAmB2G,EAAc1G,UAAUyB,QACxCxB,GAAuBA,EAAS1D,KAAOiK,UAGpCrG,EAAAA,EAAAA,IAAUP,EAAiB,CAC/BI,UAAWD,IAGb,MAAM8G,EAAe9G,EAAiB0B,QACnCxB,GACCpL,EAAE,cAADW,OAAeyK,EAAS2F,aACzB/Q,EAAE,cAADW,OAAeoQ,MAEpB9K,EAAQ+L,GACRS,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUZ,GACvD,CACF,CACAO,GAAW,GACXhG,GAAe,GACf8F,GAAW,GACXjG,EAAoB,OACpBW,EAAAA,EAAAA,KAEAzC,EAAWrJ,KAAK,CACdvB,KAAM,UACN6L,QAASvL,EAAE,oBAEf,CACF,CAAE,MAAOuI,GACP+B,EAAWrJ,KAAK,CACdvB,KAAM,QACN6L,QAASvL,EAAE,0BAEf,GAmBQ6S,CAAiBxB,EAAK3J,GAAG,EAE3BvE,MAAMjD,EAAAA,EAAAA,KAACsM,EAAAA,EAAc,UAGb,ECjGLsG,GAA4CvT,IAUlD,IAVmD,WACxD8S,EAAU,eACV9F,EAAc,SACdwE,EAAQ,QACR9K,EAAO,YACPqG,EAAW,aACXgG,EAAY,KACZjB,EAAI,MACJd,EAAK,oBACLnE,GACD7M,EACC,MAAM,EAAES,IAAMC,EAAAA,EAAAA,OACP8S,EAASR,IAAc1L,EAAAA,EAAAA,WAAkB,GAOhD,OACE6B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAvI,SAAA,EACEsI,EAAAA,EAAAA,MAAA,OAAK7I,UAAWM,GAA2BC,SAAA,EACzCsI,EAAAA,EAAAA,MAAA,OAAK7I,UAAWM,GAAsBC,SAAA,CAAEmQ,EAAQ,EAAE,QAClDrQ,EAAAA,EAAAA,KAAC8S,GAAAA,EAAO,CAACzE,MAAOvO,EAAE,kBAAkBI,UAClCF,EAAAA,EAAAA,KAACmJ,EAAAA,EAAa,CACZxJ,UAAWM,GACX+C,QAAUrC,IACRA,EAAE6L,kBAZZ6F,GAAW,GACXhG,GAAe,EAYU,SAKtBwG,IACC7S,EAAAA,EAAAA,KAACkS,GAAW,CACVC,WAAYA,EACZtB,SAAUA,EACV9K,QAASA,EACTqG,YAAaA,EACbC,eAAgBA,EAChB+F,aAAcA,EACdjB,KAAMA,EACNkB,WAAYA,EACZnG,oBAAqBA,MAGxB,ECvDP,GAA4B,6BCSf6G,GAA0C1T,IAShD,IATiD,QACtD2T,EAAO,SACPxI,EAAQ,iBACRyI,EAAgB,oBAChB7B,EAAmB,SACnBP,EAAQ,QACR9K,EAAO,YACP0E,EAAW,WACX4G,GACDhS,EACC,MAAM,EAAES,IAAMC,EAAAA,EAAAA,OACPqK,EAAYC,GAAiBC,EAAAA,GAAQC,aACtC2I,GAAW5F,EAAAA,EAAAA,QAAyB,OAE1CpM,EAAAA,EAAAA,YAAU,KACJsJ,GAAY0I,EAASzF,SACvByF,EAASzF,QAAQC,OACnB,GACC,CAAClD,IAEJ,MAAM2I,EAAqBjM,MAAOuK,EAAoBuB,KACpD,IACE,MAAMI,GAAK/L,EAAAA,EAAAA,MAEL4C,GADOC,EAAAA,EAAAA,MACKC,YAClB,GAAIF,EAAM,CACR,MAAM+G,EAAS/G,EAAKa,IACdD,GAAkBtD,EAAAA,EAAAA,IAAI6L,EAAI,YAAapC,GACvCjG,QAAqBrD,EAAAA,EAAAA,IAAOmD,GAClC,GAAIE,EAAapD,SAAU,CAEzB,IAAIqD,EADkBD,EAAajF,OACEmF,UAAUhD,KAC5CiD,GACKA,EAAS1D,KAAOiK,EACX,IAAKvG,EAAU5L,KAAM0T,GAEvB9H,UAGLE,EAAAA,EAAAA,IAAUP,EAAiB,CAC/BI,UAAWD,IAEb,MAAM8G,EAAe9G,EAClB0B,QACExB,GACCpL,EAAE,cAADW,OAAeyK,EAAS2F,aACzB/Q,EAAE,cAADW,OAAeoQ,MAEnB5I,KAAKiD,IAAkB,CACtB1D,GAAI0D,EAAS1D,GACblI,KAAMQ,EAAEoL,EAAS5L,MACjBuR,SAAU3F,EAAS2F,SACnB9G,WAAW,GAADtJ,OAAKX,EAAE,WAAU,MAAAW,OAAKyK,EAASnB,YACzCkH,WAAY/F,EAAS+F,eAEzBsB,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUZ,IACrD/L,EAAQ+L,EACV,CACF,CACF,CAAE,MAAOzJ,GACP+B,EAAWrJ,KAAK,CACdvB,KAAM,QACN6L,QAASvL,EAAE,qBAEf,GAmBF,OACE0I,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAvI,SAAA,CACGmK,GACDrK,EAAAA,EAAAA,KAAA,SACEH,MAAOmT,EACPrT,UAAWM,GACXL,SAAWe,GAAM0Q,EAAW1Q,EAAEC,OAAOf,OACrCwT,UAvBqBC,IACP,UAAdA,EAAMvK,KAAmBkK,IAC3BE,EAAmBF,EAAkBD,GACrCvI,GAAY,GACZ2G,EAAoB,MACtB,EAmBIxM,OAhBa2O,KACbN,IACFE,EAAmBF,EAAkBD,GACrCvI,GAAY,GACZ2G,EAAoB,MACtB,EAYInP,IAAKiR,MAEN,ECvGP,GAA2B,+BAA3B,GAAmE,6BAAnE,GAAoH,wCAApH,GAA2K,mCCQ9JM,GAAgDnU,IAWtD,IAXuD,KAC5D8R,EAAI,iBACJsC,EAAgB,SAChB5C,EAAQ,QACR9K,EAAO,WACPoM,EAAU,aACVuB,EAAY,gBACZvH,EAAe,MACfkE,EAAK,aACLsD,EAAY,oBACZzH,GACD7M,EACC,MAAO+M,EAAaC,IAAkB1F,EAAAA,EAAAA,WAAkB,IACjDqM,EAAS3B,IAAc1K,EAAAA,EAAAA,UAAiB,KACxCsM,EAAkB7B,IAAuBzK,EAAAA,EAAAA,UAAwB,OACjE6D,EAAUC,IAAe9D,EAAAA,EAAAA,WAAS,GAYzC,OACE6B,EAAAA,EAAAA,MAAA,OACE7I,UAAS,GAAAc,OAAKR,GAAe,KAAAQ,OAC3BiT,IAAiBvC,EAAK3J,GAAKvH,GAAgB,IAE7C+C,QAASA,IAVYmO,KACvBhF,EAAgBgF,EAAK3J,IACrBiM,EAAiBtC,EAAK,EAQLyC,CAAgBzC,GAC/BlP,IAAK0R,EAAazT,SAAA,EAElBF,EAAAA,EAAAA,KAAC4S,GAAU,CACTT,WAAYA,EACZ9F,eAAgBA,EAChBwE,SAAUA,EACV9K,QAASA,EACTqG,YAAaA,EACbgG,aAxBgBzR,IACpBA,EAAE6L,kBACFH,GAAe,EAAM,EAuBjB8E,KAAMA,EACNd,MAAOA,EACPnE,oBAAqBA,IAEtB+G,IAAqB9B,EAAK3J,IAAMgD,GAC/BxK,EAAAA,EAAAA,KAAC+S,GAAS,CACRC,QAASA,EACTxI,SAAUA,EACVyI,iBAAkBA,EAClB7B,oBAAqBA,EACrBP,SAAUA,EACV9K,QAASA,EACT0E,YAAaA,EACb4G,WAAYA,KAGdrR,EAAAA,EAAAA,KAAA,OAAKL,UAAWM,GAAyBC,UACvCF,EAAAA,EAAAA,KAAA,QAAML,UAAWM,GAAoBC,SAAEiR,EAAK7R,UAGhDU,EAAAA,EAAAA,KAACkR,GAAW,CACVC,KAAMA,EACNN,SAAUA,EACV9K,QAASA,EACTqL,oBAAqBA,EACrBC,WAAYA,EACZ5G,YAAaA,MAEX,ECjEGoJ,GAAsCxU,IAQ5C,IAR6C,SAClDwR,EAAQ,cACRiD,EAAa,iBACbL,EAAgB,aAChBE,EAAY,aACZD,EAAY,gBACZvH,EAAe,oBACfD,GACD7M,EACC,MAAM,EAAES,IAAMC,EAAAA,EAAAA,OACPqK,EAAYC,GAAiBC,EAAAA,GAAQC,cACrCzE,EAAMC,IAAWY,EAAAA,EAAAA,UAAqB,KACtCoN,EAAS5B,IAAcxL,EAAAA,EAAAA,WAAkB,GAkDhD,OAhDAzF,EAAAA,EAAAA,YAAU,KACR,MAAM8S,EAAavB,KAAKwB,MACtB1B,aAAa2B,QAAQ,kBAAoB,MAEvCF,EAAWxQ,OAAS,IACtBuC,EAAQiO,GACR7B,GAAW,GACb,GACC,CAACtB,KAEJ3P,EAAAA,EAAAA,YAAU,KACegG,WACrBiL,GAAW,GACX,IACE,MAAMlI,GAAOC,EAAAA,EAAAA,MAAUC,YACvB,GAAIF,EAAM,CACR,MAAMY,GAAkBtD,EAAAA,EAAAA,KAAIF,EAAAA,EAAAA,MAAgB,YAAa4C,EAAKa,KACxDC,QAAqBrD,EAAAA,EAAAA,IAAOmD,GAClC,GAAIE,EAAapD,SAAU,CACzB,MACMmK,EADgB/G,EAAajF,OACAmF,UAChCyB,QACExB,GACCpL,EAAE,cAADW,OAAeyK,EAAS2F,aACzB/Q,EAAE,cAADW,OAAeoQ,MAEnB5I,KAAKiD,IAAkB,CACtB1D,GAAI0D,EAAS1D,GACblI,KAAMQ,EAAEoL,EAAS5L,MACjBuR,SAAU3F,EAAS2F,SACnB9G,WAAYmB,EAASnB,WACrBkH,WAAY/F,EAAS+F,eAEzBsB,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUZ,IACrD/L,EAAQ+L,EACV,CACF,CACAK,GAAW,EACb,CAAE,MAAO9J,GACP+B,EAAWrJ,KAAK,CACdvB,KAAM,QACN6L,QAASvL,EAAE,2BAEf,GAEFqU,EAAgB,GACf,CAACtD,EAAU/Q,EAAGgU,KAGftL,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAvI,SAAA,CACGmK,EACA0J,GACC/T,EAAAA,EAAAA,KAACoU,GAAAA,EAAM,KAEP5L,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAvI,SAAA,EACEF,EAAAA,EAAAA,KAACoD,EAAAA,EAAQ,CAAClD,SAAUJ,EAAE,aAAcH,UAAWM,MAC/CD,EAAAA,EAAAA,KAAA,OAAKL,UAAWM,GAAmBC,SAAEJ,EAAE,qBACvCE,EAAAA,EAAAA,KAAA,OAAKL,UAAWM,GAAaC,SAC1B4F,EAAKtC,OACJsC,EAAKmC,KAAI,CAACkJ,EAAgBd,KACxBrQ,EAAAA,EAAAA,KAACwT,GAAY,CAEXrC,KAAMA,EACNsC,iBAAkBA,EAClB5C,SAAUA,EACV9K,QAASA,EACToM,WAAYA,EACZuB,aAAcA,EACdvH,gBAAiBA,EACjBkE,MAAOA,EACPsD,aAAcA,EACdzH,oBAAqBA,GAVhBiF,EAAK3J,OAcdxH,EAAAA,EAAAA,KAACqE,EAAQ,WAKhB,EC7CP,GApD0BgQ,KACxB,MACMC,GADWC,EAAAA,EAAAA,MACMD,OAChBR,EAAeU,IAAoB7N,EAAAA,EAAAA,UAAS,IAC5Cd,EAAkBqG,IAAuBvF,EAAAA,EAAAA,UAC9C,OAEK+M,EAAcvH,IAAmBxF,EAAAA,EAAAA,UAAwB,MAC1DgN,GAAerG,EAAAA,EAAAA,QAAuB,OAE5CpM,EAAAA,EAAAA,YAAU,KACRoE,OAAOmP,OAAO,EAAG,EAAE,GAClB,IAaH,OACEzU,EAAAA,EAAAA,KAAC8C,EAAAA,EAAW,CAAA5C,UACVsI,EAAAA,EAAAA,MAAA,OAAKnH,MAAO,CAAEqT,UAAW,SAAUxU,SAAA,EACjCF,EAAAA,EAAAA,KAAC+B,EAAAA,EAAgB,CAACxC,KAAM+U,EAAMjG,MAAOrM,UAAU,YAC/ChC,EAAAA,EAAAA,KAAC2Q,GAAW,CACVE,SAAe,OAALyD,QAAK,IAALA,OAAK,EAALA,EAAOjG,MACjBuC,cAjBsB+D,KAC5BH,GAAkBI,GAASA,EAAO,IAE9BjB,EAAalG,SACfkG,EAAalG,QAAQoH,eAAe,CAAElP,SAAU,UAClD,KAcI3F,EAAAA,EAAAA,KAAC6T,GAAS,CACRhD,SAAe,OAALyD,QAAK,IAALA,OAAK,EAALA,EAAOjG,MACjByF,cAAeA,EACfL,iBAdsBvI,GAC5BgB,EAAoBhB,GAcdyI,aAAcA,EACdD,aAAcA,EACdvH,gBAAiBA,EACjBD,oBAAqBA,KAEvBlM,EAAAA,EAAAA,KAAC+M,GAAa,CACZlH,iBAAkBA,EAClBqG,oBAAqBA,EACrBC,gBAAiBA,QAGT,C,iCC3DX,MAAMU,EAAcA,IACzBxH,YAAW,KACTC,OAAOC,SAAS,CACdC,KAAM,EACNC,IAAK,EACLE,SAAU,UACV,GACD,I","sources":["webpack://gymtracker/./src/components/CustomInput/CustomInput.module.scss?82c8","components/CustomInput/CustomInput.tsx","components/CustomModal/CustomModal.tsx","webpack://gymtracker/./src/components/DescriptionTitle/DescriptionTitle.module.scss?64ef","components/DescriptionTitle/DescriptionTitle.tsx","components/PageWrapper/PageWrapper.tsx","webpack://gymtracker/./src/components/ResetButton/ResetButton.module.scss?4be0","components/ResetButton/ResetButton.tsx","webpack://gymtracker/./src/components/SettingButton/SettingButton.module.scss?b1fb","components/SettingButton/SettingButton.tsx","webpack://gymtracker/./src/components/SubTitle/SubTitle.module.scss?d9b0","components/SubTitle/SubTitle.tsx","hooks/useAnimatedInView .tsx","components/EmptyBox/EmptyBox.tsx","webpack://gymtracker/./src/components/NumericInput/NumericInput.module.scss?4f22","components/NumericInput/NumericInput.tsx","utils/scrollToBottom.ts","webpack://gymtracker/./src/pages/Workout/ExerciseTable/ExerciseTable.module.scss?799a","webpack://gymtracker/./src/pages/Workout/ExerciseTable/TableFooter/TableFooter.module.scss?31d1","pages/Workout/ExerciseTable/TableFooter/TableFooter.tsx","webpack://gymtracker/./src/pages/Workout/ExerciseTable/BestResult/BestResult.module.scss?47bd","pages/Workout/ExerciseTable/BestResult/BestResult.tsx","webpack://gymtracker/./src/pages/Workout/ExerciseTable/DeleteWorkout/DeleteWorkout.module.scss?dc25","pages/Workout/ExerciseTable/DeleteWorkout/DeleteWorkout.tsx","pages/Workout/ExerciseTable/ExerciseTable.tsx","webpack://gymtracker/./src/pages/Workout/AddExercise/AddExercise.module.scss?140e","pages/Workout/AddExercise/AddExercise.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/Exercises.module.scss?28b0","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/CardOptions/CardOptions.module.scss?2f2b","pages/Workout/Exercises/ExerciseCard/CardOptions/CardOptions.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/DeleteIcon/DeleteIcon.module.scss?6012","pages/Workout/Exercises/ExerciseCard/DeleteIcon/ModalDelete/ModalDelete.tsx","pages/Workout/Exercises/ExerciseCard/DeleteIcon/DeleteIcon.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/EditInput/EditInput.module.scss?17ed","pages/Workout/Exercises/ExerciseCard/EditInput/EditInput.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/ExerciseCard.module.scss?e0ae","pages/Workout/Exercises/ExerciseCard/ExerciseCard.tsx","pages/Workout/Exercises/Exercises.tsx","pages/Workout/Workout.tsx","utils/scrollToTop.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"CustomInput_inputWrapper__wz8SN\",\"inputLabel\":\"CustomInput_inputLabel__b-QWx\",\"inputField\":\"CustomInput_inputField__baNtE\"};","import { Form, Input } from \"antd\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CustomInputProps, FieldType } from \"../../types/types\";\r\n\r\nimport styles from \"./CustomInput.module.scss\";\r\n\r\nexport const CustomInput: React.FC<CustomInputProps> = ({\r\n  name,\r\n  text,\r\n  type,\r\n  placeholder,\r\n  isRequired = true,\r\n  className,\r\n  onChange,\r\n  value,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    if (onChange) {\r\n      onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.inputWrapper}>\r\n      <Form.Item<FieldType>\r\n        label={<span className={styles.inputLabel}>{t(text)}</span>}\r\n        name={name}\r\n        rules={[{ required: isRequired }]}\r\n      >\r\n        <Input\r\n          type={type}\r\n          placeholder={placeholder}\r\n          className={`${styles.inputField} ${className}`}\r\n          allowClear\r\n          onChange={handleChange}\r\n          value={value}\r\n          autoComplete=\"off\"\r\n        />\r\n      </Form.Item>\r\n    </div>\r\n  );\r\n};\r\n","import { ConfigProvider, Modal } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { CustomModalProps } from \"../../types/types\";\r\n\r\nexport const CustomModal: React.FC<CustomModalProps> = ({\r\n  open,\r\n  onCancel,\r\n  footer = null,\r\n  children,\r\n  className,\r\n}) => {\r\n  useEffect(() => {\r\n    if (open) {\r\n      document.body.style.overflow = \"hidden\";\r\n    } else {\r\n      document.body.style.overflow = \"auto\";\r\n    }\r\n\r\n    return () => {\r\n      document.body.style.overflow = \"auto\";\r\n    };\r\n  }, [open]);\r\n\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        components: {\r\n          Modal: {\r\n            contentBg: \"#141414\",\r\n            colorIcon: \"lightgray\",\r\n            colorIconHover: \"gray\",\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <Modal\r\n        open={open}\r\n        onCancel={onCancel}\r\n        footer={footer}\r\n        style={{ marginTop: \"45px\" }}\r\n        className={className}\r\n      >\r\n        {children}\r\n      </Modal>\r\n    </ConfigProvider>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionTitle\":\"DescriptionTitle_descriptionTitle__E-lRw\",\"start\":\"DescriptionTitle_start__FSu7h\",\"center\":\"DescriptionTitle_center__eJvMJ\",\"end\":\"DescriptionTitle_end__uV+MA\"};","import { motion } from \"framer-motion\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\nimport { CustomButtonProps } from \"../../types/types\";\r\n\r\nimport styles from \"./DescriptionTitle.module.scss\";\r\n\r\nexport const DescriptionTitle: React.FC<CustomButtonProps> = ({\r\n  text,\r\n  textAlign = \"start\",\r\n  className,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { ref, controls } = useAnimatedInView();\r\n\r\n  return (\r\n    <motion.h2\r\n      ref={ref}\r\n      className={`${styles.descriptionTitle} ${styles[textAlign]} ${className}`}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n    >\r\n      {t(text)}\r\n    </motion.h2>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { PageWrapperProps } from \"../../types/types\";\r\n\r\nconst container: React.CSSProperties = {\r\n  maxWidth: \"1200px\",\r\n  margin: \"0 auto\",\r\n};\r\n\r\nexport const PageWrapper: React.FC<PageWrapperProps> = ({ children }) => {\r\n  return <div style={container}>{children}</div>;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"reset\":\"ResetButton_reset__efwrw\"};","import React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nimport { ResetBtnType } from \"../../types/types\";\r\n\r\nimport styles from \"./ResetButton.module.scss\";\r\n\r\nexport const ResetButton: React.FC<ResetBtnType> = ({\r\n  onClick,\r\n  children,\r\n  icon,\r\n}) => {\r\n  return (\r\n    <Button className={styles.reset} onClick={onClick} icon={icon}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"SettingButton_btn__TNlVz\"};","import { Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nimport styles from \"./SettingButton.module.scss\";\r\n\r\nexport type SettingButtonPropsType = {\r\n  onClick?: (e: any) => void;\r\n  icon?: React.ReactNode;\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n};\r\n\r\nexport const SettingButton: React.FC<SettingButtonPropsType> = ({\r\n  onClick,\r\n  icon,\r\n  children,\r\n  className,\r\n}) => {\r\n  return (\r\n    <Button\r\n      onClick={onClick}\r\n      icon={icon}\r\n      className={`${styles.btn} ${className}`}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"subTitle\":\"SubTitle_subTitle__6A8PN\"};","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\nimport { SubTitleType } from \"../../types/types\";\r\n\r\nimport styles from \"./SubTitle.module.scss\";\r\n\r\nexport const SubTitle: React.FC<SubTitleType> = ({ children, className }) => {\r\n  const { ref, controls } = useAnimatedInView();\r\n\r\n  return (\r\n    <motion.p\r\n      ref={ref}\r\n      className={`${styles.subTitle} ${className}`}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n    >\r\n      {children}\r\n    </motion.p>\r\n  );\r\n};\r\n","import { useAnimation, Variants } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useAnimatedInView = (\r\n  threshold: number = 0.1,\r\n  triggerOnce: boolean = false,\r\n  animationVariants?: Variants\r\n) => {\r\n  const controls = useAnimation();\r\n  const [ref, inView] = useInView({ threshold, triggerOnce });\r\n\r\n  useEffect(() => {\r\n    if (inView) {\r\n      controls.start(\"visible\");\r\n    } else {\r\n      controls.start(\"hidden\");\r\n    }\r\n  }, [controls, inView]);\r\n\r\n  return { ref, controls, animationVariants };\r\n};\r\n\r\nexport const animation = {\r\n  hidden: { opacity: 0 },\r\n  visible: { opacity: 1, transition: { duration: 1 } },\r\n};\r\n","import { Empty } from \"antd\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const EmptyBox: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Empty\r\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n      description={<span style={{ color: \"#ffffff\" }}>{t(\"noData\")}</span>}\r\n    />\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"NumericInput_input__1SATw\"};","import React, { forwardRef, ChangeEvent } from \"react\";\r\n\r\nimport { NumericInputProps } from \"../../types/types\";\r\n\r\nimport styles from \"./NumericInput.module.scss\";\r\n\r\nconst NumericInput: React.ForwardRefRenderFunction<\r\n  HTMLInputElement,\r\n  NumericInputProps\r\n> = ({ value, onChange, onBlur }, ref) => {\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let value = e.target.value;\r\n    value = value.replace(\",\", \".\");\r\n\r\n    if (value.length > 1 && value.startsWith(\"0\") && !value.startsWith(\"0.\")) {\r\n      value = value.substring(1);\r\n    }\r\n\r\n    if (/^\\d*\\.?\\d*$/.test(value)) {\r\n      onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      ref={ref}\r\n      value={value}\r\n      onChange={handleChange}\r\n      onBlur={onBlur}\r\n      className={styles.input}\r\n      type=\"text\"\r\n      inputMode=\"decimal\"\r\n      pattern=\"[0-9]*[.,]?[0-9]*\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default forwardRef(NumericInput);\r\n","export const scrollToBottom = () =>\r\n  setTimeout(() => {\r\n    window.scrollTo({\r\n      left: 0,\r\n      top: document.body.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, 100);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableTitle\":\"ExerciseTable_tableTitle__nWHV1\",\"subtitle\":\"ExerciseTable_subtitle__dWB0y\",\"dateAndDelete\":\"ExerciseTable_dateAndDelete__Rghoq\",\"table\":\"ExerciseTable_table__gqYvK\",\"editableDiv\":\"ExerciseTable_editableDiv__lnIPx\",\"repsAndDelete\":\"ExerciseTable_repsAndDelete__sJi7S\"};","// extracted by mini-css-extract-plugin\nexport default {\"tableFooter\":\"TableFooter_tableFooter__Vdj4o\",\"saveBtn\":\"TableFooter_saveBtn__CLumP\"};","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  RightOutlined,\r\n  CloseOutlined,\r\n  LeftOutlined,\r\n  PlusOutlined,\r\n  CheckOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { collection, doc, getDoc, getFirestore } from \"firebase/firestore\";\r\n\r\nimport { CustomButton } from \"../../../../components/CustomButton/CustomButton\";\r\nimport {\r\n  ExerciseTableType,\r\n  TableFooterPropsType,\r\n} from \"../../../../types/types\";\r\nimport { SettingButton } from \"../../../../components/SettingButton/SettingButton\";\r\n\r\nimport styles from \"./TableFooter.module.scss\";\r\n\r\nexport const TableFooter: React.FC<TableFooterPropsType> = ({\r\n  selectedExercise,\r\n  data,\r\n  setData,\r\n  setEditWeight,\r\n  saveExerciseData,\r\n  onWorkoutDateChange,\r\n  setCurrentWorkout,\r\n  addRowBtn,\r\n  setAddRowBtn,\r\n  saveBtn,\r\n  setSaveBtn,\r\n  setDeleteBtn,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [workouts, setWorkouts] = useState<ExerciseTableType[][]>([]);\r\n  const [workoutDates, setWorkoutDates] = useState<string[]>([]);\r\n  const [currentWorkoutIndex, setCurrentWorkoutIndex] = useState<number>(-1);\r\n  const [hideButtons, setHideButtons] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadWorkouts = async () => {\r\n      if (selectedExercise) {\r\n        const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n        const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n        try {\r\n          const docSnapshot = await getDoc(setDocRef);\r\n          if (docSnapshot.exists()) {\r\n            const setData = docSnapshot.data();\r\n            const workouts = setData?.workouts || [];\r\n\r\n            if (\r\n              Array.isArray(workouts) &&\r\n              workouts.every((workout) => Array.isArray(workout.approaches))\r\n            ) {\r\n              setWorkouts(workouts.map((workout) => workout.approaches || []));\r\n              setWorkoutDates(workouts.map((workout) => workout.date));\r\n              const lastIndex = workouts.length - 1;\r\n              setCurrentWorkoutIndex(lastIndex);\r\n              onWorkoutDateChange(workouts[lastIndex].date);\r\n            } else {\r\n              console.error(\"Workouts data format is incorrect.\");\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error loading workouts:\", error);\r\n        }\r\n      }\r\n    };\r\n    setHideButtons(false);\r\n    loadWorkouts();\r\n  }, [selectedExercise]);\r\n\r\n  const addRow = () => {\r\n    if (!selectedExercise) {\r\n      return;\r\n    }\r\n    const newData = [...data];\r\n    const nextSet =\r\n      newData.length > 0 ? newData[newData.length - 1].set + 1 : 1;\r\n\r\n    const newRow: ExerciseTableType = {\r\n      key: nextSet.toString(),\r\n      weight: \"\",\r\n      set: nextSet,\r\n      reps: \"\",\r\n      icon: <CloseOutlined />,\r\n    };\r\n\r\n    newData.push(newRow);\r\n    setData(newData);\r\n    setEditWeight(newRow.key);\r\n  };\r\n\r\n  const startNewTraining = () => {\r\n    setData([]);\r\n    setAddRowBtn(true);\r\n    setSaveBtn(true);\r\n    setHideButtons(true);\r\n    setCurrentWorkout(true);\r\n    setDeleteBtn(false);\r\n  };\r\n\r\n  const showPreviousWorkout = () => {\r\n    if (currentWorkoutIndex > 0) {\r\n      const newIndex = currentWorkoutIndex - 1;\r\n      setCurrentWorkoutIndex(newIndex);\r\n      setData(workouts[newIndex] || []);\r\n      onWorkoutDateChange(workoutDates[newIndex]);\r\n    }\r\n  };\r\n\r\n  const showNextWorkout = () => {\r\n    if (currentWorkoutIndex < workouts.length - 1) {\r\n      const newIndex = currentWorkoutIndex + 1;\r\n      setCurrentWorkoutIndex(newIndex);\r\n      setData(workouts[newIndex] || []);\r\n      onWorkoutDateChange(workoutDates[newIndex]);\r\n    }\r\n  };\r\n\r\n  const isLastWorkout = currentWorkoutIndex === workouts.length - 1;\r\n\r\n  return (\r\n    <>\r\n      {addRowBtn && (\r\n        <SettingButton onClick={addRow} icon={<PlusOutlined />}>\r\n          {t(\"addRow\")}\r\n        </SettingButton>\r\n      )}\r\n      {saveBtn && (\r\n        <div className={styles.saveBtn}>\r\n          <CustomButton onClick={saveExerciseData} icon={<CheckOutlined />}>\r\n            {t(\"saveTraining\")}\r\n          </CustomButton>\r\n        </div>\r\n      )}\r\n      <div className={styles.tableFooter}>\r\n        {!hideButtons && currentWorkoutIndex > 0 ? (\r\n          <CustomButton onClick={showPreviousWorkout} icon={<LeftOutlined />}>\r\n            {t(\"previous\")}\r\n          </CustomButton>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {!hideButtons && !isLastWorkout && (\r\n          <CustomButton onClick={showNextWorkout} icon={<RightOutlined />}>\r\n            {t(\"next\")}\r\n          </CustomButton>\r\n        )}\r\n        {!hideButtons && isLastWorkout && (\r\n          <CustomButton onClick={startNewTraining}>\r\n            {t(\"newEntry\")}\r\n            <RightOutlined />\r\n          </CustomButton>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"collapse\":\"BestResult_collapse__pQyb-\",\"title\":\"BestResult_title__jsqEH\",\"wrapper\":\"BestResult_wrapper__1-LYV\",\"editBtn\":\"BestResult_editBtn__8ELAU\"};","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CheckOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport { Collapse, message } from \"antd\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { SettingButton } from \"../../../../components/SettingButton/SettingButton\";\r\nimport NumericInput from \"../../../../components/NumericInput/NumericInput\";\r\nimport { BestResultProps, Exercise } from \"../../../../types/types\";\r\n\r\nimport styles from \"./BestResult.module.scss\";\r\n\r\nexport const BestResult: React.FC<BestResultProps> = ({\r\n  bestResult,\r\n  selectedExercise,\r\n  setBestResult,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const user = getAuth().currentUser;\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const [weight, setWeight] = useState<string>(bestResult?.weight || \"0\");\r\n  const [reps, setReps] = useState<string>(bestResult?.reps || \"0\");\r\n\r\n  useEffect(() => {\r\n    setWeight(bestResult?.weight || \"0\");\r\n    setReps(bestResult?.reps || \"0\");\r\n  }, [bestResult]);\r\n\r\n  const saveBestResult = async (updatedBestResult: {\r\n    weight: string;\r\n    reps: string;\r\n  }) => {\r\n    if (user && selectedExercise) {\r\n      const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n      try {\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          const updatedExercises = exercisesData.exercises.map(\r\n            (exercise: Exercise) => {\r\n              if (exercise.id === selectedExercise.id) {\r\n                return {\r\n                  ...exercise,\r\n                  bestResult: updatedBestResult,\r\n                };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          await updateDoc(exercisesDocRef, { exercises: updatedExercises });\r\n          setBestResult(updatedBestResult);\r\n        } else {\r\n          messageApi.open({\r\n            type: \"error\",\r\n            content: t(\"noExercisesFound\"),\r\n          });\r\n        }\r\n      } catch (error) {\r\n        messageApi.open({\r\n          type: \"error\",\r\n          content: t(\"errorSavingBestResult\"),\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    saveBestResult({ weight, reps });\r\n    setEditMode(false);\r\n    messageApi.open({\r\n      type: \"success\",\r\n      content: t(\"recordUpdated\"),\r\n    });\r\n  };\r\n\r\n  const genExtra = () => (\r\n    <img\r\n      src={process.env.PUBLIC_URL + \"/assets/Icons/AdditionalIcons/trophy.png\"}\r\n    />\r\n  );\r\n\r\n  const items = [\r\n    {\r\n      key: \"1\",\r\n      label: <div className={styles.title}>{t(\"bestExerciseResult\")}</div>,\r\n      children: (\r\n        <>\r\n          {editMode ? (\r\n            <>\r\n              <div className={styles.wrapper}>\r\n                <div>\r\n                  <NumericInput\r\n                    value={weight}\r\n                    onChange={setWeight}\r\n                    onBlur={handleSave}\r\n                  />\r\n                  <span>{t(\"kg\")}</span>\r\n                </div>\r\n                <div>\r\n                  <NumericInput\r\n                    value={reps}\r\n                    onChange={setReps}\r\n                    onBlur={handleSave}\r\n                  />\r\n                  <span>{t(\"bestResultReps\")}</span>\r\n                </div>\r\n              </div>\r\n              <div className={styles.editBtn}>\r\n                <SettingButton icon={<CheckOutlined />} onClick={handleSave}>\r\n                  <span>{t(\"saveRecord\")}</span>\r\n                </SettingButton>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <div className={styles.wrapper}>\r\n                <div>\r\n                  {weight} {t(\"kg\")}\r\n                </div>\r\n                <div>\r\n                  {reps} {t(\"bestResultReps\")}\r\n                </div>\r\n              </div>\r\n              <div className={styles.editBtn}>\r\n                <SettingButton\r\n                  icon={<EditOutlined />}\r\n                  onClick={() => setEditMode(true)}\r\n                >\r\n                  <span>{t(\"updateRecord\")}</span>\r\n                </SettingButton>\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      ),\r\n      extra: genExtra(),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.collapse}>\r\n      {contextHolder}\r\n      <Collapse size=\"large\" items={items} bordered={false} />\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"deleteWorkout\":\"DeleteWorkout_deleteWorkout__T7qoY\",\"confirm\":\"DeleteWorkout_confirm__yTni8\",\"deleteBtn\":\"DeleteWorkout_deleteBtn__u1SVc\"};","import React, { useState } from \"react\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  collection,\r\n  getFirestore,\r\n  getDoc,\r\n  updateDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { message } from \"antd\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { ResetButton } from \"../../../../components/ResetButton/ResetButton\";\r\nimport { DeleteWorkoutProps } from \"../../../../types/types\";\r\nimport { CustomModal } from \"../../../../components/CustomModal/CustomModal\";\r\nimport { scrollToTop } from \"../../../../utils/scrollToTop\";\r\n\r\nimport styles from \"./DeleteWorkout.module.scss\";\r\n\r\nexport const DeleteWorkout: React.FC<DeleteWorkoutProps> = ({\r\n  workoutDate,\r\n  selectedExercise,\r\n  setData,\r\n  setWorkoutDate,\r\n  setSelectedExercise,\r\n  setActiveCardId,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const user = getAuth().currentUser;\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n\r\n  const deleteWorkoutByDate = async () => {\r\n    if (!workoutDate || !selectedExercise || !user) return;\r\n\r\n    const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n    const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n\r\n    try {\r\n      const docSnapshot = await getDoc(setDocRef);\r\n      if (docSnapshot.exists()) {\r\n        const documentData = docSnapshot.data();\r\n        const workouts = documentData.workouts || [];\r\n        const filteredWorkouts = workouts.filter(\r\n          (workout: { date: string | number | Date }) =>\r\n            new Date(workout.date).toLocaleString() !== workoutDate\r\n        );\r\n\r\n        await updateDoc(setDocRef, { workouts: filteredWorkouts });\r\n\r\n        setData([]);\r\n        setWorkoutDate(null);\r\n        setSelectedExercise(null);\r\n        setActiveCardId(null);\r\n        scrollToTop();\r\n        setIsModalOpen(false);\r\n\r\n        messageApi.open({\r\n          type: \"success\",\r\n          content: t(\"workoutDeleted\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      messageApi.open({\r\n        type: \"error\",\r\n        content: t(\"errorDeletingWorkout\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    if (!workoutDate || !selectedExercise) {\r\n      messageApi.open({\r\n        type: \"error\",\r\n        content: t(\"noDataToDelete\"),\r\n      });\r\n      return;\r\n    }\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const deleteWorkout = (e: { stopPropagation: () => void }) => {\r\n    e.stopPropagation();\r\n    deleteWorkoutByDate();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <div className={styles.deleteWorkout}>\r\n        <ResetButton icon={<DeleteOutlined />} onClick={confirmDelete}>\r\n          {t(\"deleteWorkout\")}\r\n        </ResetButton>\r\n      </div>\r\n      <CustomModal\r\n        open={isModalOpen}\r\n        onCancel={(e) => {\r\n          setIsModalOpen(false);\r\n        }}\r\n        footer={false}\r\n      >\r\n        <p className={styles.confirm}>{t(\"confirmDeletingWorkout\")}</p>\r\n        <div className={styles.deleteBtn}>\r\n          <ResetButton\r\n            children={t(\"delete\")}\r\n            onClick={deleteWorkout}\r\n            icon={<DeleteOutlined />}\r\n          />\r\n        </div>\r\n      </CustomModal>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { ConfigProvider, Divider, message, Table } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  writeBatch,\r\n} from \"firebase/firestore\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport {\r\n  Exercise,\r\n  ExerciseTablePropsType,\r\n  ExerciseTableType,\r\n} from \"../../../types/types\";\r\nimport { EmptyBox } from \"../../../components/EmptyBox/EmptyBox\";\r\nimport NumericInput from \"../../../components/NumericInput/NumericInput\";\r\nimport { scrollToBottom } from \"../../../utils/scrollToBottom\";\r\n\r\nimport styles from \"./ExerciseTable.module.scss\";\r\nimport { TableFooter } from \"./TableFooter/TableFooter\";\r\nimport { BestResult } from \"./BestResult/BestResult\";\r\nimport { DeleteWorkout } from \"./DeleteWorkout/DeleteWorkout\";\r\n\r\nexport const ExerciseTable: React.FC<ExerciseTablePropsType> = ({\r\n  selectedExercise,\r\n  setSelectedExercise,\r\n  setActiveCardId,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [data, setData] = useState<ExerciseTableType[]>([]);\r\n  const [bestResult, setBestResult] = useState<{\r\n    weight: string;\r\n    reps: string;\r\n  } | null>(null);\r\n  const [editWeight, setEditWeight] = useState<string | null>(null);\r\n  const [editReps, setEditReps] = useState<string | null>(null);\r\n  const [workoutDate, setWorkoutDate] = useState<string | null>(null);\r\n  const [currentWorkout, setCurrentWorkout] = useState(false);\r\n  const [addRowBtn, setAddRowBtn] = useState(false);\r\n  const [saveBtn, setSaveBtn] = useState(false);\r\n  const [deleteBtn, setDeleteBtn] = useState(true);\r\n\r\n  const weightInputRef = useRef<HTMLInputElement | null>(null);\r\n  const repsInputRef = useRef<HTMLInputElement | null>(null);\r\n  const user = getAuth().currentUser;\r\n\r\n  useEffect(() => {\r\n    if (selectedExercise) {\r\n      loadExerciseData();\r\n    } else {\r\n      setData([]);\r\n    }\r\n  }, [selectedExercise]);\r\n\r\n  useEffect(() => {\r\n    if (editReps && repsInputRef.current) {\r\n      repsInputRef.current.focus();\r\n    }\r\n    if (editWeight && weightInputRef.current) {\r\n      weightInputRef.current.focus();\r\n    }\r\n  }, [editReps, editWeight]);\r\n\r\n  const loadExerciseData = async () => {\r\n    if (user && selectedExercise) {\r\n      const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n      const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n      const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n\r\n      try {\r\n        const [docSnapshot, exercisesDoc] = await Promise.all([\r\n          getDoc(setDocRef),\r\n          getDoc(exercisesDocRef),\r\n        ]);\r\n\r\n        if (docSnapshot.exists()) {\r\n          const documentData = docSnapshot.data();\r\n          const workouts = documentData?.workouts || [];\r\n\r\n          if (workouts.length > 0) {\r\n            const latestWorkout = workouts[workouts.length - 1];\r\n            const workoutDate = new Date(latestWorkout.date).toLocaleString();\r\n\r\n            setWorkoutDate(workoutDate);\r\n            const approaches = latestWorkout.approaches || [];\r\n            const loadedData: ExerciseTableType[] = approaches.map(\r\n              (approach: {\r\n                id: string;\r\n                set: number;\r\n                weight: string;\r\n                reps: string;\r\n              }) => ({\r\n                key: approach.id,\r\n                set: approach.set,\r\n                weight: approach.weight,\r\n                reps: approach.reps,\r\n                icon: <CloseOutlined />,\r\n              })\r\n            );\r\n            setData(loadedData);\r\n            scrollToBottom();\r\n          } else {\r\n            setData([]);\r\n            setWorkoutDate(null);\r\n            scrollToBottom();\r\n          }\r\n\r\n          setDeleteBtn(workouts.length > 0);\r\n\r\n          if (exercisesDoc.exists()) {\r\n            const exercisesData = exercisesDoc.data();\r\n            const exercise = exercisesData.exercises.find(\r\n              (ex: { id: string }) => ex.id === selectedExercise.id\r\n            );\r\n            if (exercise) {\r\n              setBestResult(exercise.bestResult);\r\n            }\r\n          }\r\n\r\n          setAddRowBtn(true);\r\n          setSaveBtn(true);\r\n        } else {\r\n          setData([]);\r\n          setWorkoutDate(null);\r\n          scrollToBottom();\r\n          setDeleteBtn(false);\r\n        }\r\n\r\n        setAddRowBtn(false);\r\n        setSaveBtn(false);\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveExerciseData = async () => {\r\n    if (user && selectedExercise) {\r\n      const validData = data.filter(\r\n        (row) => Number(row.reps) > 0 && Number(row.weight) > 0\r\n      );\r\n\r\n      if (validData.length === 0) {\r\n        messageApi.open({\r\n          type: \"error\",\r\n          content: t(\"noDataToSave\"),\r\n        });\r\n        return;\r\n      }\r\n      const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n      const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n\r\n      try {\r\n        const batch = writeBatch(getFirestore());\r\n        const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n\r\n        const setDoc = await getDoc(setDocRef);\r\n        const setData = setDoc.exists() ? setDoc.data() : { workouts: [] };\r\n\r\n        const newWorkout = {\r\n          id: uuidv4(),\r\n          date: new Date().toISOString(),\r\n          approaches: validData.map((row, index) => ({\r\n            id: uuidv4(),\r\n            set: index + 1,\r\n            reps: row.reps,\r\n            weight: row.weight,\r\n          })),\r\n        };\r\n\r\n        setData.workouts.push(newWorkout);\r\n        batch.set(setDocRef, setData);\r\n\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          const updatedExercises = exercisesData.exercises.map(\r\n            (exercise: Exercise) => {\r\n              if (exercise.id === selectedExercise.id) {\r\n                return {\r\n                  ...exercise,\r\n                };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          batch.update(exercisesDocRef, { exercises: updatedExercises });\r\n        }\r\n\r\n        await batch.commit();\r\n\r\n        setCurrentWorkout(false);\r\n        setAddRowBtn(false);\r\n        setSaveBtn(false);\r\n\r\n        messageApi.open({\r\n          type: \"success\",\r\n          content: t(\"exerciseDataSaved\"),\r\n        });\r\n      } catch (error) {\r\n        messageApi.open({\r\n          type: \"error\",\r\n          content: t(\"errorSavingExerciseData\"),\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateWeight = (key: string, value: string) => {\r\n    const newData = data.map((row) => {\r\n      if (row.key === key) {\r\n        return { ...row, weight: value };\r\n      }\r\n      return row;\r\n    });\r\n    setData(newData);\r\n  };\r\n\r\n  const updateReps = (key: string, value: string) => {\r\n    const newData = data.map((row) => {\r\n      if (row.key === key) {\r\n        return { ...row, reps: value };\r\n      }\r\n      return row;\r\n    });\r\n    setData(newData);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: `${t(\"set\")}`,\r\n      dataIndex: \"set\",\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: `${t(\"weight\")}`,\r\n      dataIndex: \"weight\",\r\n      width: \"30%\",\r\n      render: (text: string, record: ExerciseTableType) =>\r\n        currentWorkout ? (\r\n          editWeight === record.key ? (\r\n            <NumericInput\r\n              ref={weightInputRef}\r\n              value={record.weight}\r\n              onChange={(value) => updateWeight(record.key, value)}\r\n              onBlur={() => setEditWeight(null)}\r\n            />\r\n          ) : (\r\n            <div\r\n              onClick={() => setEditWeight(record.key)}\r\n              className={styles.editableDiv}\r\n            >\r\n              {record.weight || t(\"clickToEdit\")}\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className={styles.editableDiv}>{record.weight}</div>\r\n        ),\r\n    },\r\n    {\r\n      title: `${t(\"reps\")}`,\r\n      dataIndex: \"reps\",\r\n      width: \"25%\",\r\n      render: (text: string, record: ExerciseTableType) =>\r\n        currentWorkout ? (\r\n          editReps === record.key ? (\r\n            <NumericInput\r\n              ref={repsInputRef}\r\n              value={record.reps}\r\n              onChange={(value) => updateReps(record.key, value)}\r\n              onBlur={() => setEditReps(null)}\r\n            />\r\n          ) : (\r\n            <div className={styles.repsAndDelete}>\r\n              <div\r\n                onClick={() => setEditReps(record.key)}\r\n                className={styles.editableDiv}\r\n              >\r\n                {record.reps || t(\"clickToEdit\")}\r\n              </div>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className={styles.editableDiv}>{record.reps}</div>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  const handleWorkoutDateChange = (date: string) => {\r\n    const workoutDate = new Date(date);\r\n    const formattedDate = workoutDate.toLocaleString();\r\n    if (!isNaN(workoutDate.getTime())) {\r\n      setWorkoutDate(formattedDate);\r\n      setCurrentWorkout(false);\r\n    } else {\r\n      console.error(\"Invalid date:\", date);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Divider style={{ backgroundColor: \"gray\" }} />\r\n      <div className={styles.tableTitle}>\r\n        <SubTitle\r\n          children={selectedExercise?.name || t(\"noExerciseSelected\")}\r\n          className={styles.subtitle}\r\n        />\r\n      </div>\r\n      <ConfigProvider\r\n        theme={{\r\n          components: {\r\n            Table: {\r\n              headerBg: \"#1A1A1A\",\r\n              headerColor: \"#ffffff\",\r\n              cellFontSize: 18,\r\n              colorBgContainer: \"#282828\",\r\n              colorText: \"#ffffff\",\r\n              borderColor: \"#535353\",\r\n              cellPaddingBlock: 13,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        {selectedExercise ? (\r\n          <>\r\n            <BestResult\r\n              bestResult={bestResult}\r\n              selectedExercise={selectedExercise}\r\n              setBestResult={setBestResult}\r\n            />\r\n            {currentWorkout ? (\r\n              <div className={styles.dateAndDelete}>\r\n                {t(\"workoutDate\")}: {new Date().toLocaleDateString()}\r\n              </div>\r\n            ) : (\r\n              <div className={styles.dateAndDelete}>\r\n                {t(\"workoutDate\")}: {workoutDate ? workoutDate : \". . .\"}\r\n              </div>\r\n            )}\r\n            <Table\r\n              rowKey={(record) => record.key}\r\n              columns={columns}\r\n              dataSource={data}\r\n              pagination={false}\r\n              className={styles.table}\r\n              locale={{ emptyText: <EmptyBox /> }}\r\n            />\r\n            <TableFooter\r\n              selectedExercise={selectedExercise}\r\n              data={data}\r\n              setData={setData}\r\n              setEditWeight={setEditWeight}\r\n              saveExerciseData={saveExerciseData}\r\n              onWorkoutDateChange={handleWorkoutDateChange}\r\n              setCurrentWorkout={setCurrentWorkout}\r\n              addRowBtn={addRowBtn}\r\n              setAddRowBtn={setAddRowBtn}\r\n              saveBtn={saveBtn}\r\n              setSaveBtn={setSaveBtn}\r\n              setDeleteBtn={setDeleteBtn}\r\n            />\r\n            {deleteBtn && (\r\n              <DeleteWorkout\r\n                workoutDate={workoutDate}\r\n                selectedExercise={selectedExercise}\r\n                setData={setData}\r\n                setWorkoutDate={setWorkoutDate}\r\n                setSelectedExercise={setSelectedExercise}\r\n                setActiveCardId={setActiveCardId}\r\n              />\r\n            )}\r\n          </>\r\n        ) : (\r\n          <Table\r\n            columns={columns}\r\n            className={styles.table}\r\n            locale={{ emptyText: <EmptyBox /> }}\r\n          />\r\n        )}\r\n      </ConfigProvider>\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"addExercise\":\"AddExercise_addExercise__7FNxa\",\"button\":\"AddExercise_button__mkO2c\"};","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport { message } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { CustomButton } from \"../../../components/CustomButton/CustomButton\";\r\nimport { CustomInput } from \"../../../components/CustomInput/CustomInput\";\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport { IAddExercise } from \"../../../types/types\";\r\n\r\nimport styles from \"./AddExercise.module.scss\";\r\n\r\nexport const AddExercise: React.FC<IAddExercise> = ({\r\n  onAddExercise,\r\n  category,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [exerciseName, setExerciseName] = useState(\"\");\r\n\r\n  const handleAddExercise = async () => {\r\n    if (!exerciseName) {\r\n      messageApi.open({\r\n        type: \"error\",\r\n        content: t(\"typeExercise\"),\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      const user = getAuth().currentUser;\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercise = {\r\n          id: uuidv4(),\r\n          name: exerciseName,\r\n          category: category,\r\n          bestResult: {\r\n            weight: \"0\",\r\n            reps: \"0\",\r\n          },\r\n          isFavorite: false,\r\n        };\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n        const docSnapshot = await getDoc(exercisesDocRef);\r\n\r\n        if (docSnapshot.exists()) {\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: [...docSnapshot.data().exercises, exercise],\r\n          });\r\n        } else {\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: [exercise],\r\n          });\r\n        }\r\n        setExerciseName(\"\");\r\n        onAddExercise();\r\n        messageApi.open({\r\n          type: \"success\",\r\n          content: t(\"exerciseAdded\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      messageApi.open({\r\n        type: \"error\",\r\n        content: t(\"errorAddingExercise\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <SubTitle>{t(\"addAnExercise\")}</SubTitle>\r\n      <div className={styles.addExercise}>\r\n        <CustomInput\r\n          value={exerciseName}\r\n          onChange={(value: string) => setExerciseName(value)}\r\n          text={t(\"exerciseName\")}\r\n          placeholder={t(\"typeExercise\")}\r\n        />\r\n        <CustomButton\r\n          className={styles.button}\r\n          icon={<PlusOutlined />}\r\n          onClick={handleAddExercise}\r\n        >\r\n          {t(\"addExerciseBtn\")}\r\n        </CustomButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Exercises_title__ThgWQ\",\"description\":\"Exercises_description__cykz7\",\"cards\":\"Exercises_cards__+xw7k\"};","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"CardOptions_options__F-aCP\",\"star\":\"CardOptions_star__tS7rd\",\"active\":\"CardOptions_active__E3ut+\",\"editExercise\":\"CardOptions_editExercise__JcxiY\"};","import React, { useState } from \"react\";\r\nimport { EditOutlined, StarFilled } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { message } from \"antd\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { CardOptionsPropsType } from \"../../../../../types/types\";\r\nimport { SettingButton } from \"../../../../../components/SettingButton/SettingButton\";\r\n\r\nimport styles from \"./CardOptions.module.scss\";\r\n\r\nexport const CardOptions: React.FC<CardOptionsPropsType> = ({\r\n  item,\r\n  category,\r\n  setData,\r\n  setCurrentEditingId,\r\n  setNewName,\r\n  setEditMode,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [isActive, setIsActive] = useState<boolean>(false);\r\n\r\n  const toggleFavorite = async (exerciseId: string, currentStatus: boolean) => {\r\n    try {\r\n      const user = getAuth().currentUser;\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          const favoriteExercisesCount = exercisesData.exercises.filter(\r\n            (exercise: { isFavorite: boolean }) => exercise.isFavorite\r\n          ).length;\r\n\r\n          if (!currentStatus && favoriteExercisesCount >= 3) {\r\n            messageApi.open({\r\n              type: \"error\",\r\n              content: t(\"maxFavoritesReached\"),\r\n            });\r\n            return;\r\n          }\r\n\r\n          let updatedExercises = exercisesData.exercises.map(\r\n            (exercise: { id: string }) => {\r\n              if (exercise.id === exerciseId) {\r\n                return { ...exercise, isFavorite: !currentStatus };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: updatedExercises,\r\n          });\r\n\r\n          const translatedCategory = t(`categories.${category}`);\r\n          const filteredData = updatedExercises.filter(\r\n            (exercise: { category: string }) =>\r\n              t(`categories.${exercise.category}`) === translatedCategory\r\n          );\r\n          setData(filteredData);\r\n        }\r\n\r\n        if (!currentStatus) {\r\n          messageApi.open({\r\n            type: \"success\",\r\n            content: t(\"addedToFavorite\"),\r\n          });\r\n        } else {\r\n          messageApi.open({\r\n            type: \"success\",\r\n            content: t(\"removedFromFavorite\"),\r\n          });\r\n        }\r\n        setIsActive(!isActive);\r\n      }\r\n    } catch (error) {\r\n      messageApi.open({\r\n        type: \"error\",\r\n        content: t(\"errorUpdatingFavorite\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (exerciseId: string, currentName: string) => {\r\n    setCurrentEditingId(exerciseId);\r\n    setNewName(currentName);\r\n    setEditMode(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.options}>\r\n      {contextHolder}\r\n      <SettingButton\r\n        icon={<StarFilled />}\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          toggleFavorite(item.id, item.isFavorite);\r\n        }}\r\n        className={`${styles.star} ${item.isFavorite ? styles.active : \"\"}`}\r\n      >\r\n        <span>{t(\"favorite\")}</span>\r\n      </SettingButton>\r\n      <SettingButton\r\n        icon={<EditOutlined />}\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          handleEditClick(item.id, item.name);\r\n        }}\r\n        className={styles.editExercise}\r\n      >\r\n        <span>{t(\"editName\")}</span>\r\n      </SettingButton>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"deleteIconContainer\":\"DeleteIcon_deleteIconContainer__IWqYi\",\"exerciseNumber\":\"DeleteIcon_exerciseNumber__Q9Zs7\",\"deleteIcon\":\"DeleteIcon_deleteIcon__ntbKM\",\"confirm\":\"DeleteIcon_confirm__0yMiT\",\"deleteSave\":\"DeleteIcon_deleteSave__joWfR\"};","import React from \"react\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  deleteDoc,\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { message } from \"antd\";\r\n\r\nimport { CustomModal } from \"../../../../../../components/CustomModal/CustomModal\";\r\nimport { ResetButton } from \"../../../../../../components/ResetButton/ResetButton\";\r\nimport { ModalDeletePropsType, Exercise } from \"../../../../../../types/types\";\r\nimport { scrollToTop } from \"../../../../../../utils/scrollToTop\";\r\n\r\nimport styles from \"../DeleteIcon.module.scss\";\r\n\r\nexport const ModalDelete: React.FC<ModalDeletePropsType> = ({\r\n  setLoading,\r\n  setIsModalOpen,\r\n  category,\r\n  setData,\r\n  isModalOpen,\r\n  handleCancel,\r\n  item,\r\n  setConfirm,\r\n  setSelectedExercise,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n\r\n  const handleDeleteCard = async (exerciseId: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const user = getAuth().currentUser;\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n        const setsCollectionRef = doc(getFirestore(), \"sets\", exerciseId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n        await deleteDoc(setsCollectionRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          let updatedExercises: Exercise[] = [];\r\n\r\n          if (exercisesData && exercisesData.exercises) {\r\n            updatedExercises = exercisesData.exercises.filter(\r\n              (exercise: Exercise) => exercise.id !== exerciseId\r\n            );\r\n\r\n            await updateDoc(exercisesDocRef, {\r\n              exercises: updatedExercises,\r\n            });\r\n\r\n            const filteredData = updatedExercises.filter(\r\n              (exercise: Exercise) =>\r\n                t(`categories.${exercise.category}`) ===\r\n                t(`categories.${category}`)\r\n            );\r\n            setData(filteredData);\r\n            localStorage.setItem(\"exercisesData\", JSON.stringify(filteredData));\r\n          }\r\n        }\r\n        setConfirm(false);\r\n        setIsModalOpen(false);\r\n        setLoading(false);\r\n        setSelectedExercise(null);\r\n        scrollToTop();\r\n\r\n        messageApi.open({\r\n          type: \"success\",\r\n          content: t(\"exerciseDeleted\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      messageApi.open({\r\n        type: \"error\",\r\n        content: t(\"errorDeletingExercise\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CustomModal\r\n      open={isModalOpen}\r\n      onCancel={(e) => {\r\n        handleCancel(e);\r\n        setIsModalOpen(false);\r\n      }}\r\n      footer={false}\r\n    >\r\n      {contextHolder}\r\n      <p className={styles.confirm}>{t(\"confirmDeletingExercise\")}</p>\r\n      <div className={styles.deleteSave}>\r\n        <ResetButton\r\n          children={t(\"delete\")}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleDeleteCard(item.id);\r\n          }}\r\n          icon={<DeleteOutlined />}\r\n        />\r\n      </div>\r\n    </CustomModal>\r\n  );\r\n};\r\n","import { CloseOutlined } from \"@ant-design/icons\";\r\nimport { Tooltip } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { DeleteIconPropsType } from \"../../../../../types/types\";\r\n\r\nimport { ModalDelete } from \"./ModalDelete/ModalDelete\";\r\nimport styles from \"./DeleteIcon.module.scss\";\r\n\r\nexport const DeleteIcon: React.FC<DeleteIconPropsType> = ({\r\n  setLoading,\r\n  setIsModalOpen,\r\n  category,\r\n  setData,\r\n  isModalOpen,\r\n  handleCancel,\r\n  item,\r\n  index,\r\n  setSelectedExercise,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [confirm, setConfirm] = useState<boolean>(false);\r\n\r\n  const handleConfirm = () => {\r\n    setConfirm(true);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.deleteIconContainer}>\r\n        <div className={styles.exerciseNumber}>{index + 1}.</div>\r\n        <Tooltip title={t(\"deleteExercise\")}>\r\n          <CloseOutlined\r\n            className={styles.deleteIcon}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleConfirm();\r\n            }}\r\n          />\r\n        </Tooltip>\r\n      </div>\r\n      {confirm && (\r\n        <ModalDelete\r\n          setLoading={setLoading}\r\n          category={category}\r\n          setData={setData}\r\n          isModalOpen={isModalOpen}\r\n          setIsModalOpen={setIsModalOpen}\r\n          handleCancel={handleCancel}\r\n          item={item}\r\n          setConfirm={setConfirm}\r\n          setSelectedExercise={setSelectedExercise}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"editInput\":\"EditInput_editInput__CnmRa\"};","import React, { useEffect, useRef } from \"react\";\r\nimport { message } from \"antd\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { EditInputPropsType, Exercise } from \"../../../../../types/types\";\r\n\r\nimport styles from \"./EditInput.module.scss\";\r\n\r\nexport const EditInput: React.FC<EditInputPropsType> = ({\r\n  newName,\r\n  editMode,\r\n  currentEditingId,\r\n  setCurrentEditingId,\r\n  category,\r\n  setData,\r\n  setEditMode,\r\n  setNewName,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (editMode && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editMode]);\r\n\r\n  const changeExerciseName = async (exerciseId: string, newName: string) => {\r\n    try {\r\n      const db = getFirestore();\r\n      const auth = getAuth();\r\n      const user = auth.currentUser;\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(db, \"exercises\", userId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          let updatedExercises = exercisesData.exercises.map(\r\n            (exercise: { id: string; name: string }) => {\r\n              if (exercise.id === exerciseId) {\r\n                return { ...exercise, name: newName };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: updatedExercises,\r\n          });\r\n          const filteredData = updatedExercises\r\n            .filter(\r\n              (exercise: { category: string }) =>\r\n                t(`categories.${exercise.category}`) ===\r\n                t(`categories.${category}`)\r\n            )\r\n            .map((exercise: Exercise) => ({\r\n              id: exercise.id,\r\n              name: t(exercise.name),\r\n              category: exercise.category,\r\n              bestResult: `${t(\"lastSet\")}: ${exercise.bestResult}`,\r\n              isFavorite: exercise.isFavorite,\r\n            }));\r\n          localStorage.setItem(\"exercisesData\", JSON.stringify(filteredData));\r\n          setData(filteredData);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      messageApi.open({\r\n        type: \"error\",\r\n        content: t(\"nameChangeFailed\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEditKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key === \"Enter\" && currentEditingId) {\r\n      changeExerciseName(currentEditingId, newName);\r\n      setEditMode(false);\r\n      setCurrentEditingId(null);\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (currentEditingId) {\r\n      changeExerciseName(currentEditingId, newName);\r\n      setEditMode(false);\r\n      setCurrentEditingId(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <input\r\n        value={newName}\r\n        className={styles.editInput}\r\n        onChange={(e) => setNewName(e.target.value)}\r\n        onKeyDown={handleEditKeyDown}\r\n        onBlur={handleBlur}\r\n        ref={inputRef}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cardItem\":\"ExerciseCard_cardItem__2AKct\",\"active\":\"ExerciseCard_active__7n1-4\",\"exerciseContainer\":\"ExerciseCard_exerciseContainer__nXbmq\",\"exerciseName\":\"ExerciseCard_exerciseName__MCYS-\"};","import React, { useState } from \"react\";\r\n\r\nimport { Exercise, ExerciseCardPropsType } from \"../../../../types/types\";\r\n\r\nimport { CardOptions } from \"./CardOptions/CardOptions\";\r\nimport { DeleteIcon } from \"./DeleteIcon/DeleteIcon\";\r\nimport { EditInput } from \"./EditInput/EditInput\";\r\nimport styles from \"./ExerciseCard.module.scss\";\r\n\r\nexport const ExerciseCard: React.FC<ExerciseCardPropsType> = ({\r\n  item,\r\n  onSelectExercise,\r\n  category,\r\n  setData,\r\n  setLoading,\r\n  activeCardId,\r\n  setActiveCardId,\r\n  index,\r\n  exercisesRef,\r\n  setSelectedExercise,\r\n}) => {\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [newName, setNewName] = useState<string>(\"\");\r\n  const [currentEditingId, setCurrentEditingId] = useState<string | null>(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const handleCancel = (e: { stopPropagation: () => void }) => {\r\n    e.stopPropagation();\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleCardClick = (item: Exercise) => {\r\n    setActiveCardId(item.id);\r\n    onSelectExercise(item);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.cardItem} ${\r\n        activeCardId === item.id ? styles.active : \"\"\r\n      }`}\r\n      onClick={() => handleCardClick(item)}\r\n      ref={exercisesRef}\r\n    >\r\n      <DeleteIcon\r\n        setLoading={setLoading}\r\n        setIsModalOpen={setIsModalOpen}\r\n        category={category}\r\n        setData={setData}\r\n        isModalOpen={isModalOpen}\r\n        handleCancel={handleCancel}\r\n        item={item}\r\n        index={index}\r\n        setSelectedExercise={setSelectedExercise}\r\n      />\r\n      {currentEditingId === item.id && editMode ? (\r\n        <EditInput\r\n          newName={newName}\r\n          editMode={editMode}\r\n          currentEditingId={currentEditingId}\r\n          setCurrentEditingId={setCurrentEditingId}\r\n          category={category}\r\n          setData={setData}\r\n          setEditMode={setEditMode}\r\n          setNewName={setNewName}\r\n        />\r\n      ) : (\r\n        <div className={styles.exerciseContainer}>\r\n          <span className={styles.exerciseName}>{item.name}</span>\r\n        </div>\r\n      )}\r\n      <CardOptions\r\n        item={item}\r\n        category={category}\r\n        setData={setData}\r\n        setCurrentEditingId={setCurrentEditingId}\r\n        setNewName={setNewName}\r\n        setEditMode={setEditMode}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { message } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport { Exercise, ExercisesProps } from \"../../../types/types\";\r\nimport { Loader } from \"../../../components/Loader/Loader\";\r\nimport { EmptyBox } from \"../../../components/EmptyBox/EmptyBox\";\r\n\r\nimport styles from \"./Exercises.module.scss\";\r\nimport { ExerciseCard } from \"./ExerciseCard/ExerciseCard\";\r\n\r\nexport const Exercises: React.FC<ExercisesProps> = ({\r\n  category,\r\n  updateTrigger,\r\n  onSelectExercise,\r\n  exercisesRef,\r\n  activeCardId,\r\n  setActiveCardId,\r\n  setSelectedExercise,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [data, setData] = useState<Exercise[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(\r\n      localStorage.getItem(\"exercisesData\") || \"[]\"\r\n    );\r\n    if (storedData.length > 0) {\r\n      setData(storedData);\r\n      setLoading(false);\r\n    }\r\n  }, [category]);\r\n\r\n  useEffect(() => {\r\n    const fetchExercises = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const user = getAuth().currentUser;\r\n        if (user) {\r\n          const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n          const exercisesDoc = await getDoc(exercisesDocRef);\r\n          if (exercisesDoc.exists()) {\r\n            const exercisesData = exercisesDoc.data();\r\n            const filteredData = exercisesData.exercises\r\n              .filter(\r\n                (exercise: Exercise) =>\r\n                  t(`categories.${exercise.category}`) ===\r\n                  t(`categories.${category}`)\r\n              )\r\n              .map((exercise: Exercise) => ({\r\n                id: exercise.id,\r\n                name: t(exercise.name),\r\n                category: exercise.category,\r\n                bestResult: exercise.bestResult,\r\n                isFavorite: exercise.isFavorite,\r\n              }));\r\n            localStorage.setItem(\"exercisesData\", JSON.stringify(filteredData));\r\n            setData(filteredData);\r\n          }\r\n        }\r\n        setLoading(false);\r\n      } catch (error) {\r\n        messageApi.open({\r\n          type: \"error\",\r\n          content: t(\"errorFetchingExercises\"),\r\n        });\r\n      }\r\n    };\r\n    fetchExercises();\r\n  }, [category, t, updateTrigger]);\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <SubTitle children={t(\"exercises\")} className={styles.title} />\r\n          <div className={styles.description}>{t(\"chooseExercise\")}</div>\r\n          <div className={styles.cards}>\r\n            {data.length ? (\r\n              data.map((item: Exercise, index) => (\r\n                <ExerciseCard\r\n                  key={item.id}\r\n                  item={item}\r\n                  onSelectExercise={onSelectExercise}\r\n                  category={category}\r\n                  setData={setData}\r\n                  setLoading={setLoading}\r\n                  activeCardId={activeCardId}\r\n                  setActiveCardId={setActiveCardId}\r\n                  index={index}\r\n                  exercisesRef={exercisesRef}\r\n                  setSelectedExercise={setSelectedExercise}\r\n                />\r\n              ))\r\n            ) : (\r\n              <EmptyBox />\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { DescriptionTitle } from \"../../components/DescriptionTitle/DescriptionTitle\";\r\nimport { PageWrapper } from \"../../components/PageWrapper/PageWrapper\";\r\nimport { Exercise, LocationState } from \"../../types/types\";\r\n\r\nimport { ExerciseTable } from \"./ExerciseTable/ExerciseTable\";\r\nimport { AddExercise } from \"./AddExercise/AddExercise\";\r\nimport { Exercises } from \"./Exercises/Exercises\";\r\n\r\nconst Workout: React.FC = () => {\r\n  const location = useLocation();\r\n  const state = location.state as LocationState;\r\n  const [updateTrigger, setUpdateTrigger] = useState(0);\r\n  const [selectedExercise, setSelectedExercise] = useState<Exercise | null>(\r\n    null\r\n  );\r\n  const [activeCardId, setActiveCardId] = useState<string | null>(null);\r\n  const exercisesRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n  }, []);\r\n\r\n  const handleUpdateExercises = () => {\r\n    setUpdateTrigger((prev) => prev + 1);\r\n\r\n    if (exercisesRef.current) {\r\n      exercisesRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  const handleSelectExercise = (exercise: Exercise) =>\r\n    setSelectedExercise(exercise);\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div style={{ minHeight: \"100vh\" }}>\r\n        <DescriptionTitle text={state.title} textAlign=\"center\" />\r\n        <AddExercise\r\n          category={state?.title}\r\n          onAddExercise={handleUpdateExercises}\r\n        />\r\n        <Exercises\r\n          category={state?.title}\r\n          updateTrigger={updateTrigger}\r\n          onSelectExercise={handleSelectExercise}\r\n          exercisesRef={exercisesRef}\r\n          activeCardId={activeCardId}\r\n          setActiveCardId={setActiveCardId}\r\n          setSelectedExercise={setSelectedExercise}\r\n        />\r\n        <ExerciseTable\r\n          selectedExercise={selectedExercise}\r\n          setSelectedExercise={setSelectedExercise}\r\n          setActiveCardId={setActiveCardId}\r\n        />\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default Workout;\r\n","export const scrollToTop = () =>\r\n  setTimeout(() => {\r\n    window.scrollTo({\r\n      left: 0,\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, 100);\r\n"],"names":["CustomInput","_ref","name","text","type","placeholder","isRequired","className","onChange","value","t","useTranslation","_jsx","styles","children","Form","Item","label","rules","required","Input","concat","allowClear","e","target","autoComplete","CustomModal","open","onCancel","footer","useEffect","document","body","style","overflow","ConfigProvider","theme","components","Modal","contentBg","colorIcon","colorIconHover","marginTop","DescriptionTitle","textAlign","ref","controls","useAnimatedInView","motion","h2","descriptionTitle","initial","animate","variants","animation","container","maxWidth","margin","PageWrapper","ResetButton","onClick","icon","Button","SettingButton","SubTitle","p","threshold","arguments","length","undefined","triggerOnce","animationVariants","useAnimation","inView","useInView","start","hidden","opacity","visible","transition","duration","EmptyBox","Empty","image","PRESENTED_IMAGE_SIMPLE","description","color","NumericInput","onBlur","replace","startsWith","substring","test","inputMode","pattern","forwardRef","scrollToBottom","setTimeout","window","scrollTo","left","top","scrollHeight","behavior","TableFooter","selectedExercise","data","setData","setEditWeight","saveExerciseData","onWorkoutDateChange","setCurrentWorkout","addRowBtn","setAddRowBtn","saveBtn","setSaveBtn","setDeleteBtn","workouts","setWorkouts","useState","workoutDates","setWorkoutDates","currentWorkoutIndex","setCurrentWorkoutIndex","hideButtons","setHideButtons","async","setsCollectionRef","collection","getFirestore","setDocRef","doc","id","docSnapshot","getDoc","exists","Array","isArray","every","workout","approaches","map","date","lastIndex","console","error","loadWorkouts","isLastWorkout","_jsxs","_Fragment","addRow","newData","nextSet","set","newRow","key","toString","weight","reps","CloseOutlined","push","PlusOutlined","CustomButton","CheckOutlined","showPreviousWorkout","newIndex","LeftOutlined","showNextWorkout","RightOutlined","startNewTraining","BestResult","bestResult","setBestResult","user","getAuth","currentUser","messageApi","contextHolder","message","useMessage","editMode","setEditMode","setWeight","setReps","handleSave","exercisesDocRef","uid","exercisesDoc","updatedExercises","exercises","exercise","updatedBestResult","updateDoc","content","saveBestResult","items","EditOutlined","extra","src","process","Collapse","size","bordered","DeleteWorkout","workoutDate","setWorkoutDate","setSelectedExercise","setActiveCardId","isModalOpen","setIsModalOpen","DeleteOutlined","confirmDelete","stopPropagation","filteredWorkouts","filter","Date","toLocaleString","scrollToTop","deleteWorkoutByDate","ExerciseTable","editWeight","editReps","setEditReps","currentWorkout","deleteBtn","weightInputRef","useRef","repsInputRef","loadExerciseData","current","focus","Promise","all","documentData","latestWorkout","loadedData","approach","find","ex","alert","columns","title","dataIndex","width","render","record","updateWeight","row","updateReps","Divider","backgroundColor","Table","headerBg","headerColor","cellFontSize","colorBgContainer","colorText","borderColor","cellPaddingBlock","toLocaleDateString","rowKey","dataSource","pagination","locale","emptyText","validData","Number","batch","writeBatch","setDoc","newWorkout","uuidv4","toISOString","index","update","commit","formattedDate","isNaN","getTime","AddExercise","onAddExercise","category","exerciseName","setExerciseName","userId","isFavorite","CardOptions","item","setCurrentEditingId","setNewName","isActive","setIsActive","StarFilled","exerciseId","currentStatus","exercisesData","favoriteExercisesCount","translatedCategory","filteredData","toggleFavorite","handleEditClick","currentName","ModalDelete","setLoading","handleCancel","setConfirm","deleteDoc","localStorage","setItem","JSON","stringify","handleDeleteCard","DeleteIcon","confirm","Tooltip","EditInput","newName","currentEditingId","inputRef","changeExerciseName","db","onKeyDown","event","handleBlur","ExerciseCard","onSelectExercise","activeCardId","exercisesRef","handleCardClick","Exercises","updateTrigger","loading","storedData","parse","getItem","fetchExercises","Loader","Workout","state","useLocation","setUpdateTrigger","scroll","minHeight","handleUpdateExercises","prev","scrollIntoView"],"sourceRoot":""}