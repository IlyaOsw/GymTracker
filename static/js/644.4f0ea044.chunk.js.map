{"version":3,"file":"static/js/644.4f0ea044.chunk.js","mappings":"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","sources":["webpack://gymtracker/./src/components/CustomInput/CustomInput.module.scss?82c8","components/CustomInput/CustomInput.tsx","components/CustomModal/CustomModal.tsx","webpack://gymtracker/./src/components/DescriptionTitle/DescriptionTitle.module.scss?64ef","components/DescriptionTitle/DescriptionTitle.tsx","components/PageWrapper/PageWrapper.tsx","webpack://gymtracker/./src/components/ResetButton/ResetButton.module.scss?4be0","components/ResetButton/ResetButton.tsx","webpack://gymtracker/./src/components/SubTitle/SubTitle.module.scss?d9b0","components/SubTitle/SubTitle.tsx","hooks/useAnimatedInView .tsx","webpack://gymtracker/./src/pages/Workout/ExerciseTable/ExerciseTable.module.scss?799a","webpack://gymtracker/./src/pages/Workout/ExerciseTable/NumericInput/NumericInput.module.scss?fc7e","pages/Workout/ExerciseTable/NumericInput/NumericInput.tsx","pages/Workout/ExerciseTable/ExerciseTable.tsx","webpack://gymtracker/./src/pages/Workout/AddExercise/AddExercise.module.scss?140e","pages/Workout/AddExercise/AddExercise.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/Exercises.module.scss?28b0","pages/Workout/Exercises/Exercises.tsx","pages/Workout/Workout.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"CustomInput_inputWrapper__wz8SN\",\"inputLabel\":\"CustomInput_inputLabel__b-QWx\",\"inputField\":\"CustomInput_inputField__baNtE\"};","import { Form, Input } from \"antd\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CustomInputProps, FieldType } from \"../../types/types\";\r\n\r\nimport styles from \"./CustomInput.module.scss\";\r\n\r\nexport const CustomInput: React.FC<CustomInputProps> = ({\r\n  name,\r\n  text,\r\n  type,\r\n  placeholder,\r\n  isRequired = true,\r\n  className,\r\n  onChange,\r\n  value,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    if (onChange) {\r\n      onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.inputWrapper}>\r\n      <Form.Item<FieldType>\r\n        label={<span className={styles.inputLabel}>{t(text)}</span>}\r\n        name={name}\r\n        rules={[{ required: isRequired }]}\r\n      >\r\n        <Input\r\n          type={type}\r\n          placeholder={placeholder}\r\n          className={`${styles.inputField} ${className}`}\r\n          allowClear\r\n          onChange={handleChange}\r\n          value={value}\r\n          autoComplete=\"username\"\r\n        />\r\n      </Form.Item>\r\n    </div>\r\n  );\r\n};\r\n","import { ConfigProvider, Modal } from \"antd\";\r\nimport React from \"react\";\r\n\r\nimport { CustomModalProps } from \"../../types/types\";\r\n\r\nexport const CustomModal: React.FC<CustomModalProps> = ({\r\n  open,\r\n  onCancel,\r\n  footer = null,\r\n  children,\r\n}) => {\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        components: {\r\n          Modal: {\r\n            contentBg: \"#141414\",\r\n            colorIcon: \"lightgray\",\r\n            colorIconHover: \"gray\",\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <Modal\r\n        open={open}\r\n        onCancel={onCancel}\r\n        footer={footer}\r\n        style={{ marginTop: \"50px\" }}\r\n      >\r\n        {children}\r\n      </Modal>\r\n    </ConfigProvider>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionTitle\":\"DescriptionTitle_descriptionTitle__E-lRw\",\"start\":\"DescriptionTitle_start__FSu7h\",\"center\":\"DescriptionTitle_center__eJvMJ\",\"end\":\"DescriptionTitle_end__uV+MA\"};","import { motion } from \"framer-motion\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\nimport { CustomButtonProps } from \"../../types/types\";\r\n\r\nimport styles from \"./DescriptionTitle.module.scss\";\r\n\r\nexport const DescriptionTitle: React.FC<CustomButtonProps> = ({\r\n  text,\r\n  textAlign = \"start\",\r\n  className,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { ref, controls } = useAnimatedInView();\r\n\r\n  return (\r\n    <motion.h2\r\n      ref={ref}\r\n      className={`${styles.descriptionTitle} ${styles[textAlign]} ${className}`}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n    >\r\n      {t(text)}\r\n    </motion.h2>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { PageWrapperProps } from \"../../types/types\";\r\n\r\nconst container: React.CSSProperties = {\r\n  maxWidth: \"1200px\",\r\n  margin: \"0 auto\",\r\n};\r\n\r\nexport const PageWrapper: React.FC<PageWrapperProps> = ({ children }) => {\r\n  return <div style={container}>{children}</div>;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"reset\":\"ResetButton_reset__efwrw\"};","import React from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { SyncOutlined } from \"@ant-design/icons\";\r\n\r\nimport { ResetBtnType } from \"../../types/types\";\r\n\r\nimport styles from \"./ResetButton.module.scss\";\r\n\r\nexport const ResetButton: React.FC<ResetBtnType> = ({\r\n  onClick,\r\n  children,\r\n  icon,\r\n}) => {\r\n  return (\r\n    <Button className={styles.reset} onClick={onClick} icon={icon}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"subTitle\":\"SubTitle_subTitle__6A8PN\"};","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\nimport { SubTitleType } from \"../../types/types\";\r\n\r\nimport styles from \"./SubTitle.module.scss\";\r\n\r\nexport const SubTitle: React.FC<SubTitleType> = ({ children, className }) => {\r\n  const { ref, controls } = useAnimatedInView();\r\n  return (\r\n    <motion.p\r\n      ref={ref}\r\n      className={`${styles.subTitle} ${className}`}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n    >\r\n      {children}\r\n    </motion.p>\r\n  );\r\n};\r\n","import { useAnimation, Variants } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useAnimatedInView = (\r\n  threshold: number = 0.1,\r\n  triggerOnce: boolean = false,\r\n  animationVariants?: Variants\r\n) => {\r\n  const controls = useAnimation();\r\n  const [ref, inView] = useInView({ threshold, triggerOnce });\r\n\r\n  useEffect(() => {\r\n    if (inView) {\r\n      controls.start(\"visible\");\r\n    } else {\r\n      controls.start(\"hidden\");\r\n    }\r\n  }, [controls, inView]);\r\n\r\n  return { ref, controls, animationVariants };\r\n};\r\n\r\nexport const animation = {\r\n  hidden: { opacity: 0 },\r\n  visible: { opacity: 1, transition: { duration: 1 } },\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableTitle\":\"ExerciseTable_tableTitle__nWHV1\",\"date\":\"ExerciseTable_date__+kHp7\",\"table\":\"ExerciseTable_table__gqYvK\",\"editableDiv\":\"ExerciseTable_editableDiv__lnIPx\",\"delete\":\"ExerciseTable_delete__rmsna\",\"tableFooter\":\"ExerciseTable_tableFooter__8lrF-\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"NumericInput_input__GI+NF\"};","import React, { forwardRef, ChangeEvent } from \"react\";\r\n\r\nimport { NumericInputProps } from \"../../../../types/types\";\r\n\r\nimport styles from \"./NumericInput.module.scss\";\r\n\r\nconst NumericInput: React.ForwardRefRenderFunction<\r\n  HTMLInputElement,\r\n  NumericInputProps\r\n> = ({ value, onChange, onBlur }, ref) => {\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    if (/^\\d*$/.test(value)) {\r\n      onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      ref={ref}\r\n      value={value}\r\n      onChange={handleChange}\r\n      onBlur={onBlur}\r\n      className={styles.input}\r\n      type=\"tel\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default forwardRef(NumericInput);\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { ConfigProvider, Divider, Empty, Table, Tooltip } from \"antd\";\r\nimport {\r\n  CheckOutlined,\r\n  CloseOutlined,\r\n  LeftOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { CustomButton } from \"../../../components/CustomButton/CustomButton\";\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport { ExerciseTableType } from \"../../../types/types\";\r\n\r\nimport styles from \"./ExerciseTable.module.scss\";\r\nimport NumericInput from \"./NumericInput/NumericInput\";\r\n\r\nexport const ExerciseTable: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const [data, setData] = useState<ExerciseTableType[]>([]);\r\n  const [editWeight, setEditWeight] = useState<string | null>(null);\r\n  const [editReps, setEditReps] = useState<string | null>(null);\r\n  const weightInputRef = useRef<HTMLInputElement | null>(null);\r\n  const repsInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (editWeight) {\r\n      weightInputRef.current?.focus();\r\n    }\r\n    if (editReps) {\r\n      repsInputRef.current?.focus();\r\n    }\r\n  }, [editWeight, editReps]);\r\n\r\n  const addRow = () => {\r\n    const newData = [...data];\r\n\r\n    const nextSet =\r\n      newData.length > 0 ? newData[newData.length - 1].set + 1 : 1;\r\n\r\n    const newRow: ExerciseTableType = {\r\n      key: nextSet.toString(),\r\n      weight: \"\",\r\n      set: nextSet,\r\n      reps: \"\",\r\n      icon: <CloseOutlined />,\r\n    };\r\n\r\n    newData.push(newRow);\r\n    setData(newData);\r\n    setEditWeight(newRow.key);\r\n  };\r\n\r\n  const updateWeight = (key: string, value: string) => {\r\n    const newData = data.map((row) => {\r\n      if (row.key === key) {\r\n        return { ...row, weight: value };\r\n      }\r\n      return row;\r\n    });\r\n    setData(newData);\r\n  };\r\n\r\n  const updateReps = (key: string, value: string) => {\r\n    const newData = data.map((row) => {\r\n      if (row.key === key) {\r\n        return { ...row, reps: value };\r\n      }\r\n      return row;\r\n    });\r\n    setData(newData);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: `${t(\"set\")}`,\r\n      dataIndex: \"set\",\r\n      sorter: (a: { set: number }, b: { set: number }) => a.set - b.set,\r\n      width: \"30%\",\r\n    },\r\n    {\r\n      title: `${t(\"weight\")}`,\r\n      dataIndex: \"weight\",\r\n      width: \"40%\",\r\n      render: (text: string, record: ExerciseTableType) =>\r\n        editWeight === record.key ? (\r\n          <NumericInput\r\n            ref={weightInputRef}\r\n            value={record.weight}\r\n            onChange={(value) => updateWeight(record.key, value)}\r\n            onBlur={() => setEditWeight(null)}\r\n          />\r\n        ) : (\r\n          <div\r\n            onClick={() => setEditWeight(record.key)}\r\n            className={styles.editableDiv}\r\n          >\r\n            {record.weight || t(\"clickToEdit\")}\r\n          </div>\r\n        ),\r\n    },\r\n    {\r\n      title: `${t(\"reps\")}`,\r\n      dataIndex: \"reps\",\r\n      width: \"30%\",\r\n      render: (text: string, record: ExerciseTableType) =>\r\n        editReps === record.key ? (\r\n          <NumericInput\r\n            ref={repsInputRef}\r\n            value={record.reps}\r\n            onChange={(value) => updateReps(record.key, value)}\r\n            onBlur={() => setEditReps(null)}\r\n          />\r\n        ) : (\r\n          <div\r\n            onClick={() => setEditReps(record.key)}\r\n            className={styles.editableDiv}\r\n          >\r\n            {record.reps || t(\"clickToEdit\")}\r\n          </div>\r\n        ),\r\n    },\r\n    {\r\n      title: \"\",\r\n      dataIndex: \"icon\",\r\n      render: (_: any, record: ExerciseTableType) => (\r\n        <Tooltip title={t(\"deleteRow\")}>\r\n          <CloseOutlined\r\n            className={styles.delete}\r\n            onClick={() => deleteRow(record.key)}\r\n          />\r\n        </Tooltip>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const deleteRow = (key: string) => {\r\n    const newData = data.filter((item) => item.key !== key);\r\n    setData(newData);\r\n\r\n    setEditWeight(null);\r\n    setEditReps(null);\r\n  };\r\n\r\n  const customEmpty = () => (\r\n    <Empty\r\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n      description={<span style={{ color: \"#ffffff\" }}>{t(\"noData\")}</span>}\r\n    />\r\n  );\r\n\r\n  const dateNow = new Date().toLocaleDateString();\r\n\r\n  return (\r\n    <>\r\n      <Divider style={{ backgroundColor: \"gray\" }} />\r\n      <div className={styles.tableTitle}>\r\n        <SubTitle children={\"Bench press\"} />\r\n        <div className={styles.date}>\r\n          {t(\"date\")}\r\n          {dateNow}\r\n        </div>\r\n      </div>\r\n      <ConfigProvider\r\n        theme={{\r\n          components: {\r\n            Table: {\r\n              headerBg: \"#1A1A1A\",\r\n              headerColor: \"#ffffff\",\r\n              headerSortHoverBg: \"#282828\",\r\n              bodySortBg: \"#282828\",\r\n              cellFontSize: 16,\r\n              colorBgContainer: \"#282828\",\r\n              colorText: \"#ffffff\",\r\n              colorPrimary: \"#ffffff\",\r\n              headerBorderRadius: 0,\r\n              rowHoverBg: \"#464646\",\r\n              borderColor: \"#535353\",\r\n              headerSplitColor: \"#535353\",\r\n              headerSortActiveBg: \"#282828\",\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <Table\r\n          columns={columns}\r\n          dataSource={data}\r\n          pagination={false}\r\n          className={styles.table}\r\n          locale={{ emptyText: customEmpty }}\r\n        />\r\n        <CustomButton onClick={addRow} icon={<PlusOutlined />}>\r\n          {t(\"addRow\")}\r\n        </CustomButton>\r\n        <div className={styles.tableFooter}>\r\n          <CustomButton icon={<LeftOutlined />}>{t(\"previous\")}</CustomButton>\r\n          <CustomButton icon={<CheckOutlined />}>{t(\"save\")}</CustomButton>\r\n        </div>\r\n      </ConfigProvider>\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"addExercise\":\"AddExercise_addExercise__7FNxa\",\"button\":\"AddExercise_button__mkO2c\"};","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport { notification, Form, message } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { CustomButton } from \"../../../components/CustomButton/CustomButton\";\r\nimport { CustomInput } from \"../../../components/CustomInput/CustomInput\";\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport { IAddExercise } from \"../../../types/types\";\r\n\r\nimport styles from \"./AddExercise.module.scss\";\r\n\r\nexport const AddExercise: React.FC<IAddExercise> = ({\r\n  onAddExercise,\r\n  category,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [exerciseName, setExerciseName] = useState(\"\");\r\n\r\n  const handleAddExercise = async () => {\r\n    if (!exerciseName) {\r\n      notification.error({ message: t(\"typeExercise\") });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const db = getFirestore();\r\n      const auth = getAuth();\r\n      const user = auth.currentUser;\r\n\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercise = {\r\n          id: uuidv4(),\r\n          name: exerciseName,\r\n          category: category,\r\n          bestResult: 0,\r\n          isFavorite: false,\r\n        };\r\n\r\n        const exercisesDocRef = doc(db, \"exercises\", userId);\r\n        const docSnapshot = await getDoc(exercisesDocRef);\r\n\r\n        if (docSnapshot.exists()) {\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: [...docSnapshot.data().exercises, exercise],\r\n          });\r\n        } else {\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: [exercise],\r\n          });\r\n        }\r\n        message.success(t(\"exerciseAdded\"));\r\n        setExerciseName(\"\");\r\n        onAddExercise();\r\n      } else {\r\n        message.error(t(\"userNotAuthenticated\"));\r\n      }\r\n    } catch (error) {\r\n      message.error(t(\"errorAddingExercise\"));\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (value: string) => {\r\n    setExerciseName(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SubTitle>{t(\"addAnExercise\")}</SubTitle>\r\n      <div className={styles.addExercise}>\r\n        <CustomInput\r\n          value={exerciseName}\r\n          onChange={handleInputChange}\r\n          text={t(\"exerciseName\")}\r\n          placeholder={t(\"typeExercise\")}\r\n        />\r\n        <CustomButton\r\n          className={styles.button}\r\n          icon={<PlusOutlined />}\r\n          onClick={handleAddExercise}\r\n        >\r\n          {t(\"addExerciseBtn\")}\r\n        </CustomButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Exercises_title__ThgWQ\",\"cardTitle\":\"Exercises_cardTitle__tmJjS\",\"exercises\":\"Exercises_exercises__BEFnF\",\"deleteIconBlock\":\"Exercises_deleteIconBlock__wVkhJ\",\"favoriteIcon\":\"Exercises_favoriteIcon__BEv1g\",\"deleteIcon\":\"Exercises_deleteIcon__X1Kq5\",\"confirm\":\"Exercises_confirm__DCCIL\",\"delete\":\"Exercises_delete__ikuGj\",\"star\":\"Exercises_star__OY09M\",\"active\":\"Exercises_active__8jdlH\"};","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  ConfigProvider,\r\n  Empty,\r\n  message,\r\n  notification,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CloseOutlined, DeleteOutlined, StarFilled } from \"@ant-design/icons\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport { Exercise, ExercisesProps } from \"../../../types/types\";\r\nimport { Loader } from \"../../../components/Loader/Loader\";\r\nimport { CustomModal } from \"../../../components/CustomModal/CustomModal\";\r\nimport { ResetButton } from \"../../../components/ResetButton/ResetButton\";\r\n\r\nimport styles from \"./Exercises.module.scss\";\r\n\r\nexport const Exercises: React.FC<\r\n  ExercisesProps & { updateTrigger: number }\r\n> = ({ category, updateTrigger }) => {\r\n  const { t } = useTranslation();\r\n  const [data, setData] = useState<Exercise[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [confirm, setConfirm] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(\r\n      localStorage.getItem(\"exercisesData\") || \"[]\"\r\n    );\r\n\r\n    if (storedData.length > 0) {\r\n      setData(storedData);\r\n      setLoading(false);\r\n    }\r\n  }, [category]);\r\n\r\n  const handleCancel = () => setIsModalOpen(false);\r\n\r\n  const handleConfirm = () => {\r\n    setConfirm(true);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const toggleFavorite = async (exerciseId: string, currentStatus: boolean) => {\r\n    try {\r\n      const db = getFirestore();\r\n      const auth = getAuth();\r\n      const user = auth.currentUser;\r\n\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(db, \"exercises\", userId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          let updatedExercises = exercisesData.exercises.map(\r\n            (exercise: { id: string }) => {\r\n              if (exercise.id === exerciseId) {\r\n                return { ...exercise, isFavorite: !currentStatus };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: updatedExercises,\r\n          });\r\n\r\n          const translatedCategory = t(`categories.${category}`);\r\n          const filteredData = updatedExercises.filter(\r\n            (exercise: { category: string }) =>\r\n              t(`categories.${exercise.category}`) === translatedCategory\r\n          );\r\n          setData(filteredData);\r\n        }\r\n\r\n        if (!currentStatus) {\r\n          message.success(t(\"removedFromFavorite\"));\r\n        } else {\r\n          message.success(t(\"addedToFavorite\"));\r\n        }\r\n        setIsActive(!isActive);\r\n      }\r\n    } catch (error) {\r\n      message.error(t(\"errorUpdatingFavorite\"));\r\n    }\r\n  };\r\n\r\n  const handleDeleteCard = async (exerciseId: string) => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const db = getFirestore();\r\n      const auth = getAuth();\r\n      const user = auth.currentUser;\r\n\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(db, \"exercises\", userId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          let updatedExercises: Exercise[] = [];\r\n\r\n          if (exercisesData && exercisesData.exercises) {\r\n            updatedExercises = exercisesData.exercises.filter(\r\n              (exercise: Exercise) => exercise.id !== exerciseId\r\n            );\r\n\r\n            await updateDoc(exercisesDocRef, {\r\n              exercises: updatedExercises,\r\n            });\r\n            message.success(t(\"exerciseDeleted\"));\r\n\r\n            const translatedCategory = t(`categories.${category}`);\r\n            const filteredData = updatedExercises.filter(\r\n              (exercise: Exercise) =>\r\n                t(`categories.${exercise.category}`) === translatedCategory\r\n            );\r\n            setData(filteredData);\r\n          }\r\n        }\r\n      }\r\n      setConfirm(false);\r\n    } catch (error) {\r\n      message.error(t(\"errorDeletingExercise\"));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchExercises = async () => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const db = getFirestore();\r\n        const auth = getAuth();\r\n        const user = auth.currentUser;\r\n\r\n        if (user) {\r\n          const userId = user.uid;\r\n          const exercisesDocRef = doc(db, \"exercises\", userId);\r\n          const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n          if (exercisesDoc.exists()) {\r\n            const exercisesData = exercisesDoc.data();\r\n            const translatedCategory = t(`categories.${category}`);\r\n            const filteredData = exercisesData.exercises\r\n              .filter(\r\n                (exercise: Exercise) =>\r\n                  t(`categories.${exercise.category}`) === translatedCategory\r\n              )\r\n              .map((exercise: Exercise) => ({\r\n                id: exercise.id,\r\n                name: t(exercise.name),\r\n                category: exercise.category,\r\n                bestResult: `${t(\"lastSet\")}: ${exercise.bestResult}`,\r\n                isFavorite: exercise.isFavorite,\r\n              }));\r\n            localStorage.setItem(\"exercisesData\", JSON.stringify(filteredData));\r\n            setData(filteredData);\r\n          } else {\r\n            setData([]);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        notification.error({ message: t(\"errorFetchingExercises\") });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchExercises();\r\n  }, [category, t, updateTrigger]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <SubTitle children={t(\"exercises\")} className={styles.title} />\r\n          <ConfigProvider\r\n            theme={{\r\n              components: {\r\n                Card: {\r\n                  headerFontSize: 20,\r\n                  headerBg: \"#1a1a1a\",\r\n                  colorTextHeading: \"#ffffff\",\r\n                  fontSize: 16,\r\n                  colorBorderSecondary: \"#535353\",\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            <Card\r\n              title={\r\n                <span className={styles.cardTitle}> {t(\"chooseExercise\")}</span>\r\n              }\r\n              className={styles.exercises}\r\n              bordered={false}\r\n            >\r\n              {data.length > 0 ? (\r\n                data.map((item) => (\r\n                  <Card.Grid key={item.id}>\r\n                    <div className={styles.deleteIconBlock}>\r\n                      <Tooltip title={t(\"deleteExercise\")}>\r\n                        <CloseOutlined\r\n                          className={styles.deleteIcon}\r\n                          onClick={handleConfirm}\r\n                        />\r\n                      </Tooltip>\r\n                      {confirm && (\r\n                        <CustomModal\r\n                          open={isModalOpen}\r\n                          onCancel={handleCancel}\r\n                          footer={false}\r\n                        >\r\n                          <p className={styles.confirm}>\r\n                            {t(\"confirmDeletingExercise\")}\r\n                          </p>\r\n                          <div className={styles.delete}>\r\n                            <ResetButton\r\n                              children={t(\"delete\")}\r\n                              onClick={() => handleDeleteCard(item.id)}\r\n                              icon={<DeleteOutlined />}\r\n                            />\r\n                          </div>\r\n                        </CustomModal>\r\n                      )}\r\n                    </div>\r\n                    {item.name}\r\n                    <div className={styles.favoriteIcon}>\r\n                      <Tooltip title={t(\"addToFavorite\")}>\r\n                        <StarFilled\r\n                          className={`${styles.star} ${\r\n                            item.isFavorite ? styles.active : \"\"\r\n                          }`}\r\n                          onClick={() =>\r\n                            toggleFavorite(item.id, item.isFavorite)\r\n                          }\r\n                        />\r\n                      </Tooltip>\r\n                    </div>\r\n                  </Card.Grid>\r\n                ))\r\n              ) : (\r\n                <Empty\r\n                  image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                  description={\r\n                    <span style={{ color: \"#ffffff\" }}>{t(\"noData\")}</span>\r\n                  }\r\n                />\r\n              )}\r\n            </Card>\r\n          </ConfigProvider>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { DescriptionTitle } from \"../../components/DescriptionTitle/DescriptionTitle\";\r\nimport { PageWrapper } from \"../../components/PageWrapper/PageWrapper\";\r\nimport { LocationState } from \"../../types/types\";\r\n\r\nimport { ExerciseTable } from \"./ExerciseTable/ExerciseTable\";\r\nimport { AddExercise } from \"./AddExercise/AddExercise\";\r\nimport { Exercises } from \"./Exercises/Exercises\";\r\n\r\nconst Workout: React.FC = () => {\r\n  const location = useLocation();\r\n  const state = location.state as LocationState;\r\n  const [updateTrigger, setUpdateTrigger] = useState(0);\r\n\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n  }, []);\r\n\r\n  const handleUpdateExercises = () => {\r\n    setUpdateTrigger((prev) => prev + 1);\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <DescriptionTitle text={state?.title} textAlign=\"center\" />\r\n      <AddExercise\r\n        category={state?.title}\r\n        onAddExercise={handleUpdateExercises}\r\n      />\r\n      <Exercises category={state?.title} updateTrigger={updateTrigger} />\r\n      <ExerciseTable />\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default Workout;\r\n"],"names":["CustomInput","_ref","name","text","type","placeholder","isRequired","className","onChange","value","t","useTranslation","_jsx","styles","children","Form","Item","label","rules","required","Input","concat","allowClear","e","target","autoComplete","CustomModal","open","onCancel","footer","ConfigProvider","theme","components","Modal","contentBg","colorIcon","colorIconHover","style","marginTop","DescriptionTitle","textAlign","ref","controls","useAnimatedInView","motion","h2","descriptionTitle","initial","animate","variants","animation","container","maxWidth","margin","PageWrapper","ResetButton","onClick","icon","Button","SubTitle","p","threshold","arguments","length","undefined","triggerOnce","animationVariants","useAnimation","inView","useInView","useEffect","start","hidden","opacity","visible","transition","duration","NumericInput","onBlur","test","forwardRef","ExerciseTable","data","setData","useState","editWeight","setEditWeight","editReps","setEditReps","weightInputRef","useRef","repsInputRef","_weightInputRef$curre","_repsInputRef$current","current","focus","columns","title","dataIndex","sorter","a","b","set","width","render","record","key","weight","updateWeight","newData","map","row","reps","updateReps","_","Tooltip","CloseOutlined","deleteRow","filter","item","dateNow","Date","toLocaleDateString","_jsxs","_Fragment","Divider","backgroundColor","Table","headerBg","headerColor","headerSortHoverBg","bodySortBg","cellFontSize","colorBgContainer","colorText","colorPrimary","headerBorderRadius","rowHoverBg","borderColor","headerSplitColor","headerSortActiveBg","dataSource","pagination","locale","emptyText","customEmpty","Empty","image","PRESENTED_IMAGE_SIMPLE","description","color","CustomButton","addRow","nextSet","newRow","toString","push","PlusOutlined","LeftOutlined","CheckOutlined","AddExercise","onAddExercise","category","exerciseName","setExerciseName","async","db","getFirestore","user","getAuth","currentUser","userId","uid","exercise","id","uuidv4","bestResult","isFavorite","exercisesDocRef","doc","docSnapshot","getDoc","exists","updateDoc","exercises","message","success","error","notification","Exercises","updateTrigger","loading","setLoading","isActive","setIsActive","isModalOpen","setIsModalOpen","confirm","setConfirm","storedData","JSON","parse","localStorage","getItem","handleCancel","handleConfirm","exercisesDoc","exercisesData","translatedCategory","filteredData","setItem","stringify","fetchExercises","Loader","Card","headerFontSize","colorTextHeading","fontSize","colorBorderSecondary","bordered","Grid","updatedExercises","exerciseId","handleDeleteCard","DeleteOutlined","StarFilled","currentStatus","toggleFavorite","Workout","state","useLocation","setUpdateTrigger","window","scroll","handleUpdateExercises","prev"],"sourceRoot":""}