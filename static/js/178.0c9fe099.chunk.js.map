{"version":3,"file":"static/js/178.0c9fe099.chunk.js","mappings":"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","sources":["webpack://gymtracker/./src/components/ClosableMessage/ClosableMessage.module.scss?797b","components/ClosableMessage/ClosableMessage.tsx","webpack://gymtracker/./src/components/CustomInput/CustomInput.module.scss?82c8","components/CustomInput/CustomInput.tsx","components/CustomModal/CustomModal.tsx","webpack://gymtracker/./src/components/DescriptionTitle/DescriptionTitle.module.scss?64ef","components/DescriptionTitle/DescriptionTitle.tsx","webpack://gymtracker/./src/components/Hexagon/Hexagon.module.scss?2ff0","components/Hexagon/Hexagon.tsx","webpack://gymtracker/./src/components/NumericInput/NumericInput.module.scss?4f22","components/NumericInput/NumericInput.tsx","components/PageWrapper/PageWrapper.tsx","webpack://gymtracker/./src/components/ResetButton/ResetButton.module.scss?4be0","components/ResetButton/ResetButton.tsx","webpack://gymtracker/./src/components/SettingButton/SettingButton.module.scss?b1fb","components/SettingButton/SettingButton.tsx","webpack://gymtracker/./src/components/SubTitle/SubTitle.module.scss?d9b0","components/SubTitle/SubTitle.tsx","hooks/useAnimatedInView .tsx","components/EmptyBox/EmptyBox.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/CardOptions/CardOptions.module.scss?2f2b","pages/Workout/Exercises/ExerciseCard/CardOptions/CardOptions.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/DeleteIcon/DeleteIcon.module.scss?6012","pages/Workout/Exercises/ExerciseCard/DeleteIcon/ModalDelete/ModalDelete.tsx","pages/Workout/Exercises/ExerciseCard/DeleteIcon/DeleteIcon.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/EditInput/EditInput.module.scss?17ed","pages/Workout/Exercises/ExerciseCard/EditInput/EditInput.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/ExerciseCard/ExerciseCard.module.scss?e0ae","pages/Workout/Exercises/ExerciseCard/ExerciseCard.tsx","webpack://gymtracker/./src/pages/Workout/Exercises/Exercises.module.scss?28b0","pages/Workout/Exercises/Exercises.tsx","utils/scrollToBottom.ts","webpack://gymtracker/./src/pages/Workout/ExerciseTable/ExerciseTable.module.scss?799a","webpack://gymtracker/./src/pages/Workout/ExerciseTable/TableFooter/TableFooter.module.scss?31d1","webpack://gymtracker/./src/pages/Workout/ExerciseTable/TableFooter/TrainingHistory/TrainingHistory.module.scss?acc6","pages/Workout/ExerciseTable/TableFooter/TrainingHistory/TrainingHistory.tsx","pages/Workout/ExerciseTable/TableFooter/TableFooter.tsx","webpack://gymtracker/./src/pages/Workout/ExerciseTable/BestResult/BestResult.module.scss?47bd","pages/Workout/ExerciseTable/BestResult/BestResult.tsx","webpack://gymtracker/./src/pages/Workout/ExerciseTable/DeleteWorkout/DeleteWorkout.module.scss?dc25","pages/Workout/ExerciseTable/DeleteWorkout/DeleteWorkout.tsx","pages/Workout/ExerciseTable/ExerciseTable.tsx","webpack://gymtracker/./src/pages/Workout/AddExercise/AddExercise.module.scss?140e","pages/Workout/AddExercise/AddExercise.tsx","pages/Workout/Workout.tsx","utils/scrollToTop.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"customMessage\":\"ClosableMessage_customMessage__I89Df\",\"closeIcon\":\"ClosableMessage_closeIcon__M7QGN\"};","import { message } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\n\r\nimport { ClosableMessagePropsType } from \"../../types/types\";\r\n\r\nimport styles from \"./ClosableMessage.module.scss\";\r\n\r\nexport const ClosableMessage = ({\r\n  type,\r\n  content,\r\n}: ClosableMessagePropsType) => {\r\n  const key = \"closable-message\";\r\n\r\n  const closeMessage = () => message.destroy(key);\r\n\r\n  message[type]({\r\n    key,\r\n    content: (\r\n      <div>\r\n        {content}\r\n        <CloseOutlined onClick={closeMessage} className={styles.closeIcon} />\r\n      </div>\r\n    ),\r\n    className: styles.customMessage,\r\n  });\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"CustomInput_inputWrapper__wz8SN\",\"inputLabel\":\"CustomInput_inputLabel__b-QWx\",\"inputField\":\"CustomInput_inputField__baNtE\"};","import { Form, Input } from \"antd\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { ICustomInputProps, FieldType } from \"../../types/types\";\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\n\r\nimport styles from \"./CustomInput.module.scss\";\r\n\r\nexport const CustomInput: React.FC<ICustomInputProps> = ({\r\n  name,\r\n  text,\r\n  placeholder,\r\n  isRequired = true,\r\n  className,\r\n  onChange,\r\n  value,\r\n}) => {\r\n  const { ref, controls } = useAnimatedInView();\r\n  const { t } = useTranslation();\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    if (onChange) {\r\n      onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      ref={ref}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n      className={styles.inputWrapper}\r\n    >\r\n      <Form.Item<FieldType>\r\n        label={<span className={styles.inputLabel}>{t(text)}</span>}\r\n        name={name}\r\n        rules={[{ required: isRequired }]}\r\n      >\r\n        <Input\r\n          placeholder={placeholder}\r\n          className={`${styles.inputField} ${className}`}\r\n          allowClear\r\n          onChange={handleChange}\r\n          value={value}\r\n          autoComplete=\"off\"\r\n        />\r\n      </Form.Item>\r\n    </motion.div>\r\n  );\r\n};\r\n","import { ConfigProvider, Modal } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\n\r\nimport { ICustomModalProps } from \"../../types/types\";\r\n\r\nexport const CustomModal: React.FC<ICustomModalProps> = ({\r\n  open,\r\n  onCancel,\r\n  footer = null,\r\n  children,\r\n  className,\r\n}) => {\r\n  useEffect(() => {\r\n    if (open) {\r\n      document.body.style.overflow = \"hidden\";\r\n    } else {\r\n      document.body.style.overflow = \"auto\";\r\n    }\r\n\r\n    return () => {\r\n      document.body.style.overflow = \"auto\";\r\n    };\r\n  }, [open]);\r\n\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        components: {\r\n          Modal: {\r\n            contentBg: \"#141414\",\r\n            colorIcon: \"lightgray\",\r\n            colorIconHover: \"gray\",\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <Modal\r\n        open={open}\r\n        onCancel={onCancel}\r\n        footer={footer}\r\n        className={className}\r\n        centered={true}\r\n      >\r\n        {children}\r\n      </Modal>\r\n    </ConfigProvider>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionTitle\":\"DescriptionTitle_descriptionTitle__E-lRw\",\"start\":\"DescriptionTitle_start__FSu7h\",\"center\":\"DescriptionTitle_center__eJvMJ\",\"end\":\"DescriptionTitle_end__uV+MA\"};","import { motion } from \"framer-motion\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\nimport { IDescriptionTitleAndText } from \"../../types/types\";\r\n\r\nimport styles from \"./DescriptionTitle.module.scss\";\r\n\r\nexport const DescriptionTitle: React.FC<IDescriptionTitleAndText> = ({\r\n  text,\r\n  textAlign = \"start\",\r\n  className,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { ref, controls } = useAnimatedInView();\r\n\r\n  return (\r\n    <motion.h2\r\n      ref={ref}\r\n      className={`${styles.descriptionTitle} ${styles[textAlign]} ${className}`}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n    >\r\n      {t(text)}\r\n    </motion.h2>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Hexagon_wrapper__orCOo\",\"hexagon\":\"Hexagon_hexagon__Lz5zU\",\"imageContainer\":\"Hexagon_imageContainer__CcV75\",\"imageText\":\"Hexagon_imageText__dxduD\"};","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { IHexagonProps } from \"../../types/types\";\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\n\r\nimport styles from \"./Hexagon.module.scss\";\r\n\r\nexport const Hexagon: React.FC<IHexagonProps> = ({\r\n  text,\r\n  className,\r\n  onClick,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { ref, controls } = useAnimatedInView();\r\n\r\n  return (\r\n    <motion.div\r\n      ref={ref}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n      className={styles.wrapper}\r\n    >\r\n      <div className={styles.imageContainer} onClick={onClick}>\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/assets/Icons/Hexagon/Hexagon.svg\"}\r\n          alt=\"Hexagon\"\r\n          className={styles.hexagon}\r\n        />\r\n        <span className={`${styles.imageText} ${className}`}>{t(text)}</span>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"NumericInput_input__1SATw\"};","import React, { forwardRef, ChangeEvent } from \"react\";\r\n\r\nimport { INumericInputProps } from \"../../types/types\";\r\n\r\nimport styles from \"./NumericInput.module.scss\";\r\n\r\nconst NumericInput: React.ForwardRefRenderFunction<\r\n  HTMLInputElement,\r\n  INumericInputProps\r\n> = ({ value, onChange, onBlur }, ref) => {\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let value = e.target.value;\r\n    value = value.replace(\",\", \".\");\r\n\r\n    if (value.length > 1 && value.startsWith(\"0\") && !value.startsWith(\"0.\")) {\r\n      value = value.substring(1);\r\n    }\r\n\r\n    if (/^\\d*\\.?\\d*$/.test(value)) {\r\n      onChange(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      ref={ref}\r\n      value={value}\r\n      onChange={handleChange}\r\n      onBlur={onBlur}\r\n      className={styles.input}\r\n      type=\"text\"\r\n      inputMode=\"decimal\"\r\n      pattern=\"[0-9]*[.,]?[0-9]*\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default forwardRef(NumericInput);\r\n","import React from \"react\";\r\n\r\nimport { IPageWrapperProps } from \"../../types/types\";\r\n\r\nconst container: React.CSSProperties = {\r\n  maxWidth: \"1200px\",\r\n  margin: \"0 auto\",\r\n};\r\n\r\nexport const PageWrapper: React.FC<IPageWrapperProps> = ({ children }) => {\r\n  return <div style={container}>{children}</div>;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"reset\":\"ResetButton_reset__efwrw\"};","import React from \"react\";\r\nimport { Button } from \"antd\";\r\n\r\nimport { IResetButtonType } from \"../../types/types\";\r\n\r\nimport styles from \"./ResetButton.module.scss\";\r\n\r\nexport const ResetButton: React.FC<IResetButtonType> = ({\r\n  onClick,\r\n  children,\r\n  icon,\r\n}) => {\r\n  return (\r\n    <Button className={styles.reset} onClick={onClick} icon={icon}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"SettingButton_btn__TNlVz\"};","import { Button } from \"antd\";\r\nimport React from \"react\";\r\n\r\nimport styles from \"./SettingButton.module.scss\";\r\n\r\nexport type SettingButtonPropsType = {\r\n  onClick?: (e: any) => void;\r\n  icon?: React.ReactNode;\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n};\r\n\r\nexport const SettingButton: React.FC<SettingButtonPropsType> = ({\r\n  onClick,\r\n  icon,\r\n  children,\r\n  className,\r\n}) => {\r\n  return (\r\n    <Button\r\n      onClick={onClick}\r\n      icon={icon}\r\n      className={`${styles.btn} ${className}`}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"subTitle\":\"SubTitle_subTitle__6A8PN\"};","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { animation, useAnimatedInView } from \"../../hooks/useAnimatedInView \";\r\nimport { ISubTitleType } from \"../../types/types\";\r\n\r\nimport styles from \"./SubTitle.module.scss\";\r\n\r\nexport const SubTitle: React.FC<ISubTitleType> = ({ children, className }) => {\r\n  const { ref, controls } = useAnimatedInView();\r\n\r\n  return (\r\n    <motion.p\r\n      ref={ref}\r\n      className={`${styles.subTitle} ${className}`}\r\n      initial=\"hidden\"\r\n      animate={controls}\r\n      variants={animation}\r\n    >\r\n      {children}\r\n    </motion.p>\r\n  );\r\n};\r\n","import { useAnimation, Variants } from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useAnimatedInView = (\r\n  threshold: number = 0.1,\r\n  triggerOnce: boolean = false,\r\n  animationVariants?: Variants\r\n) => {\r\n  const controls = useAnimation();\r\n  const [ref, inView] = useInView({ threshold, triggerOnce });\r\n\r\n  useEffect(() => {\r\n    if (inView) {\r\n      controls.start(\"visible\");\r\n    } else {\r\n      controls.start(\"hidden\");\r\n    }\r\n  }, [controls, inView]);\r\n\r\n  return { ref, controls, animationVariants };\r\n};\r\n\r\nexport const animation = {\r\n  hidden: { opacity: 0 },\r\n  visible: { opacity: 1, transition: { duration: 1 } },\r\n};\r\n","import { Empty } from \"antd\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const EmptyBox: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Empty\r\n      image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n      description={<span style={{ color: \"#ffffff\" }}>{t(\"noData\")}</span>}\r\n    />\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"CardOptions_options__F-aCP\",\"star\":\"CardOptions_star__tS7rd\",\"active\":\"CardOptions_active__E3ut+\",\"editExercise\":\"CardOptions_editExercise__JcxiY\",\"editBtn\":\"CardOptions_editBtn__WYKcX\",\"saveRecord\":\"CardOptions_saveRecord__QY7zv\"};","import React, { useState } from \"react\";\r\nimport { CheckOutlined, EditOutlined, StarFilled } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { CardOptionsPropsType } from \"../../../../../types/types\";\r\nimport { SettingButton } from \"../../../../../components/SettingButton/SettingButton\";\r\nimport { ClosableMessage } from \"../../../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./CardOptions.module.scss\";\r\n\r\nexport const CardOptions: React.FC<CardOptionsPropsType> = ({\r\n  item,\r\n  category,\r\n  setData,\r\n  setCurrentEditingId,\r\n  setNewName,\r\n  editMode,\r\n  setEditMode,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [isActive, setIsActive] = useState<boolean>(false);\r\n\r\n  const toggleFavorite = async (exerciseId: string, currentStatus: boolean) => {\r\n    try {\r\n      const user = getAuth().currentUser;\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          const favoriteExercisesCount = exercisesData.exercises.filter(\r\n            (exercise: { isFavorite: boolean }) => exercise.isFavorite\r\n          ).length;\r\n\r\n          if (!currentStatus && favoriteExercisesCount >= 3) {\r\n            ClosableMessage({\r\n              type: \"warning\",\r\n              content: t(\"maxFavoritesReached\"),\r\n            });\r\n            return;\r\n          }\r\n\r\n          let updatedExercises = exercisesData.exercises.map(\r\n            (exercise: { id: string }) => {\r\n              if (exercise.id === exerciseId) {\r\n                return { ...exercise, isFavorite: !currentStatus };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: updatedExercises,\r\n          });\r\n\r\n          const translatedCategory = t(`categories.${category}`);\r\n          const filteredData = updatedExercises.filter(\r\n            (exercise: { category: string }) =>\r\n              t(`categories.${exercise.category}`) === translatedCategory\r\n          );\r\n          setData(filteredData);\r\n        }\r\n\r\n        if (!currentStatus) {\r\n          ClosableMessage({ type: \"success\", content: t(\"addedToFavorite\") });\r\n          return;\r\n        } else {\r\n          ClosableMessage({\r\n            type: \"success\",\r\n            content: t(\"removedFromFavorite\"),\r\n          });\r\n        }\r\n        setIsActive(!isActive);\r\n      }\r\n    } catch (error) {\r\n      ClosableMessage({ type: \"error\", content: t(\"errorUpdatingFavorite\") });\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (exerciseId: string, currentName: string) => {\r\n    setCurrentEditingId(exerciseId);\r\n    setNewName(currentName);\r\n    setEditMode(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.options}>\r\n      <SettingButton\r\n        icon={<StarFilled />}\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          toggleFavorite(item.id, item.isFavorite);\r\n        }}\r\n        className={`${styles.star} ${item.isFavorite ? styles.active : \"\"}`}\r\n      >\r\n        <span>{t(\"favorite\")}</span>\r\n      </SettingButton>\r\n      {editMode ? (\r\n        <div className={styles.editBtn}>\r\n          <SettingButton icon={<CheckOutlined />} className={styles.saveRecord}>\r\n            <span>{t(\"save\")}</span>\r\n          </SettingButton>\r\n        </div>\r\n      ) : (\r\n        <SettingButton\r\n          icon={<EditOutlined />}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleEditClick(item.id, item.name);\r\n          }}\r\n          className={styles.editExercise}\r\n        >\r\n          <span>{t(\"editName\")}</span>\r\n        </SettingButton>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"deleteIconContainer\":\"DeleteIcon_deleteIconContainer__IWqYi\",\"numberWrapper\":\"DeleteIcon_numberWrapper__YRY9G\",\"deleteIcon\":\"DeleteIcon_deleteIcon__ntbKM\",\"confirm\":\"DeleteIcon_confirm__0yMiT\",\"deleteSave\":\"DeleteIcon_deleteSave__joWfR\"};","import React from \"react\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  deleteDoc,\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { CustomModal } from \"../../../../../../components/CustomModal/CustomModal\";\r\nimport { ResetButton } from \"../../../../../../components/ResetButton/ResetButton\";\r\nimport { ModalDeletePropsType, IExercise } from \"../../../../../../types/types\";\r\nimport { scrollToTop } from \"../../../../../../utils/scrollToTop\";\r\n\r\nimport styles from \"../DeleteIcon.module.scss\";\r\nimport { ClosableMessage } from \"../../../../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nexport const ModalDelete: React.FC<ModalDeletePropsType> = ({\r\n  setLoading,\r\n  setIsModalOpen,\r\n  category,\r\n  setData,\r\n  isModalOpen,\r\n  handleCancel,\r\n  item,\r\n  setConfirm,\r\n  setSelectedExercise,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const handleDeleteCard = async (exerciseId: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const user = getAuth().currentUser;\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n        const setsCollectionRef = doc(getFirestore(), \"sets\", exerciseId);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n        await deleteDoc(setsCollectionRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          let updatedExercises: IExercise[] = [];\r\n\r\n          if (exercisesData && exercisesData.exercises) {\r\n            updatedExercises = exercisesData.exercises.filter(\r\n              (exercise: IExercise) => exercise.id !== exerciseId\r\n            );\r\n\r\n            await updateDoc(exercisesDocRef, {\r\n              exercises: updatedExercises,\r\n            });\r\n            const filteredData = updatedExercises.filter(\r\n              (exercise: IExercise) => t(exercise.category) === t(category)\r\n            );\r\n            setData(filteredData);\r\n            localStorage.setItem(\"exercisesData\", JSON.stringify(filteredData));\r\n          }\r\n        }\r\n        setConfirm(false);\r\n        setIsModalOpen(false);\r\n        setLoading(false);\r\n        setSelectedExercise(null);\r\n        scrollToTop();\r\n        ClosableMessage({ type: \"success\", content: t(\"exerciseDeleted\") });\r\n      }\r\n    } catch (error) {\r\n      ClosableMessage({ type: \"error\", content: t(\"errorDeletingExercise\") });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CustomModal\r\n      open={isModalOpen}\r\n      onCancel={(e) => {\r\n        handleCancel(e);\r\n        setIsModalOpen(false);\r\n      }}\r\n      footer={false}\r\n    >\r\n      <p className={styles.confirm}>{t(\"confirmDeletingExercise\")}</p>\r\n      <div className={styles.deleteSave}>\r\n        <ResetButton\r\n          children={t(\"delete\")}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleDeleteCard(item.id);\r\n          }}\r\n          icon={<DeleteOutlined />}\r\n        />\r\n      </div>\r\n    </CustomModal>\r\n  );\r\n};\r\n","import { CloseOutlined } from \"@ant-design/icons\";\r\nimport { Tooltip } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { DeleteIconPropsType } from \"../../../../../types/types\";\r\n\r\nimport { ModalDelete } from \"./ModalDelete/ModalDelete\";\r\nimport styles from \"./DeleteIcon.module.scss\";\r\n\r\nexport const DeleteIcon: React.FC<DeleteIconPropsType> = ({\r\n  setLoading,\r\n  setIsModalOpen,\r\n  category,\r\n  setData,\r\n  isModalOpen,\r\n  handleCancel,\r\n  item,\r\n  index,\r\n  setSelectedExercise,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [confirm, setConfirm] = useState<boolean>(false);\r\n\r\n  const handleConfirm = () => {\r\n    setConfirm(true);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.deleteIconContainer}>\r\n        <div className={styles.numberWrapper}>{index + 1}</div>\r\n        <Tooltip title={t(\"deleteExercise\")}>\r\n          <CloseOutlined\r\n            className={styles.deleteIcon}\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              handleConfirm();\r\n            }}\r\n          />\r\n        </Tooltip>\r\n      </div>\r\n      {confirm && (\r\n        <ModalDelete\r\n          setLoading={setLoading}\r\n          category={category}\r\n          setData={setData}\r\n          isModalOpen={isModalOpen}\r\n          setIsModalOpen={setIsModalOpen}\r\n          handleCancel={handleCancel}\r\n          item={item}\r\n          setConfirm={setConfirm}\r\n          setSelectedExercise={setSelectedExercise}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"editInput\":\"EditInput_editInput__CnmRa\"};","import React, { useEffect, useRef } from \"react\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { EditInputPropsType, IExercise } from \"../../../../../types/types\";\r\nimport { ClosableMessage } from \"../../../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./EditInput.module.scss\";\r\n\r\nexport const EditInput: React.FC<EditInputPropsType> = ({\r\n  newName,\r\n  editMode,\r\n  currentEditingId,\r\n  setCurrentEditingId,\r\n  category,\r\n  setData,\r\n  setEditMode,\r\n  setNewName,\r\n}) => {\r\n  const user = getAuth().currentUser;\r\n  const { t } = useTranslation();\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (editMode && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editMode]);\r\n\r\n  const changeExerciseName = async (exerciseId: string, newName: string) => {\r\n    try {\r\n      if (user) {\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n\r\n          const currentExercise = exercisesData.exercises.find(\r\n            (exercise: { id: string }) => exercise.id === exerciseId\r\n          );\r\n\r\n          if (currentExercise && currentExercise.name === newName) {\r\n            ClosableMessage({\r\n              type: \"warning\",\r\n              content: t(\"nameNotChanged\"),\r\n            });\r\n            return;\r\n          }\r\n\r\n          if (newName.trim().length < 3) {\r\n            ClosableMessage({\r\n              type: \"error\",\r\n              content: t(\"nameMin3Symbols\"),\r\n            });\r\n            return;\r\n          }\r\n          const nameExists = exercisesData.exercises.some(\r\n            (exercise: { id: string; name: string }) =>\r\n              exercise.id !== exerciseId && exercise.name === newName\r\n          );\r\n\r\n          if (nameExists) {\r\n            ClosableMessage({\r\n              type: \"error\",\r\n              content: t(\"nameAlreadyExists\"),\r\n            });\r\n            return;\r\n          }\r\n\r\n          let updatedExercises = exercisesData.exercises.map(\r\n            (exercise: { id: string; name: string }) => {\r\n              if (exercise.id === exerciseId) {\r\n                return { ...exercise, name: newName };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: updatedExercises,\r\n          });\r\n\r\n          const filteredData = updatedExercises\r\n            .filter(\r\n              (exercise: { category: string }) =>\r\n                t(`categories.${exercise.category}`) ===\r\n                t(`categories.${category}`)\r\n            )\r\n            .map((exercise: IExercise) => ({\r\n              id: exercise.id,\r\n              name: t(exercise.name),\r\n              category: exercise.category,\r\n              bestResult: exercise.bestResult,\r\n              isFavorite: exercise.isFavorite,\r\n            }));\r\n\r\n          localStorage.setItem(\"exercisesData\", JSON.stringify(filteredData));\r\n          setData(filteredData);\r\n\r\n          ClosableMessage({\r\n            type: \"success\",\r\n            content: t(\"nameUpdated\"),\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      ClosableMessage({ type: \"error\", content: t(\"nameChangeFailed\") });\r\n    }\r\n  };\r\n\r\n  const handleEditKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.key === \"Enter\" && currentEditingId) {\r\n      changeExerciseName(currentEditingId, newName);\r\n      setEditMode(false);\r\n      setCurrentEditingId(null);\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (currentEditingId) {\r\n      changeExerciseName(currentEditingId, newName);\r\n      setEditMode(false);\r\n      setCurrentEditingId(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      value={newName}\r\n      className={styles.editInput}\r\n      onChange={(e) => setNewName(e.target.value)}\r\n      onKeyDown={handleEditKeyDown}\r\n      onBlur={handleBlur}\r\n      ref={inputRef}\r\n    />\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cardItem\":\"ExerciseCard_cardItem__2AKct\",\"active\":\"ExerciseCard_active__7n1-4\",\"exerciseContainer\":\"ExerciseCard_exerciseContainer__nXbmq\",\"exerciseName\":\"ExerciseCard_exerciseName__MCYS-\"};","import React, { useState } from \"react\";\r\n\r\nimport { IExercise, ExerciseCardPropsType } from \"../../../../types/types\";\r\n\r\nimport { CardOptions } from \"./CardOptions/CardOptions\";\r\nimport { DeleteIcon } from \"./DeleteIcon/DeleteIcon\";\r\nimport { EditInput } from \"./EditInput/EditInput\";\r\nimport styles from \"./ExerciseCard.module.scss\";\r\n\r\nexport const ExerciseCard: React.FC<ExerciseCardPropsType> = ({\r\n  item,\r\n  onSelectExercise,\r\n  category,\r\n  setData,\r\n  setLoading,\r\n  activeCardId,\r\n  setActiveCardId,\r\n  index,\r\n  exercisesRef,\r\n  setSelectedExercise,\r\n}) => {\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n  const [newName, setNewName] = useState<string>(\"\");\r\n  const [currentEditingId, setCurrentEditingId] = useState<string | null>(null);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const handleCancel = (e: { stopPropagation: () => void }) => {\r\n    e.stopPropagation();\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleCardClick = (item: IExercise) => {\r\n    setActiveCardId(item.id);\r\n    onSelectExercise(item);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.cardItem} ${\r\n        activeCardId === item.id ? styles.active : \"\"\r\n      }`}\r\n      onClick={() => handleCardClick(item)}\r\n      ref={exercisesRef}\r\n    >\r\n      <DeleteIcon\r\n        setLoading={setLoading}\r\n        setIsModalOpen={setIsModalOpen}\r\n        category={category}\r\n        setData={setData}\r\n        isModalOpen={isModalOpen}\r\n        handleCancel={handleCancel}\r\n        item={item}\r\n        index={index}\r\n        setSelectedExercise={setSelectedExercise}\r\n      />\r\n      {currentEditingId === item.id && editMode ? (\r\n        <EditInput\r\n          newName={newName}\r\n          editMode={editMode}\r\n          currentEditingId={currentEditingId}\r\n          setCurrentEditingId={setCurrentEditingId}\r\n          category={category}\r\n          setData={setData}\r\n          setEditMode={setEditMode}\r\n          setNewName={setNewName}\r\n        />\r\n      ) : (\r\n        <div className={styles.exerciseContainer}>\r\n          <span className={styles.exerciseName}>{item.name}</span>\r\n        </div>\r\n      )}\r\n      <CardOptions\r\n        item={item}\r\n        category={category}\r\n        setData={setData}\r\n        setCurrentEditingId={setCurrentEditingId}\r\n        setNewName={setNewName}\r\n        editMode={editMode}\r\n        setEditMode={setEditMode}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Exercises_title__ThgWQ\",\"description\":\"Exercises_description__cykz7\",\"cards\":\"Exercises_cards__+xw7k\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport { IExercise, IExercisesProps } from \"../../../types/types\";\r\nimport { Loader } from \"../../../components/Loader/Loader\";\r\nimport { EmptyBox } from \"../../../components/EmptyBox/EmptyBox\";\r\nimport { ClosableMessage } from \"../../../components/ClosableMessage/ClosableMessage\";\r\nimport {\r\n  animation,\r\n  useAnimatedInView,\r\n} from \"../../../hooks/useAnimatedInView \";\r\n\r\nimport { ExerciseCard } from \"./ExerciseCard/ExerciseCard\";\r\nimport styles from \"./Exercises.module.scss\";\r\n\r\nexport const Exercises: React.FC<IExercisesProps> = ({\r\n  category,\r\n  updateTrigger,\r\n  onSelectExercise,\r\n  exercisesRef,\r\n  activeCardId,\r\n  setActiveCardId,\r\n  setSelectedExercise,\r\n  data,\r\n  setData,\r\n}) => {\r\n  const user = getAuth().currentUser;\r\n  const { ref, controls } = useAnimatedInView();\r\n  const { t } = useTranslation();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(\r\n      localStorage.getItem(\"exercisesData\") || \"[]\"\r\n    );\r\n    if (storedData.length > 0) {\r\n      setData(storedData);\r\n      setLoading(false);\r\n    }\r\n  }, [category, setData]);\r\n\r\n  useEffect(() => {\r\n    const fetchExercises = async () => {\r\n      setLoading(true);\r\n      try {\r\n        if (user) {\r\n          const exercisesDoc = await getDoc(\r\n            doc(getFirestore(), \"exercises\", user.uid)\r\n          );\r\n\r\n          if (exercisesDoc.exists()) {\r\n            const exercisesData = exercisesDoc.data();\r\n            const filteredData = exercisesData.exercises.filter(\r\n              (exercise: IExercise) => {\r\n                const exerciseCategoryTranslated = t(exercise.category);\r\n                return exerciseCategoryTranslated === t(category);\r\n              }\r\n            );\r\n\r\n            localStorage.setItem(\"exercisesData\", JSON.stringify(filteredData));\r\n            setData(filteredData);\r\n          }\r\n        }\r\n        setLoading(false);\r\n      } catch (error) {\r\n        ClosableMessage({\r\n          type: \"error\",\r\n          content: t(\"errorFetchingExercises\"),\r\n        });\r\n      }\r\n    };\r\n\r\n    fetchExercises();\r\n  }, [category, t, updateTrigger, user, setData]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <SubTitle children={t(\"exercises\")} className={styles.title} />\r\n          <motion.div\r\n            ref={ref}\r\n            initial=\"hidden\"\r\n            animate={controls}\r\n            variants={animation}\r\n            className={styles.description}\r\n          >\r\n            {t(\"chooseExercise\")}\r\n          </motion.div>\r\n          <motion.div\r\n            ref={ref}\r\n            initial=\"hidden\"\r\n            animate={controls}\r\n            variants={animation}\r\n            className={styles.cards}\r\n          >\r\n            {data.length ? (\r\n              data.map((item: IExercise, index) => (\r\n                <ExerciseCard\r\n                  key={item.id}\r\n                  item={item}\r\n                  onSelectExercise={onSelectExercise}\r\n                  category={category}\r\n                  setData={setData}\r\n                  setLoading={setLoading}\r\n                  activeCardId={activeCardId}\r\n                  setActiveCardId={setActiveCardId}\r\n                  index={index}\r\n                  exercisesRef={exercisesRef}\r\n                  setSelectedExercise={setSelectedExercise}\r\n                />\r\n              ))\r\n            ) : (\r\n              <EmptyBox />\r\n            )}\r\n          </motion.div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","export const scrollToBottom = () =>\r\n  setTimeout(() => {\r\n    window.scrollTo({\r\n      left: 0,\r\n      top: document.body.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, 150);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tableTitle\":\"ExerciseTable_tableTitle__nWHV1\",\"subtitle\":\"ExerciseTable_subtitle__dWB0y\",\"dateAndDelete\":\"ExerciseTable_dateAndDelete__Rghoq\",\"table\":\"ExerciseTable_table__gqYvK\",\"editableDiv\":\"ExerciseTable_editableDiv__lnIPx\",\"inputContainer\":\"ExerciseTable_inputContainer__sehEz\"};","// extracted by mini-css-extract-plugin\nexport default {\"tableFooter\":\"TableFooter_tableFooter__Vdj4o\",\"saveBtn\":\"TableFooter_saveBtn__CLumP\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TrainingHistory_container__1IuQh\",\"collapse\":\"TrainingHistory_collapse__X+YQG\",\"historyWorkout\":\"TrainingHistory_historyWorkout__wDKRi\"};","import React from \"react\";\r\nimport { Collapse } from \"antd\";\r\nimport { RightOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { TrainingHistoryPropsType } from \"../../../../../types/types\";\r\nimport { scrollToBottom } from \"../../../../../utils/scrollToBottom\";\r\n\r\nimport styles from \"./TrainingHistory.module.scss\";\r\n\r\nexport const TrainingHistory: React.FC<TrainingHistoryPropsType> = ({\r\n  showHistory,\r\n  workouts,\r\n  workoutDates,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  const formatDate = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"ru-RU\");\r\n  };\r\n\r\n  const sortedData = workoutDates\r\n    .map((date, index) => ({ date, workout: workouts[index] }))\r\n    .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\r\n\r\n  const genExtra = () => (\r\n    <img\r\n      src={process.env.PUBLIC_URL + \"/assets/Icons/AdditionalIcons/history.png\"}\r\n      alt=\"History\"\r\n    />\r\n  );\r\n\r\n  const items = sortedData.map((item, index) => ({\r\n    key: index.toString(),\r\n    label: (\r\n      <p onClick={scrollToBottom}>\r\n        {t(\"workoutFor\")} <span> {formatDate(item.date)} </span>\r\n      </p>\r\n    ),\r\n    children: (\r\n      <div className={styles.historyWorkout}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>{t(\"set\")}</th>\r\n              <th>{t(\"weight\")}</th>\r\n              <th>{t(\"reps\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {item.workout.map((w, i) => (\r\n              <tr key={i}>\r\n                <td>{w.set}.</td>\r\n                <td>{w.weight}</td>\r\n                <td>{w.reps}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    ),\r\n    extra: genExtra(),\r\n  }));\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {showHistory && workouts.length > 0 && (\r\n        <Collapse\r\n          bordered={false}\r\n          expandIcon={({ isActive }) => (\r\n            <RightOutlined rotate={isActive ? 90 : 0} />\r\n          )}\r\n          items={items}\r\n          className={styles.collapse}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  RightOutlined,\r\n  CloseOutlined,\r\n  LeftOutlined,\r\n  PlusOutlined,\r\n  CheckOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { collection, doc, getDoc, getFirestore } from \"firebase/firestore\";\r\n\r\nimport { CustomButton } from \"../../../../components/CustomButton/CustomButton\";\r\nimport {\r\n  ExerciseTableType,\r\n  TableFooterPropsType,\r\n} from \"../../../../types/types\";\r\nimport { SettingButton } from \"../../../../components/SettingButton/SettingButton\";\r\n\r\nimport styles from \"./TableFooter.module.scss\";\r\nimport { TrainingHistory } from \"./TrainingHistory/TrainingHistory\";\r\n\r\nexport const TableFooter: React.FC<TableFooterPropsType> = ({\r\n  selectedExercise,\r\n  data,\r\n  setData,\r\n  setEditWeight,\r\n  saveExerciseData,\r\n  onWorkoutDateChange,\r\n  setCurrentWorkout,\r\n  addRowBtn,\r\n  setAddRowBtn,\r\n  saveBtn,\r\n  setSaveBtn,\r\n  setDeleteBtn,\r\n  showHistory,\r\n  setShowHistory,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const [workouts, setWorkouts] = useState<ExerciseTableType[][]>([]);\r\n  const [workoutDates, setWorkoutDates] = useState<string[]>([]);\r\n  const [currentWorkoutIndex, setCurrentWorkoutIndex] = useState<number>(-1);\r\n  const [hideButtons, setHideButtons] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadWorkouts = async () => {\r\n      setHideButtons(true);\r\n      setCurrentWorkoutIndex(-1);\r\n      setAddRowBtn(false);\r\n      setSaveBtn(false);\r\n      setDeleteBtn(false);\r\n      setCurrentWorkout(false);\r\n      setData([]);\r\n\r\n      if (selectedExercise) {\r\n        const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n        const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n        try {\r\n          const docSnapshot = await getDoc(setDocRef);\r\n          if (docSnapshot.exists()) {\r\n            const workoutsData = docSnapshot.data()?.workouts || [];\r\n\r\n            if (Array.isArray(workoutsData) && workoutsData.length > 0) {\r\n              setWorkouts(\r\n                workoutsData.map((workout) => workout.approaches || [])\r\n              );\r\n              setWorkoutDates(workoutsData.map((workout) => workout.date));\r\n              const lastIndex = workoutsData.length - 1;\r\n              setCurrentWorkoutIndex(lastIndex);\r\n              setHideButtons(false);\r\n              onWorkoutDateChange(workoutsData[lastIndex].date);\r\n            } else {\r\n              setData([]);\r\n              setWorkoutDates([]);\r\n              setCurrentWorkoutIndex(-1);\r\n              setHideButtons(true);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error loading workouts:\", error);\r\n        }\r\n      }\r\n    };\r\n\r\n    loadWorkouts();\r\n  }, [\r\n    selectedExercise,\r\n    onWorkoutDateChange,\r\n    setAddRowBtn,\r\n    setCurrentWorkout,\r\n    setData,\r\n    setDeleteBtn,\r\n    setSaveBtn,\r\n  ]);\r\n\r\n  const addRow = () => {\r\n    if (!selectedExercise) return;\r\n    const newData = [...data];\r\n    const nextSet =\r\n      newData.length > 0 ? newData[newData.length - 1].set + 1 : 1;\r\n\r\n    const newRow: ExerciseTableType = {\r\n      key: nextSet.toString(),\r\n      weight: \"\",\r\n      set: nextSet,\r\n      reps: \"\",\r\n      icon: <CloseOutlined />,\r\n    };\r\n\r\n    newData.push(newRow);\r\n    setData(newData);\r\n    setEditWeight(newRow.key);\r\n  };\r\n\r\n  const startNewTraining = () => {\r\n    setData([]);\r\n    setAddRowBtn(true);\r\n    setSaveBtn(true);\r\n    setHideButtons(true);\r\n    setCurrentWorkout(true);\r\n    setDeleteBtn(false);\r\n    setShowHistory(true);\r\n  };\r\n\r\n  const showPreviousWorkout = () => {\r\n    if (currentWorkoutIndex > 0) {\r\n      const newIndex = currentWorkoutIndex - 1;\r\n      setCurrentWorkoutIndex(newIndex);\r\n      setData(workouts[newIndex] || []);\r\n      onWorkoutDateChange(workoutDates[newIndex]);\r\n    }\r\n  };\r\n\r\n  const showNextWorkout = () => {\r\n    if (currentWorkoutIndex < workouts.length - 1) {\r\n      const newIndex = currentWorkoutIndex + 1;\r\n      setCurrentWorkoutIndex(newIndex);\r\n      setData(workouts[newIndex] || []);\r\n      onWorkoutDateChange(workoutDates[newIndex]);\r\n    }\r\n  };\r\n\r\n  const isLastWorkout = currentWorkoutIndex === workouts.length - 1;\r\n\r\n  return (\r\n    <>\r\n      {addRowBtn && (\r\n        <SettingButton onClick={addRow} icon={<PlusOutlined />}>\r\n          {t(\"addRow\")}\r\n        </SettingButton>\r\n      )}\r\n      {saveBtn && (\r\n        <div className={styles.saveBtn}>\r\n          <CustomButton onClick={saveExerciseData} icon={<CheckOutlined />}>\r\n            {t(\"saveTraining\")}\r\n          </CustomButton>\r\n        </div>\r\n      )}\r\n      <div className={styles.tableFooter}>\r\n        {!hideButtons && currentWorkoutIndex > 0 ? (\r\n          <CustomButton onClick={showPreviousWorkout} icon={<LeftOutlined />}>\r\n            {t(\"previous\")}\r\n          </CustomButton>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {!hideButtons && !isLastWorkout && (\r\n          <CustomButton onClick={showNextWorkout} icon={<RightOutlined />}>\r\n            {t(\"next\")}\r\n          </CustomButton>\r\n        )}\r\n        {(isLastWorkout || hideButtons) && !saveBtn && (\r\n          <CustomButton onClick={startNewTraining}>\r\n            {t(\"newEntry\")}\r\n            <RightOutlined />\r\n          </CustomButton>\r\n        )}\r\n      </div>\r\n      <TrainingHistory\r\n        showHistory={showHistory}\r\n        // setShowHistory={setShowHistory}\r\n        workouts={workouts}\r\n        workoutDates={workoutDates}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"collapse\":\"BestResult_collapse__pQyb-\",\"title\":\"BestResult_title__jsqEH\",\"wrapper\":\"BestResult_wrapper__1-LYV\",\"hexagonTitle\":\"BestResult_hexagonTitle__x6aFK\",\"hexagonContainer\":\"BestResult_hexagonContainer__9mpLp\",\"container\":\"BestResult_container__dYweL\",\"saveRecord\":\"BestResult_saveRecord__oirpc\"};","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CheckOutlined } from \"@ant-design/icons\";\r\nimport { Collapse } from \"antd\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { SettingButton } from \"../../../../components/SettingButton/SettingButton\";\r\nimport NumericInput from \"../../../../components/NumericInput/NumericInput\";\r\nimport { IBestResultProps, IExercise } from \"../../../../types/types\";\r\nimport { ClosableMessage } from \"../../../../components/ClosableMessage/ClosableMessage\";\r\nimport { Hexagon } from \"../../../../components/Hexagon/Hexagon\";\r\nimport {\r\n  animation,\r\n  useAnimatedInView,\r\n} from \"../../../../hooks/useAnimatedInView \";\r\n\r\nimport styles from \"./BestResult.module.scss\";\r\n\r\nexport const BestResult: React.FC<IBestResultProps> = ({\r\n  bestResult,\r\n  selectedExercise,\r\n  setBestResult,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const user = getAuth().currentUser;\r\n  const { ref, controls } = useAnimatedInView();\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n  const [weight, setWeight] = useState<string>(bestResult?.weight || \"0\");\r\n  const [reps, setReps] = useState<string>(bestResult?.reps || \"0\");\r\n  const [isSaving, setIsSaving] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    setWeight(bestResult?.weight || \"0\");\r\n    setReps(bestResult?.reps || \"0\");\r\n  }, [bestResult]);\r\n\r\n  const saveBestResult = async (updatedBestResult: {\r\n    weight: string;\r\n    reps: string;\r\n  }) => {\r\n    if (user && selectedExercise && !isSaving) {\r\n      setIsSaving(true);\r\n      const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n      try {\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          const exerciseToUpdate = exercisesData.exercises.find(\r\n            (exercise: IExercise) => exercise.id === selectedExercise.id\r\n          );\r\n\r\n          if (\r\n            exerciseToUpdate.bestResult.weight === updatedBestResult.weight &&\r\n            exerciseToUpdate.bestResult.reps === updatedBestResult.reps\r\n          ) {\r\n            ClosableMessage({\r\n              type: \"info\",\r\n              content: t(\"noChangesDetected\"),\r\n            });\r\n            setIsSaving(false);\r\n            return;\r\n          }\r\n\r\n          if (Number(updatedBestResult.reps) === 0) {\r\n            setReps(exerciseToUpdate.bestResult.reps);\r\n            ClosableMessage({\r\n              type: \"error\",\r\n              content: t(\"repsNot0\"),\r\n            });\r\n            setIsSaving(false);\r\n            return;\r\n          }\r\n\r\n          const updatedExercises = exercisesData.exercises.map(\r\n            (exercise: IExercise) => {\r\n              if (exercise.id === selectedExercise.id) {\r\n                return {\r\n                  ...exercise,\r\n                  bestResult: updatedBestResult,\r\n                };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          await updateDoc(exercisesDocRef, { exercises: updatedExercises });\r\n          setBestResult(updatedBestResult);\r\n          ClosableMessage({\r\n            type: \"success\",\r\n            content: t(\"recordUpdated\"),\r\n          });\r\n        } else {\r\n          ClosableMessage({\r\n            type: \"error\",\r\n            content: t(\"noExercisesFound\"),\r\n          });\r\n        }\r\n      } catch (error) {\r\n        ClosableMessage({\r\n          type: \"error\",\r\n          content: t(\"errorSavingBestResult\"),\r\n        });\r\n      } finally {\r\n        setIsSaving(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!isSaving) {\r\n      await saveBestResult({ weight, reps });\r\n      setEditMode(false);\r\n    }\r\n  };\r\n\r\n  const handleEditMode = () => setEditMode(true);\r\n\r\n  const genExtra = () => (\r\n    <img\r\n      src={process.env.PUBLIC_URL + \"/assets/Icons/AdditionalIcons/trophy.png\"}\r\n      alt=\"Trophy\"\r\n    />\r\n  );\r\n\r\n  const items = [\r\n    {\r\n      key: \"1\",\r\n      label: <div className={styles.title}>{t(\"bestExerciseResult\")}</div>,\r\n      children: (\r\n        <>\r\n          {editMode ? (\r\n            <>\r\n              <div className={styles.wrapper}>\r\n                <div className={styles.container}>\r\n                  <NumericInput value={weight} onChange={setWeight} />\r\n                  <span>{t(\"kg\")}</span>\r\n                </div>\r\n                <div className={styles.container}>\r\n                  <NumericInput\r\n                    value={reps}\r\n                    onChange={setReps}\r\n                    onBlur={handleSave}\r\n                  />\r\n                  <span>{t(\"bestResultReps\")}</span>\r\n                </div>\r\n              </div>\r\n              <SettingButton\r\n                icon={<CheckOutlined />}\r\n                onClick={handleSave}\r\n                className={styles.saveRecord}\r\n              >\r\n                <span>{t(\"saveRecord\")}</span>\r\n              </SettingButton>\r\n            </>\r\n          ) : (\r\n            <div className={styles.wrapper}>\r\n              <div>\r\n                <motion.div\r\n                  ref={ref}\r\n                  initial=\"hidden\"\r\n                  animate={controls}\r\n                  variants={animation}\r\n                  className={styles.hexagonTitle}\r\n                >\r\n                  {t(\"weight\")}\r\n                </motion.div>\r\n                <div className={styles.hexagonContainer}>\r\n                  <Hexagon text={weight} onClick={handleEditMode} />\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <motion.div\r\n                  ref={ref}\r\n                  initial=\"hidden\"\r\n                  animate={controls}\r\n                  variants={animation}\r\n                  className={styles.hexagonTitle}\r\n                >\r\n                  {t(\"reps\")}\r\n                </motion.div>\r\n                <div className={styles.hexagonContainer}>\r\n                  <Hexagon text={reps} onClick={handleEditMode} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      ),\r\n      extra: genExtra(),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.collapse}>\r\n      <Collapse items={items} bordered={false} />\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"deleteWorkout\":\"DeleteWorkout_deleteWorkout__T7qoY\",\"confirm\":\"DeleteWorkout_confirm__yTni8\",\"deleteBtn\":\"DeleteWorkout_deleteBtn__u1SVc\"};","import React, { useState } from \"react\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  collection,\r\n  getFirestore,\r\n  getDoc,\r\n  updateDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { message } from \"antd\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { ResetButton } from \"../../../../components/ResetButton/ResetButton\";\r\nimport { IDeleteWorkoutProps } from \"../../../../types/types\";\r\nimport { CustomModal } from \"../../../../components/CustomModal/CustomModal\";\r\nimport { scrollToTop } from \"../../../../utils/scrollToTop\";\r\n\r\nimport styles from \"./DeleteWorkout.module.scss\";\r\n\r\nexport const DeleteWorkout: React.FC<IDeleteWorkoutProps> = ({\r\n  workoutDate,\r\n  selectedExercise,\r\n  setData,\r\n  setWorkoutDate,\r\n  setSelectedExercise,\r\n  setActiveCardId,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const user = getAuth().currentUser;\r\n  const [, contextHolder] = message.useMessage();\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n\r\n  const deleteWorkoutByDate = async () => {\r\n    if (!workoutDate || !selectedExercise || !user) return;\r\n\r\n    const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n    const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n\r\n    try {\r\n      const docSnapshot = await getDoc(setDocRef);\r\n      if (docSnapshot.exists()) {\r\n        const documentData = docSnapshot.data();\r\n        const workouts = documentData.workouts || [];\r\n        const filteredWorkouts = workouts.filter(\r\n          (workout: { date: string | number | Date }) =>\r\n            new Date(workout.date).toLocaleString() !== workoutDate\r\n        );\r\n\r\n        await updateDoc(setDocRef, { workouts: filteredWorkouts });\r\n\r\n        setData([]);\r\n        setWorkoutDate(null);\r\n        setSelectedExercise(null);\r\n        setActiveCardId(null);\r\n        scrollToTop();\r\n        setIsModalOpen(false);\r\n\r\n        message.success({\r\n          key: \"limit-success\",\r\n          content: t(\"workoutDeleted\"),\r\n        });\r\n      }\r\n    } catch (error) {\r\n      message.error({\r\n        key: \"limit-error\",\r\n        content: t(\"errorDeletingWorkout\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    if (!workoutDate || !selectedExercise) {\r\n      message.error({\r\n        key: \"limit-error\",\r\n        content: t(\"noDataToDelete\"),\r\n      });\r\n      return;\r\n    }\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const deleteWorkout = (e: { stopPropagation: () => void }) => {\r\n    e.stopPropagation();\r\n    deleteWorkoutByDate();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <div className={styles.deleteWorkout}>\r\n        <ResetButton icon={<DeleteOutlined />} onClick={confirmDelete}>\r\n          {t(\"deleteWorkout\")}\r\n        </ResetButton>\r\n      </div>\r\n      <CustomModal\r\n        open={isModalOpen}\r\n        onCancel={(e) => {\r\n          setIsModalOpen(false);\r\n        }}\r\n        footer={false}\r\n      >\r\n        <p className={styles.confirm}>{t(\"confirmDeletingWorkout\")}</p>\r\n        <div className={styles.deleteBtn}>\r\n          <ResetButton\r\n            children={t(\"delete\")}\r\n            onClick={deleteWorkout}\r\n            icon={<DeleteOutlined />}\r\n          />\r\n        </div>\r\n      </CustomModal>\r\n    </>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { ConfigProvider, Divider, Table } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getFirestore,\r\n  writeBatch,\r\n} from \"firebase/firestore\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport {\r\n  IApproach,\r\n  IExercise,\r\n  ExerciseTablePropsType,\r\n  ExerciseTableType,\r\n} from \"../../../types/types\";\r\nimport { EmptyBox } from \"../../../components/EmptyBox/EmptyBox\";\r\nimport NumericInput from \"../../../components/NumericInput/NumericInput\";\r\nimport { scrollToBottom } from \"../../../utils/scrollToBottom\";\r\nimport { ClosableMessage } from \"../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./ExerciseTable.module.scss\";\r\nimport { TableFooter } from \"./TableFooter/TableFooter\";\r\nimport { BestResult } from \"./BestResult/BestResult\";\r\nimport { DeleteWorkout } from \"./DeleteWorkout/DeleteWorkout\";\r\n\r\nexport const ExerciseTable: React.FC<ExerciseTablePropsType> = ({\r\n  selectedExercise,\r\n  setSelectedExercise,\r\n  setActiveCardId,\r\n}) => {\r\n  const user = getAuth().currentUser;\r\n  const { t } = useTranslation();\r\n  const [data, setData] = useState<ExerciseTableType[]>([]);\r\n  const [bestResult, setBestResult] = useState<{\r\n    weight: string;\r\n    reps: string;\r\n  } | null>(null);\r\n  const [editWeight, setEditWeight] = useState<string | null>(null);\r\n  const [editReps, setEditReps] = useState<string | null>(null);\r\n  const [workoutDate, setWorkoutDate] = useState<string | null>(null);\r\n  const [currentWorkout, setCurrentWorkout] = useState(false);\r\n  const [addRowBtn, setAddRowBtn] = useState(false);\r\n  const [saveBtn, setSaveBtn] = useState(false);\r\n  const [deleteBtn, setDeleteBtn] = useState(true);\r\n  const [showHistory, setShowHistory] = useState(false);\r\n\r\n  const weightInputRef = useRef<HTMLInputElement | null>(null);\r\n  const repsInputRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (editReps && repsInputRef.current) {\r\n      repsInputRef.current.focus();\r\n    }\r\n    if (editWeight && weightInputRef.current) {\r\n      weightInputRef.current.focus();\r\n    }\r\n  }, [editReps, editWeight]);\r\n\r\n  const loadExerciseData = useCallback(async () => {\r\n    if (user && selectedExercise) {\r\n      const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n      const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n      const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n\r\n      try {\r\n        const [docSnapshot, exercisesDoc] = await Promise.all([\r\n          getDoc(setDocRef),\r\n          getDoc(exercisesDocRef),\r\n        ]);\r\n        setShowHistory(false);\r\n        if (docSnapshot.exists()) {\r\n          const documentData = docSnapshot.data();\r\n          const workouts = documentData?.workouts || [];\r\n\r\n          if (workouts.length > 0) {\r\n            const latestWorkout = workouts[workouts.length - 1];\r\n            const workoutDate = new Date(latestWorkout.date).toLocaleString();\r\n\r\n            setWorkoutDate(workoutDate);\r\n            const approaches = latestWorkout.approaches || [];\r\n            const loadedData: ExerciseTableType[] = approaches.map(\r\n              (approach: IApproach) => ({\r\n                key: approach.id,\r\n                set: approach.set,\r\n                weight: approach.weight,\r\n                reps: approach.reps,\r\n                icon: <CloseOutlined />,\r\n              })\r\n            );\r\n\r\n            setData(loadedData);\r\n            scrollToBottom();\r\n            setDeleteBtn(true);\r\n          } else {\r\n            setData([]);\r\n            setWorkoutDate(null);\r\n            setDeleteBtn(false);\r\n          }\r\n\r\n          if (exercisesDoc.exists()) {\r\n            const exercisesData = exercisesDoc.data();\r\n            const exercise = exercisesData.exercises.find(\r\n              (ex: { id: string }) => ex.id === selectedExercise.id\r\n            );\r\n            if (exercise) {\r\n              setBestResult(exercise.bestResult);\r\n            } else {\r\n              setBestResult(null);\r\n            }\r\n          }\r\n        } else {\r\n          setData([]);\r\n          setWorkoutDate(null);\r\n          setBestResult(null);\r\n          scrollToBottom();\r\n          setDeleteBtn(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading exercise data:\", error);\r\n      }\r\n    }\r\n  }, [selectedExercise, user]);\r\n\r\n  useEffect(() => {\r\n    if (selectedExercise) {\r\n      loadExerciseData();\r\n    } else {\r\n      setData([]);\r\n      setBestResult(null);\r\n    }\r\n  }, [selectedExercise, loadExerciseData]);\r\n\r\n  const saveExerciseData = async () => {\r\n    if (user && selectedExercise) {\r\n      const validData = data.filter(\r\n        (row) => Number(row.reps) > 0 && Number(row.weight) > 0\r\n      );\r\n\r\n      if (validData.length === 0) {\r\n        ClosableMessage({\r\n          type: \"error\",\r\n          content: t(\"noDataToSave\"),\r\n        });\r\n        return;\r\n      }\r\n      const setsCollectionRef = collection(getFirestore(), \"sets\");\r\n      const exercisesDocRef = doc(getFirestore(), \"exercises\", user.uid);\r\n\r\n      try {\r\n        const batch = writeBatch(getFirestore());\r\n        const setDocRef = doc(setsCollectionRef, selectedExercise.id);\r\n        const setDoc = await getDoc(setDocRef);\r\n        const setData = setDoc.exists() ? setDoc.data() : { workouts: [] };\r\n\r\n        const newWorkout = {\r\n          id: uuidv4(),\r\n          date: new Date().toISOString(),\r\n          approaches: validData.map((row, index) => ({\r\n            id: uuidv4(),\r\n            set: index + 1,\r\n            reps: row.reps,\r\n            weight: row.weight,\r\n          })),\r\n        };\r\n\r\n        setData.workouts.push(newWorkout);\r\n        batch.set(setDocRef, setData);\r\n\r\n        const exercisesDoc = await getDoc(exercisesDocRef);\r\n        if (exercisesDoc.exists()) {\r\n          const exercisesData = exercisesDoc.data();\r\n          const updatedExercises = exercisesData.exercises.map(\r\n            (exercise: IExercise) => {\r\n              if (exercise.id === selectedExercise.id) {\r\n                return {\r\n                  ...exercise,\r\n                };\r\n              }\r\n              return exercise;\r\n            }\r\n          );\r\n\r\n          batch.update(exercisesDocRef, { exercises: updatedExercises });\r\n        }\r\n\r\n        await batch.commit();\r\n\r\n        setCurrentWorkout(false);\r\n        setAddRowBtn(false);\r\n        setSaveBtn(false);\r\n\r\n        setShowHistory(false);\r\n\r\n        ClosableMessage({\r\n          type: \"success\",\r\n          content: t(\"exerciseDataSaved\"),\r\n        });\r\n      } catch (error) {\r\n        ClosableMessage({\r\n          type: \"error\",\r\n          content: t(\"errorSavingExerciseData\"),\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateWeight = (key: string, value: string) => {\r\n    const newData = data.map((row) => {\r\n      if (row.key === key) {\r\n        return { ...row, weight: value };\r\n      }\r\n      return row;\r\n    });\r\n    setData(newData);\r\n  };\r\n\r\n  const updateReps = (key: string, value: string) => {\r\n    const newData = data.map((row) => {\r\n      if (row.key === key) {\r\n        return { ...row, reps: value };\r\n      }\r\n      return row;\r\n    });\r\n    setData(newData);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: `${t(\"set\")}`,\r\n      dataIndex: \"set\",\r\n      width: \"20%\",\r\n      render: (set: string) => <span>{set}.</span>,\r\n    },\r\n    {\r\n      title: `${t(\"weight\")}`,\r\n      dataIndex: \"weight\",\r\n      width: \"30%\",\r\n      render: (text: string, record: ExerciseTableType) =>\r\n        currentWorkout ? (\r\n          editWeight === record.key ? (\r\n            <div className={styles.inputContainer}>\r\n              <NumericInput\r\n                ref={weightInputRef}\r\n                value={record.weight}\r\n                onChange={(value) => updateWeight(record.key, value)}\r\n                onBlur={() => setEditWeight(null)}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div\r\n              onClick={() => setEditWeight(record.key)}\r\n              className={styles.editableDiv}\r\n            >\r\n              {record.weight || t(\"clickToEdit\")}\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className={styles.editableDiv}>{record.weight}</div>\r\n        ),\r\n    },\r\n    {\r\n      title: `${t(\"reps\")}`,\r\n      dataIndex: \"reps\",\r\n      width: \"25%\",\r\n      render: (text: string, record: ExerciseTableType) =>\r\n        currentWorkout ? (\r\n          editReps === record.key ? (\r\n            <div className={styles.inputContainer}>\r\n              <NumericInput\r\n                ref={repsInputRef}\r\n                value={record.reps}\r\n                onChange={(value) => updateReps(record.key, value)}\r\n                onBlur={() => setEditReps(null)}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div\r\n              onClick={() => setEditReps(record.key)}\r\n              className={styles.editableDiv}\r\n            >\r\n              {record.reps || t(\"clickToEdit\")}\r\n            </div>\r\n          )\r\n        ) : (\r\n          <div className={styles.editableDiv}>{record.reps}</div>\r\n        ),\r\n    },\r\n  ];\r\n\r\n  const handleWorkoutDateChange = useCallback(\r\n    (date: string) => {\r\n      const workoutDate = new Date(date);\r\n      const formattedDate = workoutDate.toLocaleString();\r\n      if (!isNaN(workoutDate.getTime())) {\r\n        setWorkoutDate(formattedDate);\r\n        setCurrentWorkout(false);\r\n      } else {\r\n        console.error(\"Invalid date:\", date);\r\n      }\r\n    },\r\n    [setWorkoutDate, setCurrentWorkout]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Divider style={{ backgroundColor: \"gray\" }} />\r\n      <div className={styles.tableTitle}>\r\n        <SubTitle\r\n          children={selectedExercise?.name || t(\"noExerciseSelected\")}\r\n          className={styles.subtitle}\r\n        />\r\n      </div>\r\n      <ConfigProvider\r\n        theme={{\r\n          components: {\r\n            Table: {\r\n              headerBg: \"#1A1A1A\",\r\n              headerColor: \"#ffffff\",\r\n              cellFontSize: 17,\r\n              colorBgContainer: \"#282828\",\r\n              colorText: \"#ffffff\",\r\n              borderColor: \"#535353\",\r\n              cellPaddingBlock: 11,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        {selectedExercise ? (\r\n          <>\r\n            <BestResult\r\n              bestResult={bestResult}\r\n              selectedExercise={selectedExercise}\r\n              setBestResult={setBestResult}\r\n            />\r\n            {currentWorkout ? (\r\n              <div className={styles.dateAndDelete}>\r\n                {t(\"workoutDate\")}: {new Date().toLocaleDateString()}\r\n              </div>\r\n            ) : (\r\n              <div className={styles.dateAndDelete}>\r\n                {t(\"workoutDate\")}: {workoutDate ? workoutDate : \". . .\"}\r\n              </div>\r\n            )}\r\n            <Table\r\n              rowKey={(record) => record.key}\r\n              columns={columns}\r\n              dataSource={data}\r\n              pagination={false}\r\n              className={styles.table}\r\n              locale={{ emptyText: <EmptyBox /> }}\r\n            />\r\n            <TableFooter\r\n              selectedExercise={selectedExercise}\r\n              data={data}\r\n              setData={setData}\r\n              setEditWeight={setEditWeight}\r\n              saveExerciseData={saveExerciseData}\r\n              onWorkoutDateChange={handleWorkoutDateChange}\r\n              setCurrentWorkout={setCurrentWorkout}\r\n              addRowBtn={addRowBtn}\r\n              setAddRowBtn={setAddRowBtn}\r\n              saveBtn={saveBtn}\r\n              setSaveBtn={setSaveBtn}\r\n              setDeleteBtn={setDeleteBtn}\r\n              showHistory={showHistory}\r\n              setShowHistory={setShowHistory}\r\n            />\r\n            {deleteBtn && (\r\n              <DeleteWorkout\r\n                workoutDate={workoutDate}\r\n                selectedExercise={selectedExercise}\r\n                setData={setData}\r\n                setWorkoutDate={setWorkoutDate}\r\n                setSelectedExercise={setSelectedExercise}\r\n                setActiveCardId={setActiveCardId}\r\n              />\r\n            )}\r\n          </>\r\n        ) : (\r\n          <Table\r\n            columns={columns}\r\n            className={styles.table}\r\n            locale={{ emptyText: <EmptyBox /> }}\r\n          />\r\n        )}\r\n      </ConfigProvider>\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"addExercise\":\"AddExercise_addExercise__7FNxa\",\"button\":\"AddExercise_button__mkO2c\"};","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { doc, getDoc, getFirestore, updateDoc } from \"firebase/firestore\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { CustomButton } from \"../../../components/CustomButton/CustomButton\";\r\nimport { CustomInput } from \"../../../components/CustomInput/CustomInput\";\r\nimport { SubTitle } from \"../../../components/SubTitle/SubTitle\";\r\nimport { IAddExercise } from \"../../../types/types\";\r\nimport { ClosableMessage } from \"../../../components/ClosableMessage/ClosableMessage\";\r\n\r\nimport styles from \"./AddExercise.module.scss\";\r\n\r\nexport const AddExercise: React.FC<IAddExercise> = ({\r\n  onAddExercise,\r\n  category,\r\n}) => {\r\n  const user = getAuth().currentUser;\r\n  const { t } = useTranslation();\r\n  const [exerciseName, setExerciseName] = useState(\"\");\r\n\r\n  const handleAddExercise = async () => {\r\n    if (!exerciseName) {\r\n      ClosableMessage({ type: \"error\", content: t(\"typeExercise\") });\r\n      return;\r\n    }\r\n    try {\r\n      if (user) {\r\n        const userId = user.uid;\r\n        const exercise = {\r\n          id: uuidv4(),\r\n          name: exerciseName,\r\n          category: category,\r\n          bestResult: {\r\n            weight: \"0\",\r\n            reps: \"0\",\r\n          },\r\n          isFavorite: false,\r\n        };\r\n        const exercisesDocRef = doc(getFirestore(), \"exercises\", userId);\r\n        const docSnapshot = await getDoc(exercisesDocRef);\r\n\r\n        if (docSnapshot.exists()) {\r\n          const existingExercises = docSnapshot.data().exercises || [];\r\n\r\n          const exercisesInCategory = existingExercises.filter(\r\n            (existingExercise: { category: string }) =>\r\n              existingExercise.category === category\r\n          );\r\n\r\n          if (exercisesInCategory.length >= 10) {\r\n            ClosableMessage({\r\n              type: \"error\",\r\n              content: t(\"maxExercisesReached\"),\r\n            });\r\n            return;\r\n          }\r\n\r\n          const exerciseExists = existingExercises.some(\r\n            (existingExercise: { name: string }) =>\r\n              existingExercise.name.toLowerCase() === exerciseName.toLowerCase()\r\n          );\r\n\r\n          if (exerciseExists) {\r\n            ClosableMessage({ type: \"error\", content: t(\"nameAlreadyExists\") });\r\n            setExerciseName(\"\");\r\n            return;\r\n          }\r\n\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: [...existingExercises, exercise],\r\n          });\r\n        } else {\r\n          await updateDoc(exercisesDocRef, {\r\n            exercises: [exercise],\r\n          });\r\n        }\r\n\r\n        setExerciseName(\"\");\r\n        onAddExercise();\r\n        ClosableMessage({ type: \"success\", content: t(\"exerciseAdded\") });\r\n      }\r\n    } catch (error) {\r\n      ClosableMessage({ type: \"error\", content: t(\"errorAddingExercise\") });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SubTitle>{t(\"addAnExercise\")}</SubTitle>\r\n      <div className={styles.addExercise}>\r\n        <CustomInput\r\n          value={exerciseName}\r\n          onChange={(value: string) => setExerciseName(value)}\r\n          text={t(\"exerciseName\")}\r\n          placeholder={t(\"typeExercise\")}\r\n        />\r\n        <CustomButton\r\n          className={styles.button}\r\n          icon={<PlusOutlined />}\r\n          onClick={handleAddExercise}\r\n        >\r\n          {t(\"addExerciseBtn\")}\r\n        </CustomButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { DescriptionTitle } from \"../../components/DescriptionTitle/DescriptionTitle\";\r\nimport { PageWrapper } from \"../../components/PageWrapper/PageWrapper\";\r\nimport { IExercise, ILocationState } from \"../../types/types\";\r\nimport { scrollToTop } from \"../../utils/scrollToTop\";\r\n\r\nimport { Exercises } from \"./Exercises/Exercises\";\r\nimport { ExerciseTable } from \"./ExerciseTable/ExerciseTable\";\r\nimport { AddExercise } from \"./AddExercise/AddExercise\";\r\n\r\nconst Workout: React.FC = () => {\r\n  const location = useLocation();\r\n  const state = location.state as ILocationState;\r\n  const [data, setData] = useState<IExercise[]>([]);\r\n  const [updateTrigger, setUpdateTrigger] = useState(0);\r\n  const [selectedExercise, setSelectedExercise] = useState<IExercise | null>(\r\n    null\r\n  );\r\n  const [activeCardId, setActiveCardId] = useState<string | null>(null);\r\n  const exercisesRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    scrollToTop();\r\n  }, []);\r\n\r\n  const handleUpdateExercises = () => {\r\n    setUpdateTrigger((prev) => prev + 1);\r\n\r\n    if (exercisesRef.current) {\r\n      exercisesRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  const handleSelectExercise = (exercise: IExercise) => {\r\n    const exerciseData = data.find((item) => item.id === exercise.id);\r\n\r\n    if (exerciseData) {\r\n      setSelectedExercise(exercise);\r\n    } else {\r\n      setSelectedExercise(null);\r\n      setData([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div style={{ minHeight: \"100vh\" }}>\r\n        <DescriptionTitle text={state.title} textAlign=\"center\" />\r\n        <AddExercise\r\n          category={state?.title}\r\n          onAddExercise={handleUpdateExercises}\r\n        />\r\n        <Exercises\r\n          category={state?.title}\r\n          updateTrigger={updateTrigger}\r\n          onSelectExercise={handleSelectExercise}\r\n          exercisesRef={exercisesRef}\r\n          activeCardId={activeCardId}\r\n          setActiveCardId={setActiveCardId}\r\n          setSelectedExercise={setSelectedExercise}\r\n          data={data}\r\n          setData={setData}\r\n        />\r\n        <ExerciseTable\r\n          selectedExercise={selectedExercise}\r\n          setSelectedExercise={setSelectedExercise}\r\n          setActiveCardId={setActiveCardId}\r\n        />\r\n      </div>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default Workout;\r\n","export const scrollToTop = () =>\r\n  setTimeout(() => {\r\n    window.scrollTo({\r\n      left: 0,\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, 100);\r\n"],"names":["ClosableMessage","_ref","type","content","key","message","_jsxs","children","_jsx","CloseOutlined","onClick","closeMessage","destroy","className","styles","CustomInput","name","text","placeholder","isRequired","onChange","value","ref","controls","useAnimatedInView","t","useTranslation","motion","div","initial","animate","variants","animation","Form","Item","label","rules","required","Input","allowClear","e","target","autoComplete","CustomModal","open","onCancel","footer","useEffect","document","body","style","overflow","ConfigProvider","theme","components","Modal","contentBg","colorIcon","colorIconHover","centered","DescriptionTitle","textAlign","h2","descriptionTitle","Hexagon","src","process","alt","NumericInput","onBlur","replace","length","startsWith","substring","test","inputMode","pattern","forwardRef","container","maxWidth","margin","PageWrapper","ResetButton","icon","Button","SettingButton","SubTitle","p","threshold","arguments","undefined","triggerOnce","animationVariants","useAnimation","inView","useInView","start","hidden","opacity","visible","transition","duration","EmptyBox","Empty","image","PRESENTED_IMAGE_SIMPLE","description","color","CardOptions","item","category","setData","setCurrentEditingId","setNewName","editMode","setEditMode","isActive","setIsActive","useState","StarFilled","stopPropagation","async","exerciseId","currentStatus","user","getAuth","currentUser","userId","uid","exercisesDocRef","doc","getFirestore","exercisesDoc","getDoc","exists","exercisesData","data","favoriteExercisesCount","exercises","filter","exercise","isFavorite","updatedExercises","map","id","updateDoc","translatedCategory","filteredData","error","toggleFavorite","CheckOutlined","EditOutlined","handleEditClick","currentName","ModalDelete","setLoading","setIsModalOpen","isModalOpen","handleCancel","setConfirm","setSelectedExercise","setsCollectionRef","deleteDoc","localStorage","setItem","JSON","stringify","scrollToTop","handleDeleteCard","DeleteOutlined","DeleteIcon","index","confirm","_Fragment","Tooltip","title","EditInput","newName","currentEditingId","inputRef","useRef","current","focus","changeExerciseName","currentExercise","find","trim","some","bestResult","onKeyDown","event","handleBlur","ExerciseCard","onSelectExercise","activeCardId","setActiveCardId","exercisesRef","handleCardClick","Exercises","updateTrigger","loading","storedData","parse","getItem","fetchExercises","Loader","scrollToBottom","setTimeout","window","scrollTo","left","top","scrollHeight","behavior","TrainingHistory","showHistory","workouts","workoutDates","sortedData","date","workout","sort","a","b","Date","getTime","items","toString","dateString","toLocaleDateString","w","i","set","weight","reps","extra","Collapse","bordered","expandIcon","_ref2","RightOutlined","rotate","TableFooter","selectedExercise","setEditWeight","saveExerciseData","onWorkoutDateChange","setCurrentWorkout","addRowBtn","setAddRowBtn","saveBtn","setSaveBtn","setDeleteBtn","setShowHistory","setWorkouts","setWorkoutDates","currentWorkoutIndex","setCurrentWorkoutIndex","hideButtons","setHideButtons","collection","setDocRef","docSnapshot","_docSnapshot$data","workoutsData","Array","isArray","approaches","lastIndex","console","loadWorkouts","isLastWorkout","addRow","newData","nextSet","newRow","push","PlusOutlined","CustomButton","showPreviousWorkout","newIndex","LeftOutlined","showNextWorkout","startNewTraining","BestResult","setBestResult","setWeight","setReps","isSaving","setIsSaving","handleSave","exerciseToUpdate","updatedBestResult","Number","saveBestResult","handleEditMode","DeleteWorkout","workoutDate","setWorkoutDate","contextHolder","useMessage","confirmDelete","filteredWorkouts","toLocaleString","success","deleteWorkoutByDate","ExerciseTable","editWeight","editReps","setEditReps","currentWorkout","deleteBtn","weightInputRef","repsInputRef","loadExerciseData","useCallback","Promise","all","documentData","latestWorkout","loadedData","approach","ex","columns","dataIndex","width","render","record","updateWeight","row","updateReps","handleWorkoutDateChange","formattedDate","isNaN","Divider","backgroundColor","Table","headerBg","headerColor","cellFontSize","colorBgContainer","colorText","borderColor","cellPaddingBlock","rowKey","dataSource","pagination","locale","emptyText","validData","batch","writeBatch","setDoc","newWorkout","uuidv4","toISOString","update","commit","AddExercise","onAddExercise","exerciseName","setExerciseName","existingExercises","existingExercise","toLowerCase","Workout","state","useLocation","setUpdateTrigger","minHeight","handleUpdateExercises","prev","scrollIntoView"],"sourceRoot":""}